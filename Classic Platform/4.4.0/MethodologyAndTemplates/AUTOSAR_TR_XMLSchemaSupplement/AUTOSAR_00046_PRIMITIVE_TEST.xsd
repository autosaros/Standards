<?xml version="1.0" encoding="iso-8859-1"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://autosar.org/schema/r4.0" xmlns:AR="http://autosar.org/schema/r4.0"><xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"></xsd:import><xsd:element name="AUTOSAR-PRIMITIVE-TESTS"><xsd:complexType><xsd:sequence><xsd:element name="ACCESS-CONTROL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ACCESS-CONTROL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ACL-SCOPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ACL-SCOPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ADDITIONAL-BINDING-TIME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ADDITIONAL-BINDING-TIME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ADDRESS" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ADDRESS" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ALIGN-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ALIGN-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ALIGNMENT-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ALIGNMENT-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ANY-SERVICE-INSTANCE-ID" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ANY-SERVICE-INSTANCE-ID" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ANY-VERSION-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ANY-VERSION-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="API-PRINCIPLE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:API-PRINCIPLE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="AREA-ENUM-NOHREF" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:AREA-ENUM-NOHREF" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="AREA-ENUM-SHAPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:AREA-ENUM-SHAPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ARGUMENT-DIRECTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ARGUMENT-DIRECTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ARRAY-SIZE-HANDLING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ARRAY-SIZE-HANDLING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ARRAY-SIZE-SEMANTICS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ARRAY-SIZE-SEMANTICS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ASAM-RECORD-LAYOUT-SEMANTICS" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ASAM-RECORD-LAYOUT-SEMANTICS" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="AUTO-COLLECT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:AUTO-COLLECT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="AXIS-INDEX-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:AXIS-INDEX-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BASE-TYPE-ENCODING-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BASE-TYPE-ENCODING-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BINDING-TIME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BINDING-TIME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BOOLEAN" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BOOLEAN" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BSW-CALL-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BSW-CALL-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BSW-ENTRY-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BSW-ENTRY-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BSW-ENTRY-RELATIONSHIP-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BSW-ENTRY-RELATIONSHIP-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BSW-EXECUTION-CONTEXT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BSW-EXECUTION-CONTEXT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BSW-INTERRUPT-CATEGORY" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BSW-INTERRUPT-CATEGORY" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BUILD-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BUILD-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="BYTE-ORDER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:BYTE-ORDER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="C-IDENTIFIER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:C-IDENTIFIER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="C-IDENTIFIER-WITH-INDEX" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:C-IDENTIFIER-WITH-INDEX" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CALPRM-AXIS-CATEGORY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CALPRM-AXIS-CATEGORY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CAN-ADDRESSING-MODE-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CAN-ADDRESSING-MODE-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CAN-FRAME-RX-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CAN-FRAME-RX-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CAN-FRAME-TX-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CAN-FRAME-TX-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CAN-TP-ADDRESSING-FORMAT-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CAN-TP-ADDRESSING-FORMAT-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CAN-TP-CHANNEL-MODE-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CAN-TP-CHANNEL-MODE-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CATEGORY-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CATEGORY-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CHAPTER-ENUM-BREAK" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CHAPTER-ENUM-BREAK" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CLIENT-CAPABILITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CLIENT-CAPABILITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="COMMAND-LINE-OPTION-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:COMMAND-LINE-OPTION-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="COMMUNICATION-DIRECTION-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:COMMUNICATION-DIRECTION-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CONTAINED-I-PDU-COLLECTION-SEMANTICS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CONTAINED-I-PDU-COLLECTION-SEMANTICS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CONTAINER-I-PDU-HEADER-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CONTAINER-I-PDU-HEADER-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CONTAINER-I-PDU-TRIGGER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CONTAINER-I-PDU-TRIGGER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="COUPLING-ELEMENT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:COUPLING-ELEMENT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="COUPLING-PORT-RATE-POLICY-ACTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:COUPLING-PORT-RATE-POLICY-ACTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="COUPLING-PORT-ROLE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:COUPLING-PORT-ROLE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CRYPTO-CERTIFICATE-ALGORITHM-FAMILY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CRYPTO-CERTIFICATE-ALGORITHM-FAMILY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CRYPTO-CERTIFICATE-FORMAT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CRYPTO-CERTIFICATE-FORMAT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CRYPTO-SERVICE-KEY-GENERATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CRYPTO-SERVICE-KEY-GENERATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CS-TRANSFORMER-ERROR-REACTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CS-TRANSFORMER-ERROR-REACTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CSE-CODE-TYPE-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CSE-CODE-TYPE-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="CYCLE-REPETITION-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:CYCLE-REPETITION-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-EXCHANGE-POINT-KIND" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-EXCHANGE-POINT-KIND" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-FILTER-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-FILTER-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-ID-MODE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-ID-MODE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-LIMIT-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-LIMIT-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-TRANSFORMATION-ERROR-HANDLING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-TRANSFORMATION-ERROR-HANDLING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-TRANSFORMATION-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-TRANSFORMATION-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATA-TYPE-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATA-TYPE-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DATE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DATE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DDS-IDENTIFIER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DDS-IDENTIFIER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DEFAULT-VALUE-APPLICATION-STRATEGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DEFAULT-VALUE-APPLICATION-STRATEGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DEPENDENCY-USAGE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DEPENDENCY-USAGE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAG-PDU-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAG-PDU-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAG-REQUIREMENT-ID-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAG-REQUIREMENT-ID-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-ACCESS-PERMISSION-VALIDITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-ACCESS-PERMISSION-VALIDITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-AUDIENCE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-AUDIENCE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-CLEAR-DTC-LIMITATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-CLEAR-DTC-LIMITATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-CLEAR-EVENT-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-CLEAR-EVENT-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-COMPARE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-COMPARE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-CONNECTED-INDICATOR-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-CONNECTED-INDICATOR-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-DATA-CAPTURE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-DATA-CAPTURE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-DENOMINATOR-CONDITION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-DENOMINATOR-CONDITION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-SUBFUNCTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-SUBFUNCTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-EVENT-CLEAR-ALLOWED-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-EVENT-CLEAR-ALLOWED-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-EVENT-DISPLACEMENT-STRATEGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-EVENT-DISPLACEMENT-STRATEGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-EVENT-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-EVENT-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-EVENT-WINDOW-TIME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-EVENT-WINDOW-TIME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-HANDLE-DDDI-CONFIGURATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-HANDLE-DDDI-CONFIGURATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-INDICATOR-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-INDICATOR-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-INHIBITION-MASK-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-INHIBITION-MASK-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-INITIAL-EVENT-STATUS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-INITIAL-EVENT-STATUS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-JUMP-TO-BOOT-LOADER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-JUMP-TO-BOOT-LOADER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-LOGICAL-OPERATOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-LOGICAL-OPERATOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-MEMORY-ENTRY-STORAGE-TRIGGER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-MEMORY-ENTRY-STORAGE-TRIGGER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-MONITOR-UPDATE-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-MONITOR-UPDATE-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-OBD-SUPPORT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-OBD-SUPPORT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-OCCURRENCE-COUNTER-PROCESSING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-OCCURRENCE-COUNTER-PROCESSING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-OPERATION-CYCLE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-OPERATION-CYCLE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-PERIODIC-RATE-CATEGORY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-PERIODIC-RATE-CATEGORY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-PROCESSING-STYLE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-PROCESSING-STYLE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-RECORD-TRIGGER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-RECORD-TRIGGER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-RESPONSE-ON-EVENT-ACTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-RESPONSE-ON-EVENT-ACTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-RESPONSE-TO-ECU-RESET-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-RESPONSE-TO-ECU-RESET-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-ROUTINE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-ROUTINE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-SERVICE-REQUEST-CALLBACK-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-SERVICE-REQUEST-CALLBACK-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-SIGNIFICANCE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-SIGNIFICANCE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-STORE-EVENT-SUPPORT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-STORE-EVENT-SUPPORT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-TROUBLE-CODE-J-1939-DTC-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-TROUBLE-CODE-J-1939-DTC-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-TYPE-OF-DTC-SUPPORTED-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-TYPE-OF-DTC-SUPPORTED-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-UDS-SEVERITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-UDS-SEVERITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-VALUE-ACCESS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-VALUE-ACCESS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DISCOVERY-TECHNOLOGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DISCOVERY-TECHNOLOGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DISPLAY-FORMAT-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DISPLAY-FORMAT-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DISPLAY-PRESENTATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DISPLAY-PRESENTATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DO-IP-ENTITY-ROLE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DO-IP-ENTITY-ROLE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DTC-FORMAT-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DTC-FORMAT-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="DTC-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:DTC-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="E-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:E-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="E-ENUM-FONT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:E-ENUM-FONT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ECUC-AFFECTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ECUC-AFFECTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ECUC-CONFIGURATION-CLASS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ECUC-CONFIGURATION-CLASS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ECUC-CONFIGURATION-VARIANT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ECUC-CONFIGURATION-VARIANT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ECUC-DESTINATION-URI-NESTING-CONTRACT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ECUC-DESTINATION-URI-NESTING-CONTRACT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ECUC-SCOPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ECUC-SCOPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="END-TO-END-PROFILE-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:END-TO-END-PROFILE-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ENVIRONMENT-CAPTURE-TO-REPORTING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ENVIRONMENT-CAPTURE-TO-REPORTING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETH-GLOBAL-TIME-MESSAGE-FORMAT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETH-GLOBAL-TIME-MESSAGE-FORMAT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-CONNECTION-NEGOTIATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-CONNECTION-NEGOTIATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-COUPLING-PORT-SCHEDULER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-COUPLING-PORT-SCHEDULER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-MAC-LAYER-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-MAC-LAYER-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-PHYSICAL-LAYER-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-PHYSICAL-LAYER-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-SWITCH-VLAN-EGRESS-TAGGING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-SWITCH-VLAN-EGRESS-TAGGING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ETHERNET-SWITCH-VLAN-INGRESS-TAG-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ETHERNET-SWITCH-VLAN-INGRESS-TAG-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EVENT-ACCEPTANCE-STATUS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EVENT-ACCEPTANCE-STATUS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EVENT-GROUP-CONTROL-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EVENT-GROUP-CONTROL-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EVENT-OCCURRENCE-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EVENT-OCCURRENCE-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EXECUTION-ORDER-CONSTRAINT-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EXECUTION-ORDER-CONSTRAINT-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EXECUTION-TIME-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EXECUTION-TIME-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="EXT-ID-CLASS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:EXT-ID-CLASS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FILTER-DEBOUNCING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FILTER-DEBOUNCING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FLEXRAY-CHANNEL-NAME" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FLEXRAY-CHANNEL-NAME" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FLEXRAY-NM-SCHEDULE-VARIANT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FLEXRAY-NM-SCHEDULE-VARIANT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FLOAT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FLOAT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FLOAT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FLOAT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FM-FEATURE-SELECTION-STATE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FM-FEATURE-SELECTION-STATE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FR-AR-TP-ACK-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FR-AR-TP-ACK-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FRAME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FRAME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="FULL-BINDING-TIME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:FULL-BINDING-TIME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="GLOBAL-TIME-CRC-SUPPORT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:GLOBAL-TIME-CRC-SUPPORT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="GLOBAL-TIME-CRC-VALIDATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:GLOBAL-TIME-CRC-VALIDATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="GRAPHIC-FIT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:GRAPHIC-FIT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="GRAPHIC-NOTATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:GRAPHIC-NOTATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HANDLE-INVALID-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HANDLE-INVALID-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HANDLE-OUT-OF-RANGE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HANDLE-OUT-OF-RANGE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HANDLE-OUT-OF-RANGE-STATUS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HANDLE-OUT-OF-RANGE-STATUS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HANDLE-TERMINATION-AND-RESTART-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HANDLE-TERMINATION-AND-RESTART-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HANDLE-TIMEOUT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HANDLE-TIMEOUT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HC-CONDITION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HC-CONDITION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HC-SUPERVISION-CONDITION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HC-SUPERVISION-CONDITION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="HTTP-ACCEPT-ENCODING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:HTTP-ACCEPT-ENCODING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="I-PDU-SIGNAL-PROCESSING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:I-PDU-SIGNAL-PROCESSING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="I-SIGNAL-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:I-SIGNAL-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IDENTIFIER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IDENTIFIER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IKE-AUTHENTICATION-METHOD-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IKE-AUTHENTICATION-METHOD-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="INSTALLATION-INSTRUCTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:INSTALLATION-INSTRUCTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="INTEGER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:INTEGER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="INTERVAL-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:INTERVAL-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IP-ADDRESS-KEEP-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IP-ADDRESS-KEEP-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IP-SEC-CONNECTION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IP-SEC-CONNECTION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IP4-ADDRESS-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IP4-ADDRESS-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IP6-ADDRESS-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IP6-ADDRESS-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IPV-4-ADDRESS-SOURCE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IPV-4-ADDRESS-SOURCE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="IPV-6-ADDRESS-SOURCE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:IPV-6-ADDRESS-SOURCE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ITEM-LABEL-POS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ITEM-LABEL-POS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="KEEP-WITH-PREVIOUS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:KEEP-WITH-PREVIOUS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="KEY-USAGE-RESTRICTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:KEY-USAGE-RESTRICTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="L-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:L-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LATENCY-CONSTRAINT-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LATENCY-CONSTRAINT-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LIMIT-VALUE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LIMIT-VALUE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LIN-CHECKSUM-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LIN-CHECKSUM-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LIST-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LIST-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LOG-TRACE-DEFAULT-LOG-LEVEL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LOG-TRACE-DEFAULT-LOG-LEVEL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="LOG-TRACE-LOG-MODE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:LOG-TRACE-LOG-MODE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MAC-ADDRESS-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MAC-ADDRESS-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MAPPING-DIRECTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MAPPING-DIRECTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MAPPING-SCOPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MAPPING-SCOPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MAX-COMM-MODE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MAX-COMM-MODE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MAXIMUM-MESSAGE-LENGTH-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MAXIMUM-MESSAGE-LENGTH-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MCD-IDENTIFIER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MCD-IDENTIFIER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MEMORY-ALLOCATION-KEYWORD-POLICY-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MEMORY-ALLOCATION-KEYWORD-POLICY-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MEMORY-SECTION-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MEMORY-SECTION-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="META-CLASS-NAME" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:META-CLASS-NAME" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MIME-TYPE-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MIME-TYPE-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MODE-ACTIVATION-KIND" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MODE-ACTIVATION-KIND" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MODE-ERROR-REACTION-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MODE-ERROR-REACTION-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MODIFICATION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MODIFICATION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="MONOTONY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:MONOTONY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NATIVE-DECLARATION-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NATIVE-DECLARATION-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NETWORK-TARGET-ADDRESS-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NETWORK-TARGET-ADDRESS-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NM-COORDINATOR-ROLE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NM-COORDINATOR-ROLE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NMTOKEN-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NMTOKEN-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NMTOKENS-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NMTOKENS-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NORMALIZED-INSTRUCTION" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NORMALIZED-INSTRUCTION" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NOTE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NOTE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NUMERICAL-VALUE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NUMERICAL-VALUE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NV-BLOCK-NEEDS-RELIABILITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NV-BLOCK-NEEDS-RELIABILITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="NV-BLOCK-NEEDS-WRITING-PRIORITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:NV-BLOCK-NEEDS-WRITING-PRIORITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="OBD-RATIO-CONNECTION-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:OBD-RATIO-CONNECTION-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="OPERATION-CYCLE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:OPERATION-CYCLE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="ORIENT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:ORIENT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PDU-COLLECTION-SEMANTICS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PDU-COLLECTION-SEMANTICS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PDU-COLLECTION-TRIGGER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PDU-COLLECTION-TRIGGER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PERSISTENCY-COLLECTION-LEVEL-UPDATE-STRATEGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PERSISTENCY-COLLECTION-LEVEL-UPDATE-STRATEGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PERSISTENCY-ELEMENT-LEVEL-UPDATE-STRATEGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PERSISTENCY-ELEMENT-LEVEL-UPDATE-STRATEGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PERSISTENCY-REDUNDANCY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PERSISTENCY-REDUNDANCY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PGWIDE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PGWIDE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PHM-ACTION-LIST-EXECUTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PHM-ACTION-LIST-EXECUTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PHM-LOGICAL-OPERATOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PHM-LOGICAL-OPERATOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PHM-RULE-INIT-STATE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PHM-RULE-INIT-STATE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PLATFORM-PHM-ACTION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PLATFORM-PHM-ACTION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PNC-GATEWAY-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PNC-GATEWAY-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PORT-INSTANTIATION-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PORT-INSTANTIATION-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="POSITIVE-INTEGER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:POSITIVE-INTEGER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="POSITIVE-UNLIMITED-INTEGER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:POSITIVE-UNLIMITED-INTEGER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PRIMITIVE-IDENTIFIER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PRIMITIVE-IDENTIFIER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PROCESS-PHM-ACTION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PROCESS-PHM-ACTION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PROCESSING-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PROCESSING-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PROGRAMMINGLANGUAGE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PROGRAMMINGLANGUAGE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="PULSE-TEST-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:PULSE-TEST-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RAM-BLOCK-STATUS-CONTROL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RAM-BLOCK-STATUS-CONTROL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RECEIVER-CAPABILITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RECEIVER-CAPABILITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RECORD-LAYOUT-ITERATOR-POINT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RECORD-LAYOUT-ITERATOR-POINT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REENTRANCY-LEVEL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REENTRANCY-LEVEL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REF" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REF" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REGULAR-EXPRESSION" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REGULAR-EXPRESSION" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REMOTING-TECHNOLOGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REMOTING-TECHNOLOGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REPORT-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REPORT-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REQUEST-METHOD-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REQUEST-METHOD-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REQUEST-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REQUEST-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RESOLUTION-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RESOLUTION-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RESUME-POSITION" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RESUME-POSITION" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="REVISION-LABEL-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:REVISION-LABEL-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RPT-ACCESS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RPT-ACCESS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RPT-ENABLER-IMPL-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RPT-ENABLER-IMPL-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RPT-EXECUTION-CONTROL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RPT-EXECUTION-CONTROL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RPT-PREPARATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RPT-PREPARATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RPT-SERVICE-POINT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RPT-SERVICE-POINT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RUN-MODE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RUN-MODE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RUNTIME-ADDRESS-CONFIGURATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RUNTIME-ADDRESS-CONFIGURATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="RX-ACCEPT-CONTAINED-I-PDU-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:RX-ACCEPT-CONTAINED-I-PDU-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SCALE-CONSTR-VALIDITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SCALE-CONSTR-VALIDITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SCHEDULING-POLICY-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SCHEDULING-POLICY-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SEARCH-BEHAVIOR-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SEARCH-BEHAVIOR-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SEC-OC-JOB-SEMANTIC-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SEC-OC-JOB-SEMANTIC-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SECTION-INITIALIZATION-POLICY-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SECTION-INITIALIZATION-POLICY-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SECURED-PDU-HEADER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SECURED-PDU-HEADER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SENDER-CAPABILITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SENDER-CAPABILITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SERVER-ARGUMENT-IMPL-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SERVER-ARGUMENT-IMPL-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SERVICE-PROVIDER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SERVICE-PROVIDER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SEVERITY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SEVERITY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-CONTENT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-CONTENT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-ALIAS-NAME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-ALIAS-NAME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-CATEGORY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-CATEGORY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-LONG-NAME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-LONG-NAME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-NUMBER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-NUMBER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-PAGE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-PAGE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-SHORT-NAME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-SHORT-NAME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-RESOURCE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-RESOURCE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SHOW-SEE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SHOW-SEE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SIGNAL-FAN-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SIGNAL-FAN-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SO-AD-CONNECTOR-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SO-AD-CONNECTOR-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SO-AD-PROTOCOL-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SO-AD-PROTOCOL-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SOFTWARE-CLUSTER-DIAGNOSTIC-ADDRESS-SEMANTICS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SOFTWARE-CLUSTER-DIAGNOSTIC-ADDRESS-SEMANTICS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SOMEIP-MESSAGE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SOMEIP-MESSAGE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SOMEIP-TRANSFORMER-SESSION-HANDLING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SOMEIP-TRANSFORMER-SESSION-HANDLING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="STANDARD-NAME-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:STANDARD-NAME-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="STORAGE-CONDITION-STATUS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:STORAGE-CONDITION-STATUS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SUPPORT-BUFFER-LOCKING-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SUPPORT-BUFFER-LOCKING-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SUPSCRIPT" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SUPSCRIPT" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SW-CALIBRATION-ACCESS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SW-CALIBRATION-ACCESS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SW-IMPL-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SW-IMPL-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SW-SERVICE-IMPL-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SW-SERVICE-IMPL-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SW-SERVICE-REENTRANCE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SW-SERVICE-REENTRANCE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SW-VARIABLE-ACCESS-IMPL-POLICY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SW-VARIABLE-ACCESS-IMPL-POLICY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SWC-TO-SWC-OPERATION-ARGUMENTS-DIRECTION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SWC-TO-SWC-OPERATION-ARGUMENTS-DIRECTION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SYMBOL-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SYMBOL-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="SYNCHRONIZATION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:SYNCHRONIZATION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TABLE-SEPARATOR-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TABLE-SEPARATOR-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-BSW-MODE-DECLARATION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-BSW-MODE-DECLARATION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-BSW-MODULE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-BSW-MODULE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-FRAME-ETHERNET-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-FRAME-ETHERNET-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-FRAME-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-FRAME-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-I-PDU-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-I-PDU-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-I-SIGNAL-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-I-SIGNAL-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-MODE-DECLARATION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-MODE-DECLARATION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-OPERATION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-OPERATION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-TRIGGER-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-TRIGGER-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TIME-SYNC-TECHNOLOGY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TIME-SYNC-TECHNOLOGY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TIME-SYNCHRONIZATION-KIND-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TIME-SYNCHRONIZATION-KIND-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TIME-VALUE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TIME-VALUE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TLS-VERSION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TLS-VERSION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TP-ACK-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TP-ACK-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TRANSFER-PROPERTY-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TRANSFER-PROPERTY-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TRANSFORMER-CLASS-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TRANSFORMER-CLASS-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TRANSPORT-LAYER-PROTOCOL-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TRANSPORT-LAYER-PROTOCOL-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TRIGGER-MODE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TRIGGER-MODE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="TTCAN-TRIGGER-TYPE" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:TTCAN-TRIGGER-TYPE" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="UDP-CHECKSUM-CALCULATION-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:UDP-CHECKSUM-CALCULATION-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="UDP-COLLECTION-TRIGGER-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:UDP-COLLECTION-TRIGGER-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="UNLIMITED-INTEGER" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:UNLIMITED-INTEGER" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="URI-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:URI-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="V-2-X-SUPPORT-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:V-2-X-SUPPORT-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="VALIGN-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:VALIGN-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="VARIABLE-ACCESS-SCOPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:VARIABLE-ACCESS-SCOPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="VERBATIM-STRING" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:VERBATIM-STRING" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="VERBATIM-STRING-PLAIN" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:VERBATIM-STRING-PLAIN" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="VIEW-TOKENS" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:VIEW-TOKENS" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="WATCHDOG-PHM-ACTION-TYPE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:WATCHDOG-PHM-ACTION-TYPE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:element name="XML-SPACE-ENUM" minOccurs="0"><xsd:complexType><xsd:sequence><xsd:element name="TEST" type="AR:XML-SPACE-ENUM" maxOccurs="unbounded"></xsd:element></xsd:sequence></xsd:complexType></xsd:element></xsd:sequence></xsd:complexType></xsd:element><xsd:simpleType name="ACCESS-CONTROL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CUSTOM">
            <xsd:annotation>
               <xsd:documentation>The access restriction to the resource is defined by a non-AUTOSAR process.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AccessControlEnum.custom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MODELED">
            <xsd:annotation>
               <xsd:documentation>The access restriction to the resource is modeled in the AUTOSAR Application Design model or the AUTOSAR Deployment model.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AccessControlEnum.modeled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ACL-SCOPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEPENDANT">
            <xsd:annotation>
               <xsd:documentation>This specifies that the AclPermission applies to dependant (in particular referenced) operations / objects as well. Note that this includes the descendant ones.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AclScopeEnum.dependant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DESCENDANT">
            <xsd:annotation>
               <xsd:documentation>This specifies that the AclPermission applies to descendant  operations / objects as well.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AclScopeEnum.descendant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXPLICIT">
            <xsd:annotation>
               <xsd:documentation>This is indicates that the AclPermission applies to explicit objects / operations only.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="AclScopeEnum.explicit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ADDITIONAL-BINDING-TIME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BLUEPRINT-DERIVATION-TIME">
            <xsd:annotation>
               <xsd:documentation>The point in time when an object is created from a blueprint.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AdditionalBindingTimeEnum.blueprintDerivationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>After the executable has been built.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AdditionalBindingTimeEnum.postBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ADDRESS--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="0x[0-9a-z]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ALIGN-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CENTER">
            <xsd:annotation>
               <xsd:documentation>The content of the table is horizontally centered.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AlignEnum.center"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JUSTIFY">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of table cell shall be justified (rendered as a block where white-space is expanded such that all lines are filled up).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AlignEnum.justify"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LEFT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of a table cell is left justified.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="AlignEnum.left"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RIGHT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the content of a table cell is left justified.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="AlignEnum.right"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ALIGNMENT-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0[xX][0-9a-fA-F]*|0[bB][0-1]+|0[0-7]*|UNSPECIFIED|UNKNOWN|BOOLEAN|PTR"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ANY-SERVICE-INSTANCE-ID--SIMPLE">
      <xsd:annotation>
         <xsd:appinfo source="tags">atp.Status="draft"</xsd:appinfo>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[0-7]*|0[bB][0-1]+|ANY"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ANY-VERSION-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9]+|ANY"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="API-PRINCIPLE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COMMON">
            <xsd:annotation>
               <xsd:documentation>The Rte or SchM API is provided for the whole software component / BSW Module</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ApiPrincipleEnum.common"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PER-EXECUTABLE">
            <xsd:annotation>
               <xsd:documentation>The Rte or SchM API is provided for a specific ExecutableEntity of a software component / BSW Module</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ApiPrincipleEnum.perExecutable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="AREA-ENUM-NOHREF--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOHREF">
            <xsd:annotation>
               <xsd:documentation>This indicates that the area has no active link.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AreaEnumNohref.nohref"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="AREA-ENUM-SHAPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CIRCLE">
            <xsd:annotation>
               <xsd:documentation>The shape is a circle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AreaEnumShape.circle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFAULT">
            <xsd:annotation>
               <xsd:documentation>This specifies the fact that the area covers the rest of the figure.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AreaEnumShape.default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POLY">
            <xsd:annotation>
               <xsd:documentation>The area is specified as polygon.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="AreaEnumShape.poly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RECT">
            <xsd:annotation>
               <xsd:documentation>The shape is specified as rectangle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="AreaEnumShape.rect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ARGUMENT-DIRECTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IN">
            <xsd:annotation>
               <xsd:documentation>The argument value is passed to the callee.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ArgumentDirectionEnum.in"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INOUT">
            <xsd:annotation>
               <xsd:documentation>The argument value is passed to the callee but also passed back from the callee to the caller.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ArgumentDirectionEnum.inout"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OUT">
            <xsd:annotation>
               <xsd:documentation>The argument value is passed from the callee  to the caller.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ArgumentDirectionEnum.out"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ARRAY-SIZE-HANDLING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL-INDICES-DIFFERENT-ARRAY-SIZE">
            <xsd:annotation>
               <xsd:documentation>All elements of the variable size array may have different sizes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ArraySizeHandlingEnum.allIndicesDifferentArraySize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ALL-INDICES-SAME-ARRAY-SIZE">
            <xsd:annotation>
               <xsd:documentation>All elements of the variable size array have the same size.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ArraySizeHandlingEnum.allIndicesSameArraySize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INHERITED-FROM-ARRAY-ELEMENT-TYPE-SIZE">
            <xsd:annotation>
               <xsd:documentation>The size of all dimensions of the variable size array is determined by the size of the contained array element.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ArraySizeHandlingEnum.inheritedFromArrayElementTypeSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ARRAY-SIZE-SEMANTICS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FIXED-SIZE">
            <xsd:annotation>
               <xsd:documentation>This means that the ApplicationArrayDataType will always have a fixed number of elements.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ArraySizeSemanticsEnum.fixedSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIABLE-SIZE">
            <xsd:annotation>
               <xsd:documentation>This implies that the actual number of elements in the ApplicationArrayDataType might vary at run-time. The value of arraySize represents the maximum number of elements in the array.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ArraySizeSemanticsEnum.variableSize"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ASAM-RECORD-LAYOUT-SEMANTICS--SIMPLE">
      <xsd:restriction base="xsd:NMTOKEN"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="AUTO-COLLECT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="REF-ALL">
            <xsd:annotation>
               <xsd:documentation>All objects being referenced (recursively) from the objects mentioned directly in the collection are also considered as part of the collection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="AutoCollectEnum.refAll"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REF-NON-STANDARD">
            <xsd:annotation>
               <xsd:documentation>This indicates that non standard objects ([TPS_GST_00088]) referenced (recursively) by the objects mentioned directly in the collection are also considered to be part of the collection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="AutoCollectEnum.refNonStandard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REF-NONE">
            <xsd:annotation>
               <xsd:documentation>This indicates that only those objects mentioned directly in the collection are part of the collection. No other objects are considered further.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="AutoCollectEnum.refNone"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="AXIS-INDEX-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9]+|STRING|ARRAY"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BASE-TYPE-ENCODING-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BINDING-TIME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CODE-GENERATION-TIME">
            <xsd:annotation>
               <xsd:documentation>* Coding by hand, based on requirements document.
* Tool based code generation, e.g. from a model.
* The model may contain variants.
* Only code for the selected variant(s) is actually generated.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BindingTimeEnum.codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK-TIME">
            <xsd:annotation>
               <xsd:documentation>Configure what is included in object code, and what is omitted
Based on which variant(s) are selected
E.g. for modules that are delivered as object code (as opposed to those that are delivered as source code)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BindingTimeEnum.linkTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRE-COMPILE-TIME">
            <xsd:annotation>
               <xsd:documentation>This is typically the C-Preprocessor.
Exclude parts of the code from the compilation process, e.g.,
because they are not required for the selected variant,
because they are incompatible with the selected variant,
because they require resources that are not present in the selected variant.
Object code is only generated for the selected variant(s).
The code that is excluded at this stage code will not be available at later stages.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="BindingTimeEnum.preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYSTEM-DESIGN-TIME">
            <xsd:annotation>
               <xsd:documentation>* Designing the VFB.
* Software Component types (PortInterfaces).
* SWC Prototypes and the Connections between SWCprototypes.
* Designing the Topology
* ECUs and interconnecting Networks
* Designing the Communication Matrix and Data Mapping</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="BindingTimeEnum.systemDesignTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BOOLEAN--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="0|1|true|false"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BSW-CALL-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CALLBACK">
            <xsd:annotation>
               <xsd:documentation>Callback (i.e. the caller specifies the signature)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BswCallType.callback"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CALLOUT">
            <xsd:annotation>
               <xsd:documentation>Callout - provide defined means to extend the functionality of an existing module.  In this case caller specifies the signature.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="BswCallType.callout"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INTERRUPT">
            <xsd:annotation>
               <xsd:documentation>Interrupt routine</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BswCallType.interrupt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REGULAR">
            <xsd:annotation>
               <xsd:documentation>Regular API call</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="BswCallType.regular"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULED">
            <xsd:annotation>
               <xsd:documentation>Called by the scheduler</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="BswCallType.scheduled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BSW-ENTRY-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ABSTRACT">
            <xsd:annotation>
               <xsd:documentation>This BswModuleEntry specifies an abstract signature of C-functions. The signature needs to be implemented by concrete BswModuleEntrys</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BswEntryKindEnum.abstract"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONCRETE">
            <xsd:annotation>
               <xsd:documentation>This BswModuleEntry specifies a concrete C-function with its signature.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BswEntryKindEnum.concrete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BSW-ENTRY-RELATIONSHIP-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DERIVED-FROM">
            <xsd:annotation>
               <xsd:documentation>Describes that the BswModuleEntry referenced as "to" needs to have the same signature as the "abstract" BswModuleEntry referenced as "from".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BswEntryRelationshipEnum.derivedFrom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BSW-EXECUTION-CONTEXT--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HOOK">
            <xsd:annotation>
               <xsd:documentation>Context of an OS "hook" routine always</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BswExecutionContext.hook"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INTERRUPT-CAT-1">
            <xsd:annotation>
               <xsd:documentation>CAT1 interrupt context always</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BswExecutionContext.interruptCat1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INTERRUPT-CAT-2">
            <xsd:annotation>
               <xsd:documentation>CAT2 interrupt context always</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="BswExecutionContext.interruptCat2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TASK">
            <xsd:annotation>
               <xsd:documentation>Task context always</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="BswExecutionContext.task"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UNSPECIFIED">
            <xsd:annotation>
               <xsd:documentation>The execution context is not specified by the API</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="BswExecutionContext.unspecified"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BSW-INTERRUPT-CATEGORY--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAT-1">
            <xsd:annotation>
               <xsd:documentation>Cat1 interrupt routines are not controlled by the OS and are only allowed to make a very limited selection of OS calls to enable and disable all interrupts. The BswInterruptEntity  is implemented by the interrupt service routine, which is directly called from the interrupt vector (not via the OS).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BswInterruptCategory.cat1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAT-2">
            <xsd:annotation>
               <xsd:documentation>Cat2 interrupt routines are controlled by the OS and they are allowed to make OS calls. The BswInterruptEntity  is implemented by the interrupt handler, which is called from the OS.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BswInterruptCategory.cat2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BUILD-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BUILD-TYPE-DEBUG">
            <xsd:annotation>
               <xsd:documentation>Used for debugging.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="BuildTypeEnum.buildTypeDebug"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BUILD-TYPE-RELEASE">
            <xsd:annotation>
               <xsd:documentation>Used for releasing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="BuildTypeEnum.buildTypeRelease"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="BYTE-ORDER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MOST-SIGNIFICANT-BYTE-FIRST">
            <xsd:annotation>
               <xsd:documentation>Most significant byte shall come at the lowest address (also known as BigEndian or as Motorola-Format)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ByteOrderEnum.mostSignificantByteFirst"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MOST-SIGNIFICANT-BYTE-LAST">
            <xsd:annotation>
               <xsd:documentation>Most significant byte shall come highest address (also known as LittleEndian or as Intel-Format)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ByteOrderEnum.mostSignificantByteLast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPAQUE">
            <xsd:annotation>
               <xsd:documentation>For opaque data endianness conversion has to be configured to Opaque. See AUTOSAR COM Specification for more details.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ByteOrderEnum.opaque"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="C-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="C-IDENTIFIER-WITH-INDEX--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*\[[0-9]+\]"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CALPRM-AXIS-CATEGORY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COM-AXIS">
            <xsd:annotation>
               <xsd:documentation>COM-AXIS is equal to an STD_AXIS, the difference is, that a COM-AXIS is an shared axis, that means this axis can be used multiple times by different curves or maps. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.comAxis_O";xml.name="COM-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COM_AXIS">
            <xsd:annotation>
               <xsd:documentation>COM_AXIS is equal to an STD_AXIS, the difference is, that a COM_AXIS is an shared axis, that means this axis can be used multiple times by different CURVEs,  MAPs, CUBOIDs, CUBE_4s, and CUBE_5s.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CalprmAxisCategoryEnum.comAxis";xml.name="COM_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CURVE-AXIS">
            <xsd:annotation>
               <xsd:documentation>CURVE-AXIS uses a separate CURVE to rescale the axis. The referenced CURVE is used to lookup an axis index, and the index value is used by the controller to determine the operating point in the CURVE or MAP. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.curveAxis_O";xml.name="CURVE-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CURVE_AXIS">
            <xsd:annotation>
               <xsd:documentation>CURVE_AXIS uses a separate CURVE to rescale the axis. The referenced CURVE is used to lookup an axis index, and the index value is used by the controller to determine the operating point in the CURVE, MAP, CUBOID, CUBE_4, or CUBE_5.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.curveAxis";xml.name="CURVE_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIX-AXIS">
            <xsd:annotation>
               <xsd:documentation>FIX-AXIS means that the input axis is not stored. The axis is calculated using parameters  and so on it is also not possible to modify the axis points. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.fixAXIS_O";xml.name="FIX-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIX_AXIS">
            <xsd:annotation>
               <xsd:documentation>FIX_AXIS means that the input axis is not stored. The axis is calculated using parameters  and so on it is also not possible to modify the axis points.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="CalprmAxisCategoryEnum.fixAXIS";xml.name="FIX_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RES-AXIS">
            <xsd:annotation>
               <xsd:documentation>RES-AXIS is also an shared axis like COM_AXIS, the difference is that this kind of axis can be used for rescaling. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.resAxis_O";xml.name="RES-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RES_AXIS">
            <xsd:annotation>
               <xsd:documentation>RES_AXIS is also an shared axis like COM_AXIS, the difference is that this kind of axis can be used for rescaling.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="CalprmAxisCategoryEnum.resAxis";xml.name="RES_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STD-AXIS">
            <xsd:annotation>
               <xsd:documentation>STD-AXIS means that input and output axis definition are stored within this CURVE.
There is no shared or calculated axis. This value is obsolete.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";atp.Status="removed";mmt.qualifiedName="CalprmAxisCategoryEnum.stdAxis_O";xml.name="STD-AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STD_AXIS">
            <xsd:annotation>
               <xsd:documentation>STD_AXIS means that input and output axis definition are stored within this CURVE, MAP, CUBOID, CUBE_4, and CUBE_5.

There is no shared or calculated axis.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="CalprmAxisCategoryEnum.stdAxis";xml.name="STD_AXIS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CAN-ADDRESSING-MODE-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EXTENDED">
            <xsd:annotation>
               <xsd:documentation>Extended 29-bit-identifiers are used (CAN 2.0B)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CanAddressingModeType.extended"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>Standard 11-bit-identifiers are used (CAN 2.0A)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CanAddressingModeType.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CAN-FRAME-RX-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ANY">
            <xsd:annotation>
               <xsd:documentation>This CAN frame may be received as both, CAN 2.0 and CAN FD.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CanFrameRxBehaviorEnum.any"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAN-20">
            <xsd:annotation>
               <xsd:documentation>This CAN frame shall be received as CAN 2.0 only. In case the CAN frame is received as CAN FD it is discarded during reception.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CanFrameRxBehaviorEnum.can20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAN-FD">
            <xsd:annotation>
               <xsd:documentation>This CAN frame shall be received as CAN FD only. In case the CAN frame is received as CAN 2.0 it is discarded during reception.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CanFrameRxBehaviorEnum.canFd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CAN-FRAME-TX-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAN-20">
            <xsd:annotation>
               <xsd:documentation>This CAN frame shall be sent as CAN 2.0 only.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CanFrameTxBehaviorEnum.can20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAN-FD">
            <xsd:annotation>
               <xsd:documentation>This CAN frame shall be sent as CAN FD.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CanFrameTxBehaviorEnum.canFd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CAN-TP-ADDRESSING-FORMAT-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EXTENDED">
            <xsd:annotation>
               <xsd:documentation>To use extended addressing format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CanTpAddressingFormatType.extended"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MIXED">
            <xsd:annotation>
               <xsd:documentation>To use mixed 11bit addressing format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CanTpAddressingFormatType.mixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MIXED-29-BIT">
            <xsd:annotation>
               <xsd:documentation>To use mixed 29bit addressing format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CanTpAddressingFormatType.mixed29bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NORMALFIXED">
            <xsd:annotation>
               <xsd:documentation>To use normal fixed addressing format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="CanTpAddressingFormatType.normalfixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>To use normal addressing format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="CanTpAddressingFormatType.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CAN-TP-CHANNEL-MODE-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FULL-DUPLEX-MODE">
            <xsd:annotation>
               <xsd:documentation>full duplex channel mode</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CanTpChannelModeType.fullDuplexMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HALF-DUPLEX-MODE">
            <xsd:annotation>
               <xsd:documentation>half duplex channel mode</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CanTpChannelModeType.halfDuplexMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CATEGORY-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CHAPTER-ENUM-BREAK--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BREAK">
            <xsd:annotation>
               <xsd:documentation>This indicates the a page break shall be applied before the current block.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ChapterEnumBreak.break"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-BREAK">
            <xsd:annotation>
               <xsd:documentation>This indicates that there is no need to force a page break before this block.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ChapterEnumBreak.noBreak"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CLIENT-CAPABILITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="WILL-CALL">
            <xsd:annotation>
               <xsd:documentation>The client will call this method.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ClientCapabilityEnum.willCall"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WONT-CALL">
            <xsd:annotation>
               <xsd:documentation>The client won't call this method.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ClientCapabilityEnum.wontCall"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="COMMAND-LINE-OPTION-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COMMAND-LINE-LONG-FORM">
            <xsd:annotation>
               <xsd:documentation>Long form of command line option.

Example: --version=1.0
--help</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CommandLineOptionKindEnum.commandLineLongForm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COMMAND-LINE-SHORT-FORM">
            <xsd:annotation>
               <xsd:documentation>Short form of command line option.

Example: -v 1.0
-h</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CommandLineOptionKindEnum.commandLineShortForm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COMMAND-LINE-SIMPLE-FORM">
            <xsd:annotation>
               <xsd:documentation>In this case the command line option does not have any formal structure. Just the value is passed to the program.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CommandLineOptionKindEnum.commandLineSimpleForm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="COMMUNICATION-DIRECTION-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IN">
            <xsd:annotation>
               <xsd:documentation>Reception (Input)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CommunicationDirectionType.in"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OUT">
            <xsd:annotation>
               <xsd:documentation>Transmission (Output)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CommunicationDirectionType.out"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CONTAINED-I-PDU-COLLECTION-SEMANTICS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LAST-IS-BEST">
            <xsd:annotation>
               <xsd:documentation>The ContainedIPdu data will be fetched via TriggerTransmit just before the transmission executes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ContainedIPduCollectionSemanticsEnum.lastIsBest"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QUEUED">
            <xsd:annotation>
               <xsd:documentation>The ContainedIPdu data will instantly be stored to the ContainerIPdu in the context of the Transmit API.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ContainedIPduCollectionSemanticsEnum.queued"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CONTAINER-I-PDU-HEADER-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LONG-HEADER">
            <xsd:annotation>
               <xsd:documentation>Header size is 64 bit:
* Header Id 32 bit
* Dlc 32 bit</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ContainerIPduHeaderTypeEnum.longHeader"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-HEADER">
            <xsd:annotation>
               <xsd:documentation>No Header is used and the the location of each containedPdu in the ContainerPdu is statically configured.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";atp.Status="draft";mmt.qualifiedName="ContainerIPduHeaderTypeEnum.noHeader"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHORT-HEADER">
            <xsd:annotation>
               <xsd:documentation>Header size is 32 bit:
* Header Id 24 bit
* Dlc 8 bit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ContainerIPduHeaderTypeEnum.shortHeader"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CONTAINER-I-PDU-TRIGGER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>Defines that the transmission of the ContainerIPdu shall be requested when the default trigger conditions apply (e.g. timeout of threshold).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ContainerIPduTriggerEnum.defaultTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIRST-CONTAINED-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>Defines that the transmission of the ContainerIPdu shall be requested right after the first ContainedIPdu was put into the ContainerIPdu.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ContainerIPduTriggerEnum.firstContainedTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="COUPLING-ELEMENT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HUB">
            <xsd:annotation>
               <xsd:documentation>A device that is used to connect segments of a LAN. In Hubs frames are "broadcasted" to every one of its ports.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CouplingElementEnum.hub"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROUTER">
            <xsd:annotation>
               <xsd:documentation>A device that routes frames between different networks.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CouplingElementEnum.router"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SWITCH">
            <xsd:annotation>
               <xsd:documentation>A device that filters and forwards frames between different LAN segments.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CouplingElementEnum.switch"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="COUPLING-PORT-RATE-POLICY-ACTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BLOCK-SOURCE">
            <xsd:annotation>
               <xsd:documentation>If the rate policy is violated the CouplingPort this CouplingPortRatePolicy is defined on shall block all frames from the MAC-Address the violation was caused by.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CouplingPortRatePolicyActionEnum.blockSource"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DROP-FRAME">
            <xsd:annotation>
               <xsd:documentation>If the rate policy is violated the frame shall be dropped.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CouplingPortRatePolicyActionEnum.dropFrame"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="COUPLING-PORT-ROLE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HOST-PORT">
            <xsd:annotation>
               <xsd:documentation>The hostPort is connected to an ECU (host ecu). The host ECU controls the connected CouplingElement (e.g. Ethernet switch).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CouplingPortRoleEnum.hostPort"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD-PORT">
            <xsd:annotation>
               <xsd:documentation>A CoupingPort can be a standardPort that is used to connect the CouplingElement with CouplingPorts outside the ECU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CouplingPortRoleEnum.standardPort"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UP-LINK-PORT">
            <xsd:annotation>
               <xsd:documentation>A CouplingPort can be connected to another CouplingPort of a CouplingElement located on the same ECU (CouplingElement.ecuInstance) using the CouplingPortConnection. This is used to model a cascaded switch.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CouplingPortRoleEnum.upLinkPort"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CRYPTO-CERTIFICATE-ALGORITHM-FAMILY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECC">
            <xsd:annotation>
               <xsd:documentation>The cryptographic operations in the certificate are executed using elliptic curves (ecc)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CryptoCertificateAlgorithmFamilyEnum.ecc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RSA">
            <xsd:annotation>
               <xsd:documentation>The cryptographic operations in the certificate are executed using the RSA approach.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CryptoCertificateAlgorithmFamilyEnum.rsa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CRYPTO-CERTIFICATE-FORMAT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CVC">
            <xsd:annotation>
               <xsd:documentation>The certificate has been created in Card Verifiable Certificate (CVC) format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CryptoCertificateFormatEnum.cvc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="X-509">
            <xsd:annotation>
               <xsd:documentation>The certificate is created in X.509 format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CryptoCertificateFormatEnum.x509"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CRYPTO-SERVICE-KEY-GENERATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="KEY-DERIVATION">
            <xsd:annotation>
               <xsd:documentation>This means that the crypto key is created by derivation from a master key.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CryptoServiceKeyGenerationEnum.keyDerivation"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KEY-STORAGE">
            <xsd:annotation>
               <xsd:documentation>This means that the crypto key is obtained from an external entity, e.g. a diagnostic tester.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CryptoServiceKeyGenerationEnum.keyStorage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CS-TRANSFORMER-ERROR-REACTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="APPLICATION-ONLY">
            <xsd:annotation>
               <xsd:documentation>The application is responsible for any error reaction. No autonomous error reaction of RTE and transformer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CSTransformerErrorReactionEnum.applicationOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AUTONOMOUS">
            <xsd:annotation>
               <xsd:documentation>RTE and Transformer coordinate an autonomous error reaction on their own.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CSTransformerErrorReactionEnum.autonomous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CSE-CODE-TYPE-STRING--SIMPLE">
      <xsd:restriction base="xsd:unsignedInt"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="CYCLE-REPETITION-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CYCLE-REPETITION-1">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="1"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="CycleRepetitionType.cycleRepetition1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-10">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="10"

to support FlexRay 3.0</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="CycleRepetitionType.cycleRepetition10"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-16">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="16"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="CycleRepetitionType.cycleRepetition16"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-2">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="2"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="CycleRepetitionType.cycleRepetition2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-20">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="20"

to support FlexRay 3.0</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="CycleRepetitionType.cycleRepetition20"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-32">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="32"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="CycleRepetitionType.cycleRepetition32"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-4">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="4"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="CycleRepetitionType.cycleRepetition4"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-40">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="40"

to support FlexRay 3.0</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="CycleRepetitionType.cycleRepetition40"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-5">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="5"

to support FlexRay 3.0</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="CycleRepetitionType.cycleRepetition5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-50">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="50"

to support FlexRay 3.0</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="CycleRepetitionType.cycleRepetition50"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-64">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="64"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="10";mmt.qualifiedName="CycleRepetitionType.cycleRepetition64"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CYCLE-REPETITION-8">
            <xsd:annotation>
               <xsd:documentation>Attribute cycleRepetition value="8"

valid only for FlexRay Protocol 2.1 Rev A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="11";mmt.qualifiedName="CycleRepetitionType.cycleRepetition8"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-EXCHANGE-POINT-KIND--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AGREED">
            <xsd:annotation>
               <xsd:documentation>the data exchange point description represents the agreed data exchange point that should be used during data exchange</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DataExchangePointKind.agreed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONSUMER">
            <xsd:annotation>
               <xsd:documentation>the data exchange point description represents the input of a consuming tool.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataExchangePointKind.consumer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRODUCER">
            <xsd:annotation>
               <xsd:documentation>the data exchange point description represents the output of a producing tool.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataExchangePointKind.producer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-FILTER-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>No filtering is performed so that the message always passes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataFilterTypeEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MASKED-NEW-DIFFERS-MASKED-OLD">
            <xsd:annotation>
               <xsd:documentation>Pass messages where the masked value has changed.

(new_value&amp;mask) !=(old_value&amp;mask)
new_value: current value of the message
old_value: last value of the message (initialized with the initial value of the message, updated with new_value if the new message value is not filtered out)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataFilterTypeEnum.maskedNewDiffersMaskedOld"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MASKED-NEW-DIFFERS-X">
            <xsd:annotation>
               <xsd:documentation>Pass messages whose masked value is not equal to a specific value x

(new_value&amp;mask) != x
new_value: current value of the message</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DataFilterTypeEnum.maskedNewDiffersX"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MASKED-NEW-EQUALS-X">
            <xsd:annotation>
               <xsd:documentation>Pass messages whose masked value is equal to a specific value x

(new_value&amp;mask) == x
new_value: current value of the message</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DataFilterTypeEnum.maskedNewEqualsX"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEVER">
            <xsd:annotation>
               <xsd:documentation>The filter removes all messages.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DataFilterTypeEnum.never"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEW-IS-OUTSIDE">
            <xsd:annotation>
               <xsd:documentation>Pass a message if its value is outside a predefined boundary.

(min &gt; new_value) OR (new_value &gt; max)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="DataFilterTypeEnum.newIsOutside"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEW-IS-WITHIN">
            <xsd:annotation>
               <xsd:documentation>Pass a message if its value is within a predefined boundary.

min &lt;= new_value &lt;= max</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="DataFilterTypeEnum.newIsWithin"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ONE-EVERY-N">
            <xsd:annotation>
               <xsd:documentation>Pass a message once every N message occurrences.
Algorithm: occurrence % period == offset
Start: occurrence = 0.
Each time the message is received or transmitted, occurrence is incremented by 1 after filtering.
Length of occurrence is 8 bit (minimum).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="DataFilterTypeEnum.oneEveryN"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-ID-MODE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL-16-BIT">
            <xsd:annotation>
               <xsd:documentation>Two bytes are included in the CRC (double ID configuration).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.RestrictToStandards="CP,AP";mmt.qualifiedName="DataIdModeEnum.all16Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ALTERNATING-8-BIT">
            <xsd:annotation>
               <xsd:documentation>One of the two bytes byte is included, alternating high and low byte, depending on parity of the counter (alternating ID configuration). For even counter low byte is included; For odd counters the high byte is included.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.RestrictToStandards="CP";mmt.qualifiedName="DataIdModeEnum.alternating8Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOWER-12-BIT">
            <xsd:annotation>
               <xsd:documentation>The low byte is included in the implicit CRC calculation, the low nibble of the high byte is transmitted along with the data (i.e. it is explicitly included), the high nibble of the high byte is not used. This is applicable for the IDs up to 12 bits.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.RestrictToStandards="CP,AP";mmt.qualifiedName="DataIdModeEnum.lower12Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOWER-8-BIT">
            <xsd:annotation>
               <xsd:documentation>Only low byte is included, high byte is never used. This is applicable if the IDs in a particular system are 8 bits.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.RestrictToStandards="CP";mmt.qualifiedName="DataIdModeEnum.lower8Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-LIMIT-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MAX">
            <xsd:annotation>
               <xsd:documentation>Limitation to maximum value</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataLimitKindEnum.max"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MIN">
            <xsd:annotation>
               <xsd:documentation>Limitation to minimum value</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataLimitKindEnum.min"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No limitation applicable</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DataLimitKindEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-TRANSFORMATION-ERROR-HANDLING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-TRANSFORMER-ERROR-HANDLING">
            <xsd:annotation>
               <xsd:documentation>A runnable does not handle transformer errors.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataTransformationErrorHandlingEnum.noTransformerErrorHandling"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRANSFORMER-ERROR-HANDLING">
            <xsd:annotation>
               <xsd:documentation>The runnable implements the handling of transformer errors.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataTransformationErrorHandlingEnum.transformerErrorHandling"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-TRANSFORMATION-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ASYMMETRIC-FROM-BYTE-ARRAY">
            <xsd:annotation>
               <xsd:documentation>The DataTransformation shall only be applied to the receiving end only, i.e. transform from byte array to data type.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataTransformationKindEnum.asymmetricFromByteArray"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ASYMMETRIC-TO-BYTE-ARRAY">
            <xsd:annotation>
               <xsd:documentation>The DataTransformation shall be applied to the sending end only, i.e. from data type to byte array.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataTransformationKindEnum.asymmetricToByteArray"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYMMETRIC">
            <xsd:annotation>
               <xsd:documentation>The DataTransformation shall be applied at both the sending and the receiving end of the communication.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DataTransformationKindEnum.symmetric"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATA-TYPE-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LEGACY">
            <xsd:annotation>
               <xsd:documentation>In case the System Description doesn't use a complete Software Component Description (VFB View) this value can be chosen. This supports the inclusion of legacy signals. 

The aggregation of SwDataDefProps shall be used to configure the "ComSignalDataInvalidValue" and the Data Semantics.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DataTypePolicyEnum.legacy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NETWORK-REPRESENTATION-FROM-COM-SPEC">
            <xsd:annotation>
               <xsd:documentation>Ignore any networkRepresentationProps of this ISignal and use the networkRepresentation from the ComSpec.

Please note that the usage does not imply the existence of the SwDataDefProps in the role networkRepresentation aggregated by the SenderComSpec or ReceiverComSpec if an ImplementationDataType is defined.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DataTypePolicyEnum.networkRepresentationFromComSpec"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OVERRIDE">
            <xsd:annotation>
               <xsd:documentation>If this value is chosen the requirements specified in the ComSpec (networkRepresentationFromComSpec) are not fullfilled by the aggregated SwDataDefProps. In this case the networkRepresentation is specified by the aggregated swDataDefProps.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DataTypePolicyEnum.override"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PORT-INTERFACE-DEFINITION">
            <xsd:annotation>
               <xsd:documentation>This enumeration literal is deprecated and will be removed in future.

Old description:
Ignore any networkRepresentationProps of this ISignal and use the networkRepresentation specified in the VariableDataPrototypes owned by PortInterface (portInterfaceDefinition).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";atp.Status="removed";mmt.qualifiedName="DataTypePolicyEnum.portInterfaceDefinition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRANSFORMING-I-SIGNAL">
            <xsd:annotation>
               <xsd:documentation>This literal indicates that a transformer chain shall be used to communicate the ISignal as UINT8_N over the bus.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DataTypePolicyEnum.transformingISignal"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DATE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="([0-9]{4}-[0-9]{2}-[0-9]{2})(T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|([+\-][0-9]{2}:[0-9]{2})))?"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DDS-IDENTIFIER--SIMPLE">
      <xsd:annotation>
         <xsd:appinfo source="tags">atp.Status="draft"</xsd:appinfo>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z][a-zA-Z0-9-]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DEFAULT-VALUE-APPLICATION-STRATEGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT-IF-REVISION-UPDATE">
            <xsd:annotation>
               <xsd:documentation>If the AUTOSAR model is older than the Baseline of the Data Exchange Point and the older version did not yet support the attribute, then the AUTOSAR defined default value SHALL be applied before further validation or processing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DefaultValueApplicationStrategyEnum.defaultIfRevisionUpdate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFAULT-IF-UNDEFINED">
            <xsd:annotation>
               <xsd:documentation>If the AUTOSAR model does not explicitly specify a value, then the apply the AUTOSAR defined default value  before further validation or processing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DefaultValueApplicationStrategyEnum.defaultIfUndefined"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-DEFAULT">
            <xsd:annotation>
               <xsd:documentation>do not apply the AUTOSAR defined default value</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DefaultValueApplicationStrategyEnum.noDefault"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DEPENDENCY-USAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BUILD">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during the build process.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DependencyUsageEnum.build"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CODEGENERATION">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during code generation</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DependencyUsageEnum.codegeneration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COMPILE">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during compilation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DependencyUsageEnum.compile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXECUTE">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required at execution time.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DependencyUsageEnum.execute"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK">
            <xsd:annotation>
               <xsd:documentation>The object referred by the dependency is required during linking.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DependencyUsageEnum.link"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAG-PDU-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DIAG-REQUEST">
            <xsd:annotation>
               <xsd:documentation>Diagnostic Request</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagPduType.diagRequest"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DIAG-RESPONSE">
            <xsd:annotation>
               <xsd:documentation>Diagnostic Response</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagPduType.diagResponse"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAG-REQUIREMENT-ID-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9a-zA-Z_\-]+"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-ACCESS-PERMISSION-VALIDITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACCES-PERRMISSION-SERVICE-CLASS">
            <xsd:annotation>
               <xsd:documentation>This means that the DiagnosticServiceClass is in charge to define the accessPermission.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";atp.Status="removed";mmt.qualifiedName="DiagnosticAccessPermissionValidityEnum.accesPerrmissionServiceClass"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACCESS-PERMISSION-INSTANCE-OVERRIDES-CLASS">
            <xsd:annotation>
               <xsd:documentation>This means that accessPermission set at the DiagnosticServiceInstance will override the accessPermission defined at the DiagnosticServiceClass.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticAccessPermissionValidityEnum.accessPermissionInstanceOverridesClass"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACCESS-PERMISSION-SERVICE-CLASS">
            <xsd:annotation>
               <xsd:documentation>This means that the DiagnosticServiceClass is in charge to define the accessPermission.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticAccessPermissionValidityEnum.accessPermissionServiceClass"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACCESS-PERMISSION-SERVICE-INSTANCE">
            <xsd:annotation>
               <xsd:documentation>This means that the DiagnosticServiceInstance is in charge of defining the accessPermission</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticAccessPermissionValidityEnum.accessPermissionServiceInstance"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-AUDIENCE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AFTER-SALES">
            <xsd:annotation>
               <xsd:documentation>The object is relevant for the OEM after-sales organization.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticAudienceEnum.afterSales"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AFTERMAKET">
            <xsd:annotation>
               <xsd:documentation>The object is for free aftermarket service organizations.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";atp.Status="removed";mmt.qualifiedName="DiagnosticAudienceEnum.aftermaket"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AFTERMARKET">
            <xsd:annotation>
               <xsd:documentation>The object is for free aftermarket service organizations.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticAudienceEnum.aftermarket"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEVELOPMENT">
            <xsd:annotation>
               <xsd:documentation>The object is relevant for engineering only.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticAudienceEnum.development"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MANUFACTURING">
            <xsd:annotation>
               <xsd:documentation>The object is relevant for manufacturing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticAudienceEnum.manufacturing"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SUPPLIER">
            <xsd:annotation>
               <xsd:documentation>The object is relevant for the ECU-supplier aftermarket organization.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="DiagnosticAudienceEnum.supplier"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-CLEAR-DTC-LIMITATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL-SUPPORTED-DTCS">
            <xsd:annotation>
               <xsd:documentation>DEM_ClearDtc API accepts all supported DTC values.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticClearDtcLimitationEnum.allSupportedDtcs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CLEAR-ALL-DTCS">
            <xsd:annotation>
               <xsd:documentation>DEM_ClearDtc API accepts ClearAllDTCs only.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticClearDtcLimitationEnum.clearAllDtcs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-CLEAR-EVENT-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-STATUS-BYTE-CHANGE">
            <xsd:annotation>
               <xsd:documentation>The event status byte keeps unchanged.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticClearEventBehaviorEnum.noStatusByteChange"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ONLY-THIS-CYCLE-AND-READINESS">
            <xsd:annotation>
               <xsd:documentation>The OperationCycle and readiness bits of the event status byte are reset.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticClearEventBehaviorEnum.onlyThisCycleAndReadiness"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-COMPARE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IS-EQUAL">
            <xsd:annotation>
               <xsd:documentation>equal</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticCompareTypeEnum.isEqual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-GREATER-OR-EQUAL">
            <xsd:annotation>
               <xsd:documentation>greater than or equal</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="DiagnosticCompareTypeEnum.isGreaterOrEqual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-GREATER-THAN">
            <xsd:annotation>
               <xsd:documentation>greater than</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticCompareTypeEnum.isGreaterThan"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-LESS-OR-EQUAL">
            <xsd:annotation>
               <xsd:documentation>less than or equal</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticCompareTypeEnum.isLessOrEqual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-LESS-THAN">
            <xsd:annotation>
               <xsd:documentation>less than</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticCompareTypeEnum.isLessThan"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-NOT-EQUAL">
            <xsd:annotation>
               <xsd:documentation>not equal</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticCompareTypeEnum.isNotEqual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-CONNECTED-INDICATOR-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BLINK-MODE">
            <xsd:annotation>
               <xsd:documentation>The indicator blinks when the event has status FAILED.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum.blinkMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BLINK-OR-CONTINUOUS-ON-MODE">
            <xsd:annotation>
               <xsd:documentation>The indicator is active and blinks when the event has status FAILED.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum.blinkOrContinuousOnMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONTINUOUS-ON-MODE">
            <xsd:annotation>
               <xsd:documentation>The indicator is active when the event has status FAILED.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum.continuousOnMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FAST-FLASHING-MODE">
            <xsd:annotation>
               <xsd:documentation>Flash Indicator Lamp should be set to "Fast Flash".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum.fastFlashingMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SLOW-FLASHING-MODE">
            <xsd:annotation>
               <xsd:documentation>Flash Indicator Lamp should be set to "Slow Flash".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum.slowFlashingMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-DATA-CAPTURE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAPTURE-ASYNCHRONOUSLY-TO-REPORTING">
            <xsd:annotation>
               <xsd:documentation>This represents the intention to capture the environment data asynchronously after the actual capture API function terminated.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticDataCaptureEnum.captureAsynchronouslyToReporting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAPTURE-SYNCHRONOUSLY-TO-REPORTING">
            <xsd:annotation>
               <xsd:documentation>This represents the intention to capture the environment data synchronously within the capture API function.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticDataCaptureEnum.captureSynchronouslyToReporting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FREEZE">
            <xsd:annotation>
               <xsd:documentation>The event debounce counter will be frozen with the current value and will not change while a related enable condition is not fulfilled or ControlDTCSetting of the related event is disabled. After all related enable conditions are fulfilled and ControlDTCSetting of the related event is enabled again, the event qualification will continue with the next report of the event (i.e. SetEventStatus).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticDebounceBehaviorEnum.freeze"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RESET">
            <xsd:annotation>
               <xsd:documentation>The event debounce counter will be reset to initial value if a related enable condition is not fulfilled or
ControlDTCSetting of the related event is disabled. The qualification of the event will be restarted with the next valid event report.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticDebounceBehaviorEnum.reset"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-DENOMINATOR-CONDITION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="-500-MILES">
            <xsd:annotation>
               <xsd:documentation>Condition based on definition of 500miles conditions as defined for OBD2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticDenominatorConditionEnum.500miles"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COLDSTART">
            <xsd:annotation>
               <xsd:documentation>Condition based on definition of "cold start" as defined for EU5+</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticDenominatorConditionEnum.coldstart"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EVAP">
            <xsd:annotation>
               <xsd:documentation>Condition based on definition of "EVAP" conditions as defined for OBD2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticDenominatorConditionEnum.evap"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INDIVIDUAL">
            <xsd:annotation>
               <xsd:documentation>condition based on definition of individual requirements.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticDenominatorConditionEnum.individual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OBD">
            <xsd:annotation>
               <xsd:documentation>Condition based on definition of OBD requirements.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticDenominatorConditionEnum.obd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-SUBFUNCTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CLEAR-DYNAMICALLY-DEFINE-DATA-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>Clear the specified dynamic data identifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticDynamicallyDefineDataIdentifierSubfunctionEnum.clearDynamicallyDefineDataIdentifier"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFINE-BY-IDENTIFIER">
            <xsd:annotation>
               <xsd:documentation>The definition of dynamic data identifier shall be done via a reference to a diagnostic data identifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticDynamicallyDefineDataIdentifierSubfunctionEnum.defineByIdentifier"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFINE-BY-MEMORY-ADDRESS">
            <xsd:annotation>
               <xsd:documentation>The definition of dynamic data identifier shall be done via a reference to a memory address.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticDynamicallyDefineDataIdentifierSubfunctionEnum.defineByMemoryAddress"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-EVENT-CLEAR-ALLOWED-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>The clearing is allowed unconditionally.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticEventClearAllowedEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEVER">
            <xsd:annotation>
               <xsd:documentation>The clearing is never allowed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";mmt.qualifiedName="DiagnosticEventClearAllowedEnum.never"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REQUIRES-CALLBACK-EXECUTION">
            <xsd:annotation>
               <xsd:documentation>In case the clearing of a Diagnostic Event has to be allowed or prohibited through the SWC interface CallbackClearEventAllowed, the SWC has to indicate this by defining appropriate ServiceNeeds (i.e. DiagnosticEventNeeds).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticEventClearAllowedEnum.requiresCallbackExecution"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-EVENT-DISPLACEMENT-STRATEGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FULL">
            <xsd:annotation>
               <xsd:documentation>Event memory entry displacement is enabled, by consideration of priority active/passive status, and occurrence.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticEventDisplacementStrategyEnum.full"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>Event memory entry displacement is disabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticEventDisplacementStrategyEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRIO-OCC">
            <xsd:annotation>
               <xsd:documentation>Event memory entry displacement is enabled, by consideration of priority and occurrence (but without active/passive status).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticEventDisplacementStrategyEnum.prioOcc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-EVENT-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW">
            <xsd:annotation>
               <xsd:documentation>The event is assigned to a BSW module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticEventKindEnum.bsw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SWC">
            <xsd:annotation>
               <xsd:documentation>The event is assigned to a SWC.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticEventKindEnum.swc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-EVENT-WINDOW-TIME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EVENT-WINDOW-CURRENT-AND-FOLLOWING-CYCLE">
            <xsd:annotation>
               <xsd:documentation>This means that the window extends to this and the following cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticEventWindowTimeEnum.eventWindowCurrentAndFollowingCycle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EVENT-WINDOW-CURRENT-CYCLE">
            <xsd:annotation>
               <xsd:documentation>This means that the window is limited to the current cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticEventWindowTimeEnum.eventWindowCurrentCycle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EVENT-WINDOW-INFINITE">
            <xsd:annotation>
               <xsd:documentation>This means that the window extents without a border.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticEventWindowTimeEnum.eventWindowInfinite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-HANDLE-DDDI-CONFIGURATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NON-VOLATILE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the configuration of DynamicallyDefineDataIdentifier shall be stored as non-volatile data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticHandleDDDIConfigurationEnum.nonVolatile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VOLATILE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the configuration of DynamicallyDefineDataIdentifier shall be handled as volatile data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticHandleDDDIConfigurationEnum.volatile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-INDICATOR-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AMBER-WARNING">
            <xsd:annotation>
               <xsd:documentation>Amber Warning Lamp</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticIndicatorTypeEnum.amberWarning"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MALFUNCTION">
            <xsd:annotation>
               <xsd:documentation>Malfunction Indicator Lamp</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticIndicatorTypeEnum.malfunction"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PROTECT-LAMP">
            <xsd:annotation>
               <xsd:documentation>Protect Lamp</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticIndicatorTypeEnum.protectLamp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RED-STOP-LAMP">
            <xsd:annotation>
               <xsd:documentation>Red Stop Lamp</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticIndicatorTypeEnum.redStopLamp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WARNING">
            <xsd:annotation>
               <xsd:documentation>Warning</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticIndicatorTypeEnum.warning"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-INHIBITION-MASK-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LAST-FAILED">
            <xsd:annotation>
               <xsd:documentation>This represents the inhibition mask behavior "last failed".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticInhibitionMaskEnum.lastFailed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOT-TESTED">
            <xsd:annotation>
               <xsd:documentation>This represents the inhibition mask behavior "not tested".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticInhibitionMaskEnum.notTested"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TESTED">
            <xsd:annotation>
               <xsd:documentation>This represents the inhibition mask behavior "tested".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticInhibitionMaskEnum.tested"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TESTED-AND-FAILED">
            <xsd:annotation>
               <xsd:documentation>This represents the inhibition mask behavior "tested and failed".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticInhibitionMaskEnum.testedAndFailed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-INITIAL-EVENT-STATUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RETURN-ON-EVENT-CLEARED">
            <xsd:annotation>
               <xsd:documentation>This means that the ResponseOnEvent is initially cleared.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticInitialEventStatusEnum.returnOnEventCleared"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RETURN-ON-EVENT-STOPPED">
            <xsd:annotation>
               <xsd:documentation>This means that the ResponseOnEvent is initially stopped.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticInitialEventStatusEnum.returnOnEventStopped"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-JUMP-TO-BOOT-LOADER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-BOOT">
            <xsd:annotation>
               <xsd:documentation>This diagnostic session doesn't allow to jump to Bootloader.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum.noBoot"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OEM-BOOT">
            <xsd:annotation>
               <xsd:documentation>This diagnostic session allows to jump to OEM Bootloader. In this case the bootloader send the final response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum.oemBoot"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OEM-BOOT-RESP-APP">
            <xsd:annotation>
               <xsd:documentation>This diagnostic session allows to jump to OEM Bootloader and application sends final response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum.oemBootRespApp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYSTEM-SUPPLIER-BOOT">
            <xsd:annotation>
               <xsd:documentation>This diagnostic session allows to jump to System Supplier Bootloader.  In this case the bootloader send the final response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum.systemSupplierBoot"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYSTEM-SUPPLIER-BOOT-RESP-APP">
            <xsd:annotation>
               <xsd:documentation>This diagnostic session allows to jump to System Supplier Bootloader and application sends final response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum.systemSupplierBootRespApp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-LOGICAL-OPERATOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LOGICAL-AND">
            <xsd:annotation>
               <xsd:documentation>Logical AND</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticLogicalOperatorEnum.logicalAnd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOGICAL-OR">
            <xsd:annotation>
               <xsd:documentation>Logical OR</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticLogicalOperatorEnum.logicalOr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-MEMORY-ENTRY-STORAGE-TRIGGER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONFIRMED">
            <xsd:annotation>
               <xsd:documentation>Status information of UDS DTC status bit 3</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticMemoryEntryStorageTriggerEnum.confirmed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FDC-THRESHOLD">
            <xsd:annotation>
               <xsd:documentation>Threshold to allocate an event memory entry and to capture the Freeze Frame.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticMemoryEntryStorageTriggerEnum.fdcThreshold"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PENDING">
            <xsd:annotation>
               <xsd:documentation>Status information of UDS DTC status bit 2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticMemoryEntryStorageTriggerEnum.pending"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TEST-FAILED">
            <xsd:annotation>
               <xsd:documentation>Status information of UDS DTC status bit 0.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticMemoryEntryStorageTriggerEnum.testFailed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-MONITOR-UPDATE-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>Dem shall accept every update.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticMonitorUpdateKindEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STEADY">
            <xsd:annotation>
               <xsd:documentation>Dem shall only accept if debouncing is at the limit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticMonitorUpdateKindEnum.steady"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-OBD-SUPPORT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MASTER-ECU">
            <xsd:annotation>
               <xsd:documentation>This represent the role "master ECU".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticObdSupportEnum.masterEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-OBD-SUPPORT">
            <xsd:annotation>
               <xsd:documentation>This represents the ability to explicitly specify that no participation in OBD is foreseen.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticObdSupportEnum.noObdSupport"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRIMARY-ECU">
            <xsd:annotation>
               <xsd:documentation>This represents the role "primary ECU".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticObdSupportEnum.primaryEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECONDARY-ECU">
            <xsd:annotation>
               <xsd:documentation>This represents the role "secondary ECU".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticObdSupportEnum.secondaryEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-OCCURRENCE-COUNTER-PROCESSING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONFIRMED-DTC-BIT">
            <xsd:annotation>
               <xsd:documentation>The occurrence counter is triggered by the TestFailed bit if the fault confirmation was successful (ConfirmedDTC bit is set).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticOccurrenceCounterProcessingEnum.confirmedDtcBit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TEST-FAILED-BIT">
            <xsd:annotation>
               <xsd:documentation>The occurrence counter is only triggered by the TestFailed bit (and the fault confirmation is not considered).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticOccurrenceCounterProcessingEnum.testFailedBit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-OPERATION-CYCLE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IGNITION">
            <xsd:annotation>
               <xsd:documentation>Ignition ON / OFF cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.ignition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OBD-DRIVING-CYCLE">
            <xsd:annotation>
               <xsd:documentation>OBD Driving cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.obdDrivingCycle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OTHER">
            <xsd:annotation>
               <xsd:documentation>further operation cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.other"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POWER">
            <xsd:annotation>
               <xsd:documentation>Power ON / OFF cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";atp.Status="removed";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.power"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIME">
            <xsd:annotation>
               <xsd:documentation>Time based operation cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";atp.Status="removed";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.time"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WARMUP">
            <xsd:annotation>
               <xsd:documentation>OBD Warm up cycle</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="DiagnosticOperationCycleTypeEnum.warmup"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-PERIODIC-RATE-CATEGORY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PERIODIC-RATE-FAST">
            <xsd:annotation>
               <xsd:documentation>This value represents a fast periodic rate.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticPeriodicRateCategoryEnum.periodicRateFast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PERIODIC-RATE-MEDIUM">
            <xsd:annotation>
               <xsd:documentation>This value represents a medium periodic rate.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticPeriodicRateCategoryEnum.periodicRateMedium"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PERIODIC-RATE-SLOW">
            <xsd:annotation>
               <xsd:documentation>This value represents a slow periodic rate.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticPeriodicRateCategoryEnum.periodicRateSlow"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-PROCESSING-STYLE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PROCESSING-STYLE-ASYNCHRONOUS">
            <xsd:annotation>
               <xsd:documentation>The software-component processes the request in background but still the Dcm has to issue the call again to eventually obtain the result of the request.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticProcessingStyleEnum.processingStyleAsynchronous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PROCESSING-STYLE-ASYNCHRONOUS-WITH-ERROR">
            <xsd:annotation>
               <xsd:documentation>The software-component processes the request in background but still the Dcm has to issue the call again to eventually obtain the result of the request or handle error code.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticProcessingStyleEnum.processingStyleAsynchronousWithError"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PROCESSING-STYLE-SYNCHRONOUS">
            <xsd:annotation>
               <xsd:documentation>The software-component is supposed to react synchronously on the request.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticProcessingStyleEnum.processingStyleSynchronous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-RECORD-TRIGGER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONFIRMED">
            <xsd:annotation>
               <xsd:documentation>capture on "Confirmed"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticRecordTriggerEnum.confirmed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CUSTOM">
            <xsd:annotation>
               <xsd:documentation>implement custom capture</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticRecordTriggerEnum.custom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FDC-THRESHOLD">
            <xsd:annotation>
               <xsd:documentation>capture on "FDC Threshold"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticRecordTriggerEnum.fdcThreshold"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PENDING">
            <xsd:annotation>
               <xsd:documentation>capture on "Pending"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticRecordTriggerEnum.pending"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TEST-FAILED">
            <xsd:annotation>
               <xsd:documentation>capture on "Test Failed"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticRecordTriggerEnum.testFailed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-RESPONSE-ON-EVENT-ACTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CLEAR">
            <xsd:annotation>
               <xsd:documentation>Clears the configured events.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticResponseOnEventActionEnum.clear"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPORT">
            <xsd:annotation>
               <xsd:documentation>Reports the activated events.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticResponseOnEventActionEnum.report"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="START">
            <xsd:annotation>
               <xsd:documentation>Starts the response on event service.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticResponseOnEventActionEnum.start"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STOP">
            <xsd:annotation>
               <xsd:documentation>Stops the response on event service.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticResponseOnEventActionEnum.stop"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-RESPONSE-TO-ECU-RESET-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RESPOND-AFTER-RESET">
            <xsd:annotation>
               <xsd:documentation>Answer to EcuReset service should come after the reset.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticResponseToEcuResetEnum.respondAfterReset"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RESPOND-BEFORE-RESET">
            <xsd:annotation>
               <xsd:documentation>Answer to EcuReset service should come before the reset.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticResponseToEcuResetEnum.respondBeforeReset"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-ROUTINE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ASYNCHRONOUS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the diagnostic server is not blocked while the diagnostic routine is running.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticRoutineTypeEnum.asynchronous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYNCHRONOUS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the diagnostic routine blocks the diagnostic server in the ECU while the routine is running.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticRoutineTypeEnum.synchronous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-SERVICE-REQUEST-CALLBACK-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="REQUEST-CALLBACK-TYPE-MANUFACTURER">
            <xsd:annotation>
               <xsd:documentation>This represents the case that the usage of PortInterface ServiceRequestNotification has the characteristics of being used by a manufacturer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticServiceRequestCallbackTypeEnum.requestCallbackTypeManufacturer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REQUEST-CALLBACK-TYPE-SUPPLIER">
            <xsd:annotation>
               <xsd:documentation>This represents the case that the usage of PortInterface ServiceRequestNotification has the characteristics of being used by a supplier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticServiceRequestCallbackTypeEnum.requestCallbackTypeSupplier"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-SIGNIFICANCE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FAULT">
            <xsd:annotation>
               <xsd:documentation>Failure, which affects the component/ECU itself.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticSignificanceEnum.fault"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OCCURENCE">
            <xsd:annotation>
               <xsd:documentation>Issue, which indicates additional information concerning insufficient system behavior.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticSignificanceEnum.occurence"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="STATUS-BIT-AGING-AND-DISPLACEMENT">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticStatusBitHandlingTestFailedSinceLastClearEnum.statusBitAgingAndDisplacement"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STATUS-BIT-NORMAL">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticStatusBitHandlingTestFailedSinceLastClearEnum.statusBitNormal"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-STORE-EVENT-SUPPORT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL">
            <xsd:annotation>
               <xsd:documentation>The server supports both, storing and not storing the event.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticStoreEventSupportEnum.all"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-STORE-EVENT">
            <xsd:annotation>
               <xsd:documentation>The event terminates when the server is powered down.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticStoreEventSupportEnum.noStoreEvent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STORE-EVENT">
            <xsd:annotation>
               <xsd:documentation>The event is persisted over a power down cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticStoreEventSupportEnum.storeEvent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>Any DTR result reported by the monitor is used by the Dem.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticTestResultUpdateEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STEADY">
            <xsd:annotation>
               <xsd:documentation>The Dem accepts reported DTRs only when the configured debouncing mechanism is stable at the FAIL or PASS limit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticTestResultUpdateEnum.steady"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-TROUBLE-CODE-J-1939-DTC-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SERVICE-ONLY">
            <xsd:annotation>
               <xsd:documentation>this represents a DTC that is only relevant for service in a garage, reported by e.g. DM53.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticTroubleCodeJ1939DtcKindEnum.serviceOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>This represents a non-specific DTC reported by e.g. DM1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticTroubleCodeJ1939DtcKindEnum.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-TYPE-OF-DTC-SUPPORTED-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ISO-11992--4">
            <xsd:annotation>
               <xsd:documentation>ISO11992-4 DTC format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum.iso11992_4"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ISO-14229--1">
            <xsd:annotation>
               <xsd:documentation>ISO14229-1 DTC format (3 byte format)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum.iso14229_1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ISO-15031--6">
            <xsd:annotation>
               <xsd:documentation>ISO15031-6 DTC format (2 byte format)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum.iso15031_6"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SAE-J-1939--73">
            <xsd:annotation>
               <xsd:documentation>SAEJ1939-73 DTC format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum.saeJ1939_73"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SAE-J-2012--DA">
            <xsd:annotation>
               <xsd:documentation>SAE_J2012-DA_DTCFormat_00 (3 byte format)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum.saeJ2012_da"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CALCULATED">
            <xsd:annotation>
               <xsd:documentation>Freeze frame records will be numbered consecutive starting by 1 in their chronological order.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticTypeOfFreezeFrameRecordNumerationEnum.calculated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONFIGURED">
            <xsd:annotation>
               <xsd:documentation>Freeze frame records will be numbered based on the given configuration in their chronological order.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticTypeOfFreezeFrameRecordNumerationEnum.configured"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-UDS-SEVERITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CHECK-AT-NEXT-HALT">
            <xsd:annotation>
               <xsd:documentation>Check at next halt.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticUdsSeverityEnum.checkAtNextHalt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IMMEDIATELY">
            <xsd:annotation>
               <xsd:documentation>Check immediately.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticUdsSeverityEnum.immediately"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MAINTENANCE-ONLY">
            <xsd:annotation>
               <xsd:documentation>Maintenance required.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticUdsSeverityEnum.maintenanceOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-SEVERITY">
            <xsd:annotation>
               <xsd:documentation>No severity information available.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticUdsSeverityEnum.noSeverity"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-VALUE-ACCESS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="READ-ONLY">
            <xsd:annotation>
               <xsd:documentation>The access to the data element is limited to read-only. This is typically used to read-out diagnostic information (e.g. current values).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticValueAccessEnum.readOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="READ-WRITE">
            <xsd:annotation>
               <xsd:documentation>The value of the diagnostic data element is classified as configurable (read and write access is possible).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticValueAccessEnum.readWrite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WRITE-ONLY">
            <xsd:annotation>
               <xsd:documentation>The access to the data element is limited to write-only. This supports the use case where the Dcm just writes data to the application software without the intention to read it back,</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticValueAccessEnum.writeOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEM-DTC-WWH-OBD-CLASS-A">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the severity class A.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum.demDtcWwhObdClassA"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEM-DTC-WWH-OBD-CLASS-B-1">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the severity class B1.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum.demDtcWwhObdClassB1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEM-DTC-WWH-OBD-CLASS-B-2">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the severity class B2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum.demDtcWwhObdClassB2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEM-DTC-WWH-OBD-CLASS-C">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the severity class C.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum.demDtcWwhObdClassC"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEM-DTC-WWH-OBD-CLASS-NO-INFORMATION">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the option to intentionally not describe a dedicated severity class of an WWH-OBD DTC.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum.demDtcWwhObdClassNoInformation"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DISCOVERY-TECHNOLOGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BONJOUR">
            <xsd:annotation>
               <xsd:documentation>Bonjour Service Discovery</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DiscoveryTechnologyEnum.bonjour"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DLNA">
            <xsd:annotation>
               <xsd:documentation>DLNA UPnP Device Control Protocol Framework</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DiscoveryTechnologyEnum.dlna"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SLP">
            <xsd:annotation>
               <xsd:documentation>Service Location Protocol</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DiscoveryTechnologyEnum.slp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SOMEIP">
            <xsd:annotation>
               <xsd:documentation>Header format to be used with Remote Procedure Call (RPC) Messages in Client/Server-Communication as well as Sender/Receiver Messages.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="DiscoveryTechnologyEnum.some/ip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SSDP">
            <xsd:annotation>
               <xsd:documentation>Simple Service Discovery Protocol (SSDP)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="DiscoveryTechnologyEnum.ssdp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DISPLAY-FORMAT-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="%[ \-+#]?[0-9]*(\.[0-9])?[diouxXfeEgGcs]"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DISPLAY-PRESENTATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PRESENTATION-CONTINUOUS">
            <xsd:annotation>
               <xsd:documentation>The presentation of data shall form a continuous graph between data points.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DisplayPresentationEnum.presentationContinuous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRESENTATION-DISCRETE">
            <xsd:annotation>
               <xsd:documentation>The presentation of data shall be step-shaped between data points.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DisplayPresentationEnum.presentationDiscrete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DO-IP-ENTITY-ROLE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EDGE-NODE">
            <xsd:annotation>
               <xsd:documentation>Network node is a DoIP gateway that accepts external connections.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DoIpEntityRoleEnum.edgeNode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GATEWAY">
            <xsd:annotation>
               <xsd:documentation>Network node is a Gateway between the DoIP network and other networks.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DoIpEntityRoleEnum.gateway"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NODE">
            <xsd:annotation>
               <xsd:documentation>Network node is a DoIp node.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DoIpEntityRoleEnum.node"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DTC-FORMAT-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="J-1939">
            <xsd:annotation>
               <xsd:documentation>Defines the J1939 DTC format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DtcFormatTypeEnum.j1939"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OBD">
            <xsd:annotation>
               <xsd:documentation>Defines the OBD DTC format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DtcFormatTypeEnum.obd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UDS">
            <xsd:annotation>
               <xsd:documentation>Defines the UDS DTC format.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="DtcFormatTypeEnum.uds"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="DTC-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EMISSION-RELATED-DTC">
            <xsd:annotation>
               <xsd:documentation>This indicates that the monitor reports a OBD-relevant malfunction.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="DtcKindEnum.emissionRelatedDtc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NON-EMMISSION-RELATED-DTC">
            <xsd:annotation>
               <xsd:documentation>This indicates that the monitor reports a non-OBD-relevant malfunction.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="DtcKindEnum.nonEmmissionRelatedDtc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="E-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BOLD">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in boldface font.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EEnum.bold"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BOLDITALIC">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in boldface plus italic font.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EEnum.bolditalic"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ITALIC">
            <xsd:annotation>
               <xsd:documentation>The emphasis is preferably represented in italic font.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EEnum.italic"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PLAIN">
            <xsd:annotation>
               <xsd:documentation>The emphasis has no specific rendering. It is used if e.g. semantic information is applied to the emphasis text.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="EEnum.plain"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="E-ENUM-FONT--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT">
            <xsd:annotation>
               <xsd:documentation>The emphasis uses the default font.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EEnumFont.default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MONO">
            <xsd:annotation>
               <xsd:documentation>The emphasis uses a monospaced font.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EEnumFont.mono"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ECUC-AFFECTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LT-AFFECTS-PB">
            <xsd:annotation>
               <xsd:documentation>A link time parameter affecting one or several post-build time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EcucAffectionEnum.LTAffectsPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-AFFECT">
            <xsd:annotation>
               <xsd:documentation>no affect on any other parameter.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EcucAffectionEnum.NOAffect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-LT">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several link time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EcucAffectionEnum.PCAffectsLT"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-LT-AND-PB">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several link time and post-build time parameter(s)).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="EcucAffectionEnum.PCAffectsLTAndPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PC-AFFECTS-PB">
            <xsd:annotation>
               <xsd:documentation>A pre-compile time parameter affecting one or several post build time parameter(s).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="EcucAffectionEnum.PCAffectsPB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ECUC-CONFIGURATION-CLASS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LINK">
            <xsd:annotation>
               <xsd:documentation>Link Time: parts of configuration are delivered from another object code file</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EcucConfigurationClassEnum.Link"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>PostBuildTime: after compilation a configuration parameter can be changed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EcucConfigurationClassEnum.PostBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRE-COMPILE">
            <xsd:annotation>
               <xsd:documentation>PreCompile Time: after compilation a configuration parameter can not be changed any more.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EcucConfigurationClassEnum.PreCompile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PUBLISHED-INFORMATION">
            <xsd:annotation>
               <xsd:documentation>PublishedInformation is used to specify the fact that certain 
information is fixed even before the pre-compile stage.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="EcucConfigurationClassEnum.PublishedInformation"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ECUC-CONFIGURATION-VARIANT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PRECONFIGURED-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Preconfigured (i.e. fixed) configuration which cannot be changed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EcucConfigurationVariantEnum.PreconfiguredConfiguration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RECOMMENDED-CONFIGURATION">
            <xsd:annotation>
               <xsd:documentation>Recommended configuration for a module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EcucConfigurationVariantEnum.RecommendedConfiguration"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-LINK-TIME">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime and LinkTime configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantLinkTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD-LOADABLE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild loadable configuration parameters (supported in the VSMD).

This attribute is removed from the specifications and shall not be used.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";atp.Status="removed";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuildLoadable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-POST-BUILD-SELECTABLE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation may use PreCompileTime, LinkTime and PostBuild selectable configuration parameters (supported in the VSMD).

This attribute is removed from the specifications and shall not be used.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";atp.Status="removed";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPostBuildSelectable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIANT-PRE-COMPILE">
            <xsd:annotation>
               <xsd:documentation>Specifies that the BSW Module implementation uses only PreCompileTime configuration parameters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="EcucConfigurationVariantEnum.VariantPreCompile"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ECUC-DESTINATION-URI-NESTING-CONTRACT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LEAF-OF-TARGET-CONTAINER">
            <xsd:annotation>
               <xsd:documentation>EcucDestinationUriPolicy describes elements (subContainers, Parameters, References) that are directly owned by the target container.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EcucDestinationUriNestingContractEnum.leafOfTargetContainer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TARGET-CONTAINER">
            <xsd:annotation>
               <xsd:documentation>EcucDestinationUriPolicy describes the target container of EcucUriReferenceDef.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EcucDestinationUriNestingContractEnum.targetContainer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VERTEX-OF-TARGET-CONTAINER">
            <xsd:annotation>
               <xsd:documentation>EcucDestinationUriPolicy describes elements (subContainers, Parameters, References) of the target container which can be defined in arbitrary nested subContainer structure.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EcucDestinationUriNestingContractEnum.vertexOfTargetContainer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ECUC-SCOPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ECU">
            <xsd:annotation>
               <xsd:documentation>An element may be shared with other modules.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EcucScopeEnum.ECU"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOCAL">
            <xsd:annotation>
               <xsd:documentation>An element is only be applicable for the module it is defined in.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EcucScopeEnum.local"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="END-TO-END-PROFILE-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PRE--R-4--2">
            <xsd:annotation>
               <xsd:documentation>Check has the legacy behavior, before AUTOSAR Release 4.2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EndToEndProfileBehaviorEnum.PRE_R4_2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="R-4--2">
            <xsd:annotation>
               <xsd:documentation>Check behaves like new P4/P5/P6 profiles introduced in AUTOSAR Release 4.2.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EndToEndProfileBehaviorEnum.R4_2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ENVIRONMENT-CAPTURE-TO-REPORTING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAPTURE-ASYNCHRONOUS-TO-REPORTING">
            <xsd:annotation>
               <xsd:documentation>The data capturing is postponed to the next cycle of the Dem_Mainfunction. (This means that there is a minimum delay between report of the failure and capturing the data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EnvironmentCaptureToReportingEnum.captureAsynchronousToReporting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAPTURE-SYNCHRONOUS-TO-REPORTING">
            <xsd:annotation>
               <xsd:documentation>The data is captured immediately within the reporting function (i.e. in the context of the setEventStatus/reportErrorStatus function).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EnvironmentCaptureToReportingEnum.captureSynchronousToReporting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETH-GLOBAL-TIME-MESSAGE-FORMAT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IEEE802-1AS">
            <xsd:annotation>
               <xsd:documentation>Message format according to IEEE 802.1AS standard.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthGlobalTimeMessageFormatEnum.IEEE802_1AS";xml.name="IEEE802-1AS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IEEE802-1AS-AUTOSAR">
            <xsd:annotation>
               <xsd:documentation>Message format according to IEEE 802.1AS standard with AUTOSAR extensions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthGlobalTimeMessageFormatEnum.IEEE802_1AS_AUTOSAR";xml.name="IEEE802-1AS-AUTOSAR"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-CONNECTION-NEGOTIATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AUTO">
            <xsd:annotation>
               <xsd:documentation>Automatic Negotiation</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthernetConnectionNegotiationEnum.auto"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MASTER">
            <xsd:annotation>
               <xsd:documentation>Master</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthernetConnectionNegotiationEnum.master"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SLAVE">
            <xsd:annotation>
               <xsd:documentation>Slave</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EthernetConnectionNegotiationEnum.slave"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-COUPLING-PORT-SCHEDULER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFICIT-ROUND-ROBIN">
            <xsd:annotation>
               <xsd:documentation>Schedule algorithm "deficit round robin"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthernetCouplingPortSchedulerEnum.deficitRoundRobin"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STRICT-PRIORITY">
            <xsd:annotation>
               <xsd:documentation>Schedule algorithm "strict priority"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthernetCouplingPortSchedulerEnum.strictPriority"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WEIGHTED-ROUND-ROBIN">
            <xsd:annotation>
               <xsd:documentation>Schedule algorithm "weighted round robin"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EthernetCouplingPortSchedulerEnum.weightedRoundRobin"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-MAC-LAYER-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="X-MII">
            <xsd:annotation>
               <xsd:documentation>Mac layer interface (data) bandwith class 100Mbit/s (e.g. RMII, RvMII, SMII, RvMII)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthernetMacLayerTypeEnum.xMII";xml.name="X-MII"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XG-MII">
            <xsd:annotation>
               <xsd:documentation>Mac layer interface (data) bandwith class 1Gbit/s (e.g. GMII, RGMII, SGMII, RvGMII, USGMII)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthernetMacLayerTypeEnum.xGMII";xml.name="XG-MII"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XXG-MII">
            <xsd:annotation>
               <xsd:documentation>Mac layer interface (data) bandwith class 10Gbit/s</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EthernetMacLayerTypeEnum.xXGMII";xml.name="XXG-MII"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-PHYSICAL-LAYER-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="1000BASE-T">
            <xsd:annotation>
               <xsd:documentation>Ethernet Standard (IEEE 802.3ab) to support 1Gbit/s over 4 twisted pairs.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.1000BASE-T";xml.name="1000BASE-T"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="1000BASE-T1">
            <xsd:annotation>
               <xsd:documentation>Ethernet Standard (IEEE 802.3bp) to support 1Gbit/s over a single twisted pair cable.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.1000BASE-T1";xml.name="1000BASE-T1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="100BASE-T1">
            <xsd:annotation>
               <xsd:documentation>Ethernet Standard (IEEE 802.3bw) to support 100Mbit/s over a single twisted pair cable.  100BASE-T1 is the IEEE Standardized version of BroadRReach.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.100BASE-T1";xml.name="100BASE-T1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="100BASE-TX">
            <xsd:annotation>
               <xsd:documentation>Ethernet Standard (IEEE 802.3u) to support 100Mbit/s over two twisted pairs.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.100BASE-TX";xml.name="100BASE-TX"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BASE-T">
            <xsd:annotation>
               <xsd:documentation>BaseT physical layer (10BaseT, 100BaseT, 1000BaseT)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.baseT"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BROAD-R-REACH">
            <xsd:annotation>
               <xsd:documentation>BroadR-Reach physical layer</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.broadRReach"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IEEE802-11P">
            <xsd:annotation>
               <xsd:documentation>Ethernet Standard (IEEE 802.11p) to support wireless communication in vehicular environments.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.iEEE802-11P";xml.name="IEEE802-11P"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RTPGE">
            <xsd:annotation>
               <xsd:documentation>Reduced Twisted Pair Gigabit Ethernet (RTPGE) physical layer</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.rtpge"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="X-MII">
            <xsd:annotation>
               <xsd:documentation>Media Independent Interface (MII) physical layer</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.xMII"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="X-MMI">
            <xsd:annotation>
               <xsd:documentation>This enumeration literal is set to obsolete and will be removed in future. Please use xMII instead. 

Old description: Media Independent Interface (MII) physical layer</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="EthernetPhysicalLayerTypeEnum.xMMI"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-SWITCH-VLAN-EGRESS-TAGGING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOT-SENT">
            <xsd:annotation>
               <xsd:documentation>will not be sent</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthernetSwitchVlanEgressTaggingEnum.notSent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SENT-TAGGED">
            <xsd:annotation>
               <xsd:documentation>sent with its VLAN tag</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthernetSwitchVlanEgressTaggingEnum.sentTagged"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SENT-UNTAGGED">
            <xsd:annotation>
               <xsd:documentation>sent without a VLAN tag</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EthernetSwitchVlanEgressTaggingEnum.sentUntagged"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ETHERNET-SWITCH-VLAN-INGRESS-TAG-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DROP-UNTAGGED">
            <xsd:annotation>
               <xsd:documentation>Drop if untagged.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EthernetSwitchVlanIngressTagEnum.dropUntagged"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FORWARD-AS-IS">
            <xsd:annotation>
               <xsd:documentation>Forward with the same VLAN as received. Also untagged frames will be forwarded as untagged.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EthernetSwitchVlanIngressTagEnum.forwardAsIs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EVENT-ACCEPTANCE-STATUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EVENT-ACCEPTANCE-DISABLED">
            <xsd:annotation>
               <xsd:documentation>Acceptance of a diagnostic event is disabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EventAcceptanceStatusEnum.eventAcceptanceDisabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EVENT-ACCEPTANCE-ENABLED">
            <xsd:annotation>
               <xsd:documentation>Acceptance of a diagnostic event is enabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EventAcceptanceStatusEnum.eventAcceptanceEnabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EVENT-GROUP-CONTROL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACTIVATION-AND-TRIGGER-UNICAST">
            <xsd:annotation>
               <xsd:documentation>Activate the data path for unicast events and triggered unicast events that are sent out after a client got subscribed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EventGroupControlTypeEnum.activationAndTriggerUnicast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACTIVATION-MULTICAST">
            <xsd:annotation>
               <xsd:documentation>Activate the data path for multicast events of an EventGroup.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EventGroupControlTypeEnum.activationMulticast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACTIVATION-UNICAST">
            <xsd:annotation>
               <xsd:documentation>Activate the data path for unicast events of an EventGroup.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="EventGroupControlTypeEnum.activationUnicast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGER-UNICAST">
            <xsd:annotation>
               <xsd:documentation>Activate the data path for triggered unicast events that are sent out after a client got subscribed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="EventGroupControlTypeEnum.triggerUnicast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EVENT-OCCURRENCE-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MULTIPLE-OCCURRENCES">
            <xsd:annotation>
               <xsd:documentation>Specifies that an event may occur more than once in a given time interval.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="EventOccurrenceKindEnum.multipleOccurrences"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SINGLE-OCCURRENCE">
            <xsd:annotation>
               <xsd:documentation>Specifies that an event shall occur only once in a given time interval.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="EventOccurrenceKindEnum.singleOccurrence"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EXECUTION-ORDER-CONSTRAINT-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HIERARCHICAL-EOC">
            <xsd:annotation>
               <xsd:documentation>Specifies that the Execution Order Constraint specifies a hierarchical execution order constraint.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ExecutionOrderConstraintTypeEnum.hierarchicalEOC"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ORDINARY-EOC">
            <xsd:annotation>
               <xsd:documentation>Specifies that the Execution Order Constraint specifies an ordinary execution order constraint.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ExecutionOrderConstraintTypeEnum.ordinaryEOC"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPETITIVE-EOC">
            <xsd:annotation>
               <xsd:documentation>Specifies that the Execution Order Constraint specifies a repetitive execution order constraint.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ExecutionOrderConstraintTypeEnum.repetitiveEOC"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EXECUTION-TIME-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="GROSS">
            <xsd:annotation>
               <xsd:documentation>Indicates that the given execution time is the time used to execute the ExecutableEntity without any interruption and and including external calls.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ExecutionTimeTypeEnum.gross"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NET">
            <xsd:annotation>
               <xsd:documentation>Indicates that the given execution time is the time used to execute the ExecutableEntity without any interruption and without any external calls.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ExecutionTimeTypeEnum.net"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="EXT-ID-CLASS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FILTER-DEBOUNCING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEBOUNCE-DATA">
            <xsd:annotation>
               <xsd:documentation>The signal is a
mean value</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FilterDebouncingEnum.debounceData"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RAW-DATA">
            <xsd:annotation>
               <xsd:documentation>Means that no modification of the
signal has been applied. This is the default
value</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FilterDebouncingEnum.rawData"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WAIT-TIME-DATE">
            <xsd:annotation>
               <xsd:documentation>The signal is delivered by a GET operation after a certain amount of time</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FilterDebouncingEnum.waitTimeDate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FLEXRAY-CHANNEL-NAME--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CHANNEL-A">
            <xsd:annotation>
               <xsd:documentation>Channel A</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FlexrayChannelName.channelA"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CHANNEL-B">
            <xsd:annotation>
               <xsd:documentation>Channel B</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FlexrayChannelName.channelB"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FLEXRAY-NM-SCHEDULE-VARIANT--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SCHEDULE-VARIANT-1">
            <xsd:annotation>
               <xsd:documentation>NM-Vote and NM Data transmitted within one PDU in static segment. The NM-Vote has to be realized as separate bit within the PDU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-2">
            <xsd:annotation>
               <xsd:documentation>NM-Vote and NM-Data transmitted within one PDU in dynamic segment. The presence (or non-presence) of the PDU corresponds to the NM-Vote</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-3">
            <xsd:annotation>
               <xsd:documentation>NM-Vote and NM-Data are transmitted in the static segment in separate PDUs. This alternative is not recommended =&gt; Alternative 1 should be used instead.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant3"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-4">
            <xsd:annotation>
               <xsd:documentation>NM-Vote transmitted in static and NM-Data transmitted in dynamic segment.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant4"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-5">
            <xsd:annotation>
               <xsd:documentation>NM-Vote is transmitted in dynamic and NM-Data is transmitted in static segment. This alternative is not recommended =&gt; Variants 2 or 6 should be used instead.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant5"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-6">
            <xsd:annotation>
               <xsd:documentation>NM-Vote and NM-Data are transmitted in dynamic segment in separate PDUs.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant6"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULE-VARIANT-7">
            <xsd:annotation>
               <xsd:documentation>NM-Vote and a copy of the CBV are transmitted in the static segment (using the FlexRay NM Vector support) and NM-Data is transmitted in the dynamic segment</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="FlexrayNmScheduleVariant.scheduleVariant7"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FLOAT--SIMPLE">
      <xsd:restriction base="xsd:double"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FLOAT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FLOAT">
            <xsd:annotation>
               <xsd:documentation>This indicates that a page formatter is allowed to float the table to optimize the pagination. This is for example supported by TeX.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FloatEnum.float"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-FLOAT">
            <xsd:annotation>
               <xsd:documentation>This indicates that a page formatter is not allowed to float the object to optimize the pagination.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FloatEnum.noFloat"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FM-FEATURE-SELECTION-STATE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DESELECTED">
            <xsd:annotation>
               <xsd:documentation>The feature is excluded from the selection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FMFeatureSelectionState.deselected"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SELECTED">
            <xsd:annotation>
               <xsd:documentation>The feature is included in the selection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FMFeatureSelectionState.selected"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UNDECIDED">
            <xsd:annotation>
               <xsd:documentation>It is not yet decided whether the feature shall be included into or excluded from the selection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FMFeatureSelectionState.undecided"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FR-AR-TP-ACK-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACK-WITH-RT">
            <xsd:annotation>
               <xsd:documentation>Acknowledgement with retry.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FrArTpAckType.ackWithRt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACK-WITHOUT-RT">
            <xsd:annotation>
               <xsd:documentation>Acknowledgement without retry.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FrArTpAckType.ackWithoutRt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-ACK">
            <xsd:annotation>
               <xsd:documentation>No acknowledgement.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FrArTpAckType.noAck"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FRAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALL">
            <xsd:annotation>
               <xsd:documentation>Borders all around the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FrameEnum.all"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BOTTOM">
            <xsd:annotation>
               <xsd:documentation>Border at the bottom of the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FrameEnum.bottom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No borders around the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FrameEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SIDES">
            <xsd:annotation>
               <xsd:documentation>Borders at the sides of the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="FrameEnum.sides"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOP">
            <xsd:annotation>
               <xsd:documentation>Border at the top of the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="FrameEnum.top"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOPBOT">
            <xsd:annotation>
               <xsd:documentation>Borders at the top and bottom of  the table</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="FrameEnum.topbot"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="FULL-BINDING-TIME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BLUEPRINT-DERIVATION-TIME">
            <xsd:annotation>
               <xsd:documentation>The point in time when an object is created from a blueprint.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="FullBindingTimeEnum.blueprintDerivationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CODE-GENERATION-TIME">
            <xsd:annotation>
               <xsd:documentation>* Coding by hand, based on requirements document.
* Tool based code generation, e.g. from a model.
* The model may contain variants.
* Only code for the selected variant(s) is actually generated.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="FullBindingTimeEnum.codeGenerationTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK-TIME">
            <xsd:annotation>
               <xsd:documentation>Configure what is included in object code, and what is omitted
Based on which variant(s) are selected
E.g. for modules that are delivered as object code (as opposed to those that are delivered as source code)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="FullBindingTimeEnum.linkTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST-BUILD">
            <xsd:annotation>
               <xsd:documentation>PostBuild is the binding time which is bound latest at startup of the ECU. In other words this is everything between creation of the executable program and startup of the ECU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="FullBindingTimeEnum.postBuild"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRE-COMPILE-TIME">
            <xsd:annotation>
               <xsd:documentation>This is typically the C-Preprocessor.
Exclude parts of the code from the compilation process, e.g.,
because they are not required for the selected variant,
because they are incompatible with the selected variant,
because they require resources that are not present in the selected variant.
Object code is only generated for the selected variant(s).
The code that is excluded at this stage code will not be available at later stages.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="FullBindingTimeEnum.preCompileTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYSTEM-DESIGN-TIME">
            <xsd:annotation>
               <xsd:documentation>* Designing the VFB.
* Software Component types (PortInterfaces).
* SWC Prototypes and the Connections between SWCprototypes.
* Designing the Topology
* ECUs and interconnecting Networks
* Designing the Communication Matrix and Data Mapping</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="FullBindingTimeEnum.systemDesignTime"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="GLOBAL-TIME-CRC-SUPPORT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CRC-NOT-SUPPORTED">
            <xsd:annotation>
               <xsd:documentation>This indicates that CRC is not supported</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="GlobalTimeCrcSupportEnum.crcNotSupported"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CRC-SUPPORTED">
            <xsd:annotation>
               <xsd:documentation>This indicates that CRC is supported</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="GlobalTimeCrcSupportEnum.crcSupported"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="GLOBAL-TIME-CRC-VALIDATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CRC-IGNORED">
            <xsd:annotation>
               <xsd:documentation>The CRC is supposed to be ignored</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="GlobalTimeCrcValidationEnum.crcIgnored"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CRC-NOT-VALIDATED">
            <xsd:annotation>
               <xsd:documentation>The CRC is not supposed to be present. If CRC is present the message is ignored.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="GlobalTimeCrcValidationEnum.crcNotValidated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CRC-OPTIONAL">
            <xsd:annotation>
               <xsd:documentation>Either the CRC is present and then shall be validated or the CRC is not present and no CRC check is done.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="GlobalTimeCrcValidationEnum.crcOptional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CRC-VALIDATED">
            <xsd:annotation>
               <xsd:documentation>This CRC is supposed to be validated.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="GlobalTimeCrcValidationEnum.crcValidated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="GRAPHIC-FIT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AS-IS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the image shall be incorporated as is without scaling, rotation etc.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="GraphicFitEnum.AsIs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIT-TO-PAGE">
            <xsd:annotation>
               <xsd:documentation>Fit to the page</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="GraphicFitEnum.FitToPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>fit to the text containing the graphic.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="GraphicFitEnum.FitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LIMIT-TO-PAGE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the width of the graphic shall be limited to the '''page width'''. The image shall not be scaled down but cropped.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="GraphicFitEnum.LimitToPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the width of the graphic shall be limited to the width of the current '''text flow'''. The image shall not be scaled down but cropped.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="GraphicFitEnum.LimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-180">
            <xsd:annotation>
               <xsd:documentation>Rotate 180 degree</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="GraphicFitEnum.Rotate180"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-180-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate 180 degree</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="GraphicFitEnum.Rotate180LimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW">
            <xsd:annotation>
               <xsd:documentation>Rotate 90 degree counter clockwise</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="GraphicFitEnum.Rotate90ccw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW-FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree counter clock wise and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="GraphicFitEnum.Rotate90CcwFitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CCW-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree counter clock wise and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="GraphicFitEnum.Rotate90CcwLimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW">
            <xsd:annotation>
               <xsd:documentation>Rotate 90 degree clockwise</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="10";mmt.qualifiedName="GraphicFitEnum.Rotate90Cw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW-FIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="11";mmt.qualifiedName="GraphicFitEnum.Rotate90CwFitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROTATE-90-CW-LIMIT-TO-TEXT">
            <xsd:annotation>
               <xsd:documentation>Rotate by 90 degree and then fit to text</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="12";mmt.qualifiedName="GraphicFitEnum.Rotate90CwLimitToText"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="GRAPHIC-NOTATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BMP">
            <xsd:annotation>
               <xsd:documentation>bitmap image</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="GraphicNotationEnum.bmp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EPS">
            <xsd:annotation>
               <xsd:documentation>Encapsulated Postscript</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="GraphicNotationEnum.eps"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GIF">
            <xsd:annotation>
               <xsd:documentation>Graphics Interchange Format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="GraphicNotationEnum.gif"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JPG">
            <xsd:annotation>
               <xsd:documentation>"Joint Photographic Experts Group"  format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="GraphicNotationEnum.jpg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PDF">
            <xsd:annotation>
               <xsd:documentation>Portable Document Format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="GraphicNotationEnum.pdf"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PNG">
            <xsd:annotation>
               <xsd:documentation>Portable Network Graphics</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="GraphicNotationEnum.png"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SVG">
            <xsd:annotation>
               <xsd:documentation>scalable vector graphic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="GraphicNotationEnum.svg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIFF">
            <xsd:annotation>
               <xsd:documentation>Tagged Image File Format</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="GraphicNotationEnum.tiff"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HANDLE-INVALID-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DONT-INVALIDATE">
            <xsd:annotation>
               <xsd:documentation>Invalidation is switched off.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HandleInvalidEnum.dontInvalidate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXTERNAL-REPLACEMENT">
            <xsd:annotation>
               <xsd:documentation>Replace a received invalidValue. The replacement value is sourced from the externalReplacement.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HandleInvalidEnum.externalReplacement"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KEEP">
            <xsd:annotation>
               <xsd:documentation>The application software is supposed to  handle signal invalidation on RTE API level either by DataReceiveErrorEvent or check of error code on read access.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="HandleInvalidEnum.keep"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPLACE">
            <xsd:annotation>
               <xsd:documentation>Replace a received invalidValue. The replacement value is specified by the initValue.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="HandleInvalidEnum.replace"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HANDLE-OUT-OF-RANGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT">
            <xsd:annotation>
               <xsd:documentation>The RTE will use the initValue if the actual value is out of the specified bounds.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HandleOutOfRangeEnum.default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXTERNAL-REPLACEMENT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the value replacement is sourced from the attribute replaceWith.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HandleOutOfRangeEnum.externalReplacement"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IGNORE">
            <xsd:annotation>
               <xsd:documentation>The RTE will ignore any attempt to send or receive the corresponding dataElement if the value is out of the specified range.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="HandleOutOfRangeEnum.ignore"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INVALID">
            <xsd:annotation>
               <xsd:documentation>The RTE will use the invalidValue if the value is out of the specified bounds.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="HandleOutOfRangeEnum.invalid"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>A range check is not required.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="HandleOutOfRangeEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SATURATE">
            <xsd:annotation>
               <xsd:documentation>The RTE will saturate the value of the dataElement such that it is limited to the applicable upper bound if it is greater than the upper bound. Consequently, it is limited to the applicable lower bound if the value is less than the lower bound.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="HandleOutOfRangeEnum.saturate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HANDLE-OUT-OF-RANGE-STATUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="INDICATE">
            <xsd:annotation>
               <xsd:documentation>The RTE sets the return status to RTE_E_OUT_OF_RANGE if the received value is out of range and the attribute handleOutOfRange is not set to "none" or "invalid".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HandleOutOfRangeStatusEnum.indicate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SILENT">
            <xsd:annotation>
               <xsd:documentation>The RTE sets the return status to RTE_E_OK</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HandleOutOfRangeStatusEnum.silent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HANDLE-TERMINATION-AND-RESTART-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAN-BE-TERMINATED">
            <xsd:annotation>
               <xsd:documentation>Supports termination.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HandleTerminationAndRestartEnum.canBeTerminated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CAN-BE-TERMINATED-AND-RESTARTED">
            <xsd:annotation>
               <xsd:documentation>Supports termination and restarting.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HandleTerminationAndRestartEnum.canBeTerminatedAndRestarted"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-SUPPORT">
            <xsd:annotation>
               <xsd:documentation>Stop and restart is not supported at all.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="HandleTerminationAndRestartEnum.noSupport"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HANDLE-TIMEOUT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>If set to none no replacement shall take place.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HandleTimeoutEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPLACE">
            <xsd:annotation>
               <xsd:documentation>If set to replace, the replacement value shall be the  ComInitValue.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HandleTimeoutEnum.replace"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPLACE-BY-TIMEOUT-SUBSTITUTION-VALUE">
            <xsd:annotation>
               <xsd:documentation>If set to replace, the replacement value shall be the timeout substitution value.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="HandleTimeoutEnum.replaceByTimeoutSubstitutionValue"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HC-CONDITION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EQUAL">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HCConditionEnum.equal"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOT-EQUAL">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HCConditionEnum.notEqual"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HC-SUPERVISION-CONDITION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IS-EXPIRED">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="HCSupervisionConditionTypeEnum.isExpired"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-FAILED">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HCSupervisionConditionTypeEnum.isFailed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-OK">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HCSupervisionConditionTypeEnum.isOk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS-STOPPED">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="HCSupervisionConditionTypeEnum.isStopped"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="HTTP-ACCEPT-ENCODING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFLATE">
            <xsd:annotation>
               <xsd:documentation>Use deflate compression.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="HttpAcceptEncodingEnum.deflate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GZIP">
            <xsd:annotation>
               <xsd:documentation>Use gzip pcompression.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="HttpAcceptEncodingEnum.gzip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="I-PDU-SIGNAL-PROCESSING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFERRED">
            <xsd:annotation>
               <xsd:documentation>The signal indications / confirmations are deferred.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="IPduSignalProcessingEnum.deferred"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IMMEDIATE">
            <xsd:annotation>
               <xsd:documentation>The signal indications / confirmations are performed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="IPduSignalProcessingEnum.immediate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="I-SIGNAL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ARRAY">
            <xsd:annotation>
               <xsd:documentation>ISignal shall be interpreted as an array (UINT8_N, UINT8_DYN)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ISignalTypeEnum.array"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PRIMITIVE">
            <xsd:annotation>
               <xsd:documentation>ISignal shall be interpreted as a primitive type (e.g. UINT_8, SINT_32)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ISignalTypeEnum.primitive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="128"></xsd:maxLength>
         <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IKE-AUTHENTICATION-METHOD-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DSA">
            <xsd:annotation>
               <xsd:documentation>Digital Signature Authentication</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="IkeAuthenticationMethodEnum.dsa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PSK">
            <xsd:annotation>
               <xsd:documentation>Pre-shared key authentication</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="IkeAuthenticationMethodEnum.psk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="INSTALLATION-INSTRUCTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ADD-OR-UPDATE">
            <xsd:annotation>
               <xsd:documentation>The SoftwareCluster shall be added (if not already existing on the target) or updated (if already existing on the target).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="InstallationInstructionEnum.addOrUpdate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REMOVE">
            <xsd:annotation>
               <xsd:documentation>The SoftwareCluster shall be removed from the target.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="InstallationInstructionEnum.remove"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[+\-]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="INTERVAL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CLOSED">
            <xsd:annotation>
               <xsd:documentation>The area is limited by the value given. The value itself is included.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="IntervalTypeEnum.closed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INFINITE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the limit is infinite. Note, it is obsolete. Use INF / -INF as value of the limit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";mmt.qualifiedName="IntervalTypeEnum.infinite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPEN">
            <xsd:annotation>
               <xsd:documentation>The area is limited by the value given. The value itself is not included.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="IntervalTypeEnum.open"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IP-ADDRESS-KEEP-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FORGET">
            <xsd:annotation>
               <xsd:documentation>After a dynamic IP address has been assigned just use it for this session.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="IpAddressKeepEnum.forget"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STORE-PERSISTENTLY">
            <xsd:annotation>
               <xsd:documentation>After a dynamic IP address has been assigned store the address persistently.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="IpAddressKeepEnum.storePersistently"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IP-SEC-CONNECTION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DROP">
            <xsd:annotation>
               <xsd:documentation>Signifying that packets should be discarded</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="IPSecConnectionTypeEnum.drop"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PASSTHROUGH">
            <xsd:annotation>
               <xsd:documentation>Signifying that no IPsec processing should be done at all.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="IPSecConnectionTypeEnum.passthrough"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REJECT">
            <xsd:annotation>
               <xsd:documentation>Signifying that packets should be discarded and a diagnostic ICMP returned.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="IPSecConnectionTypeEnum.reject"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRANSPORT">
            <xsd:annotation>
               <xsd:documentation>Signifying that the IPSec transport mode is used. With the transport mode the original IP header is retained and only the IP payload and ESP trailer is encrypted.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="IPSecConnectionTypeEnum.transport"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TUNNEL">
            <xsd:annotation>
               <xsd:documentation>Signifying that the IPSec tunnel mode is used. With tunnel mode, the entire original IP packet is protected by IPSec. This means IPSec wraps the original packet, encrypts it, adds a new IP header and sends it to the other side.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="IPSecConnectionTypeEnum.tunnel"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IP4-ADDRESS-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|ANY"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IP6-ADDRESS-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7,7}|ANY"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IPV-4-ADDRESS-SOURCE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AUTO-IP">
            <xsd:annotation>
               <xsd:documentation>AutoIP is used to dynamically assign IP addresses at device startup.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="Ipv4AddressSourceEnum.autoIp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AUTO-IP--DOIP">
            <xsd:annotation>
               <xsd:documentation>Linklocal IPv4 Address Assignment using DoIP Parameters</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="Ipv4AddressSourceEnum.autoIp_doip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AUTO-IPDHCPV-4">
            <xsd:annotation>
               <xsd:documentation>This enum literal is deprecated and will be removed in future.

Old description: 
The IpAddress is declared via AutoIp or dhcp.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";mmt.qualifiedName="Ipv4AddressSourceEnum.autoIp/dhcpv4"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DHCPV-4">
            <xsd:annotation>
               <xsd:documentation>DHCP is a service for the automatic IP configuration of a client.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="Ipv4AddressSourceEnum.dhcpv4"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIXED">
            <xsd:annotation>
               <xsd:documentation>The IP Address shall be declared manually.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="Ipv4AddressSourceEnum.fixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="IPV-6-ADDRESS-SOURCE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DHCPV-6">
            <xsd:annotation>
               <xsd:documentation>DHCP is a service for the automatic IP configuration of a client.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="Ipv6AddressSourceEnum.dhcpv6"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIXED">
            <xsd:annotation>
               <xsd:documentation>The IP Address shall be declared manually.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="Ipv6AddressSourceEnum.fixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK-LOCAL">
            <xsd:annotation>
               <xsd:documentation>LinkLocal is intended only for communications within the segment of a local network (a link) or a point-to-point connection that a host is connected to.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="Ipv6AddressSourceEnum.linkLocal"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LINK-LOCAL--DOIP">
            <xsd:annotation>
               <xsd:documentation>Linklocal IPv6 Address Assignment using DoIP Parameters</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="Ipv6AddressSourceEnum.linkLocal_doip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ROUTER-ADVERTISEMENT">
            <xsd:annotation>
               <xsd:documentation>IPv6 Stateless Autoconfiguration.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="Ipv6AddressSourceEnum.routerAdvertisement"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ITEM-LABEL-POS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NEWLINE">
            <xsd:annotation>
               <xsd:documentation>The label is renders in a new line.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ItemLabelPosEnum.newline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEWLINE-IF-NECESSARY">
            <xsd:annotation>
               <xsd:documentation>The label is rendered in a new line if it is longer than the indentation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ItemLabelPosEnum.newlineIfNecessary"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-NEWLINE">
            <xsd:annotation>
               <xsd:documentation>The label is rendered in one line with the item even if it is longer than the indentation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ItemLabelPosEnum.noNewline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="KEEP-WITH-PREVIOUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="KEEP">
            <xsd:annotation>
               <xsd:documentation>This indicates that the block shall be kept together with the previous block.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="KeepWithPreviousEnum.keep"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-KEEP">
            <xsd:annotation>
               <xsd:documentation>This indicates that there is no need to keep the block with the previous one. This is the same as if the attribute itself is missing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="KeepWithPreviousEnum.noKeep"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="KEY-USAGE-RESTRICTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="GENERATE">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="KeyUsageRestrictionEnum.generate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GENERATE-AND-VERIFY">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="KeyUsageRestrictionEnum.generateAndVerify"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VERIFY">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="KeyUsageRestrictionEnum.verify"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="L-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AA">
            <xsd:annotation>
               <xsd:documentation>Afar</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="LEnum.aa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AB">
            <xsd:annotation>
               <xsd:documentation>Abkhazian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="LEnum.ab"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AF">
            <xsd:annotation>
               <xsd:documentation>Afrikaans</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="LEnum.af"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AM">
            <xsd:annotation>
               <xsd:documentation>Amharic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="LEnum.am"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AR">
            <xsd:annotation>
               <xsd:documentation>Arabic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="LEnum.ar"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AS">
            <xsd:annotation>
               <xsd:documentation>Assamese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="LEnum.as"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AY">
            <xsd:annotation>
               <xsd:documentation>Aymara</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="LEnum.ay"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="AZ">
            <xsd:annotation>
               <xsd:documentation>Azerbaijani</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="LEnum.az"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BA">
            <xsd:annotation>
               <xsd:documentation>Bashkir</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="LEnum.ba"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BE">
            <xsd:annotation>
               <xsd:documentation>Byelorussian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="LEnum.be"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BG">
            <xsd:annotation>
               <xsd:documentation>Bulgarian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="10";mmt.qualifiedName="LEnum.bg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BH">
            <xsd:annotation>
               <xsd:documentation>Bihari</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="11";mmt.qualifiedName="LEnum.bh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BI">
            <xsd:annotation>
               <xsd:documentation>Bislama</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="12";mmt.qualifiedName="LEnum.bi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BN">
            <xsd:annotation>
               <xsd:documentation>Bengali</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="13";mmt.qualifiedName="LEnum.bn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BO">
            <xsd:annotation>
               <xsd:documentation>Tibetian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="14";mmt.qualifiedName="LEnum.bo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BR">
            <xsd:annotation>
               <xsd:documentation>Breton</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="15";mmt.qualifiedName="LEnum.br"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CA">
            <xsd:annotation>
               <xsd:documentation>Catalan</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="16";mmt.qualifiedName="LEnum.ca"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CO">
            <xsd:annotation>
               <xsd:documentation>Corsican</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="17";mmt.qualifiedName="LEnum.co"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CS">
            <xsd:annotation>
               <xsd:documentation>Czech</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="18";mmt.qualifiedName="LEnum.cs"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CY">
            <xsd:annotation>
               <xsd:documentation>Welsh</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="19";mmt.qualifiedName="LEnum.cy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DA">
            <xsd:annotation>
               <xsd:documentation>Danish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="20";mmt.qualifiedName="LEnum.da"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DE">
            <xsd:annotation>
               <xsd:documentation>German</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="21";mmt.qualifiedName="LEnum.de"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DZ">
            <xsd:annotation>
               <xsd:documentation>Bhutani</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="22";mmt.qualifiedName="LEnum.dz"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EL">
            <xsd:annotation>
               <xsd:documentation>Greek</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="23";mmt.qualifiedName="LEnum.el"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EN">
            <xsd:annotation>
               <xsd:documentation>English</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="24";mmt.qualifiedName="LEnum.en"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EO">
            <xsd:annotation>
               <xsd:documentation>Esperanto</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="25";mmt.qualifiedName="LEnum.eo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ES">
            <xsd:annotation>
               <xsd:documentation>Spanish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="26";mmt.qualifiedName="LEnum.es"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ET">
            <xsd:annotation>
               <xsd:documentation>Estonian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="27";mmt.qualifiedName="LEnum.et"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EU">
            <xsd:annotation>
               <xsd:documentation>Basque</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="28";mmt.qualifiedName="LEnum.eu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FA">
            <xsd:annotation>
               <xsd:documentation>Persian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="29";mmt.qualifiedName="LEnum.fa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FI">
            <xsd:annotation>
               <xsd:documentation>Finnish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="30";mmt.qualifiedName="LEnum.fi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FJ">
            <xsd:annotation>
               <xsd:documentation>Fiji</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="31";mmt.qualifiedName="LEnum.fj"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FO">
            <xsd:annotation>
               <xsd:documentation>Faeroese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="32";mmt.qualifiedName="LEnum.fo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FOR-ALL">
            <xsd:annotation>
               <xsd:documentation>The content applies to all languages</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="33";mmt.qualifiedName="LEnum.forAll"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FR">
            <xsd:annotation>
               <xsd:documentation>French</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="34";mmt.qualifiedName="LEnum.fr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FY">
            <xsd:annotation>
               <xsd:documentation>Frisian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="35";mmt.qualifiedName="LEnum.fy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GA">
            <xsd:annotation>
               <xsd:documentation>Irish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="36";mmt.qualifiedName="LEnum.ga"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GD">
            <xsd:annotation>
               <xsd:documentation>Scots Gaelic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="37";mmt.qualifiedName="LEnum.gd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GL">
            <xsd:annotation>
               <xsd:documentation>Galician</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="38";mmt.qualifiedName="LEnum.gl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GN">
            <xsd:annotation>
               <xsd:documentation>Guarani</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="39";mmt.qualifiedName="LEnum.gn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GU">
            <xsd:annotation>
               <xsd:documentation>Gjarati</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="40";mmt.qualifiedName="LEnum.gu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HA">
            <xsd:annotation>
               <xsd:documentation>Hausa</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="41";mmt.qualifiedName="LEnum.ha"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HI">
            <xsd:annotation>
               <xsd:documentation>Hindi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="42";mmt.qualifiedName="LEnum.hi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HR">
            <xsd:annotation>
               <xsd:documentation>Croatian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="43";mmt.qualifiedName="LEnum.hr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HU">
            <xsd:annotation>
               <xsd:documentation>Hungarian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="44";mmt.qualifiedName="LEnum.hu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HY">
            <xsd:annotation>
               <xsd:documentation>Armenian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="45";mmt.qualifiedName="LEnum.hy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IA">
            <xsd:annotation>
               <xsd:documentation>Interlingua</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="46";mmt.qualifiedName="LEnum.ia"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IE">
            <xsd:annotation>
               <xsd:documentation>Interlingue</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="47";mmt.qualifiedName="LEnum.ie"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IK">
            <xsd:annotation>
               <xsd:documentation>Inupiak</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="48";mmt.qualifiedName="LEnum.ik"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IN">
            <xsd:annotation>
               <xsd:documentation>Indonesian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="49";mmt.qualifiedName="LEnum.in"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IS">
            <xsd:annotation>
               <xsd:documentation>Icelandic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="50";mmt.qualifiedName="LEnum.is"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IT">
            <xsd:annotation>
               <xsd:documentation>Italian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="51";mmt.qualifiedName="LEnum.it"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="IW">
            <xsd:annotation>
               <xsd:documentation>Hebrew</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="52";mmt.qualifiedName="LEnum.iw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JA">
            <xsd:annotation>
               <xsd:documentation>Japanese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="53";mmt.qualifiedName="LEnum.ja"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JI">
            <xsd:annotation>
               <xsd:documentation>Yiddish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="54";mmt.qualifiedName="LEnum.ji"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JW">
            <xsd:annotation>
               <xsd:documentation>Javanese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="55";mmt.qualifiedName="LEnum.jw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KA">
            <xsd:annotation>
               <xsd:documentation>Georgian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="56";mmt.qualifiedName="LEnum.ka"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KK">
            <xsd:annotation>
               <xsd:documentation>Kazakh</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="57";mmt.qualifiedName="LEnum.kk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KL">
            <xsd:annotation>
               <xsd:documentation>Greenlandic</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="58";mmt.qualifiedName="LEnum.kl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KM">
            <xsd:annotation>
               <xsd:documentation>Cambodian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="59";mmt.qualifiedName="LEnum.km"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KN">
            <xsd:annotation>
               <xsd:documentation>Kannada</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="60";mmt.qualifiedName="LEnum.kn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KO">
            <xsd:annotation>
               <xsd:documentation>Korean</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="61";mmt.qualifiedName="LEnum.ko"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KS">
            <xsd:annotation>
               <xsd:documentation>Kashmiri</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="62";mmt.qualifiedName="LEnum.ks"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KU">
            <xsd:annotation>
               <xsd:documentation>Kurdish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="63";mmt.qualifiedName="LEnum.ku"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KY">
            <xsd:annotation>
               <xsd:documentation>Kirghiz</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="64";mmt.qualifiedName="LEnum.ky"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LA">
            <xsd:annotation>
               <xsd:documentation>Latin</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="65";mmt.qualifiedName="LEnum.la"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LN">
            <xsd:annotation>
               <xsd:documentation>Lingala</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="66";mmt.qualifiedName="LEnum.ln"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LO">
            <xsd:annotation>
               <xsd:documentation>Laothian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="67";mmt.qualifiedName="LEnum.lo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LT">
            <xsd:annotation>
               <xsd:documentation>Lithuanian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="68";mmt.qualifiedName="LEnum.lt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LV">
            <xsd:annotation>
               <xsd:documentation>Lavian, Lettish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="69";mmt.qualifiedName="LEnum.lv"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MG">
            <xsd:annotation>
               <xsd:documentation>Malagasy</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="70";mmt.qualifiedName="LEnum.mg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MI">
            <xsd:annotation>
               <xsd:documentation>Maori</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="71";mmt.qualifiedName="LEnum.mi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MK">
            <xsd:annotation>
               <xsd:documentation>Macedonian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="72";mmt.qualifiedName="LEnum.mk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ML">
            <xsd:annotation>
               <xsd:documentation>Malayalam</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="73";mmt.qualifiedName="LEnum.ml"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MN">
            <xsd:annotation>
               <xsd:documentation>Mongolian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="74";mmt.qualifiedName="LEnum.mn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MO">
            <xsd:annotation>
               <xsd:documentation>Moldavian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="75";mmt.qualifiedName="LEnum.mo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MR">
            <xsd:annotation>
               <xsd:documentation>Marathi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="76";mmt.qualifiedName="LEnum.mr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MS">
            <xsd:annotation>
               <xsd:documentation>Malay</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="77";mmt.qualifiedName="LEnum.ms"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MT">
            <xsd:annotation>
               <xsd:documentation>Maltese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="78";mmt.qualifiedName="LEnum.mt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MY">
            <xsd:annotation>
               <xsd:documentation>Burmese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="79";mmt.qualifiedName="LEnum.my"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NA">
            <xsd:annotation>
               <xsd:documentation>Nauru</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="80";mmt.qualifiedName="LEnum.na"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NE">
            <xsd:annotation>
               <xsd:documentation>Nepali</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="81";mmt.qualifiedName="LEnum.ne"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NL">
            <xsd:annotation>
               <xsd:documentation>Dutch</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="82";mmt.qualifiedName="LEnum.nl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO">
            <xsd:annotation>
               <xsd:documentation>Norwegian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="83";mmt.qualifiedName="LEnum.no"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OC">
            <xsd:annotation>
               <xsd:documentation>Occitan</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="84";mmt.qualifiedName="LEnum.oc"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OM">
            <xsd:annotation>
               <xsd:documentation>(Afan) Oromo</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="85";mmt.qualifiedName="LEnum.om"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OR">
            <xsd:annotation>
               <xsd:documentation>Oriya</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="86";mmt.qualifiedName="LEnum.or"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PA">
            <xsd:annotation>
               <xsd:documentation>Punjabi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="87";mmt.qualifiedName="LEnum.pa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PL">
            <xsd:annotation>
               <xsd:documentation>Polish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="88";mmt.qualifiedName="LEnum.pl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PS">
            <xsd:annotation>
               <xsd:documentation>Pashto, Pushto</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="89";mmt.qualifiedName="LEnum.ps"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PT">
            <xsd:annotation>
               <xsd:documentation>Portuguese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="90";mmt.qualifiedName="LEnum.pt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QU">
            <xsd:annotation>
               <xsd:documentation>Quechua</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="91";mmt.qualifiedName="LEnum.qu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RM">
            <xsd:annotation>
               <xsd:documentation>Rhaeto-Romance</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="92";mmt.qualifiedName="LEnum.rm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RN">
            <xsd:annotation>
               <xsd:documentation>Kirundi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="93";mmt.qualifiedName="LEnum.rn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RO">
            <xsd:annotation>
               <xsd:documentation>Romanian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="94";mmt.qualifiedName="LEnum.ro"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RU">
            <xsd:annotation>
               <xsd:documentation>Russian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="95";mmt.qualifiedName="LEnum.ru"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RW">
            <xsd:annotation>
               <xsd:documentation>Kinyarwanda</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="96";mmt.qualifiedName="LEnum.rw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SA">
            <xsd:annotation>
               <xsd:documentation>Sanskrit</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="97";mmt.qualifiedName="LEnum.sa"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SD">
            <xsd:annotation>
               <xsd:documentation>Sindhi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="98";mmt.qualifiedName="LEnum.sd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SG">
            <xsd:annotation>
               <xsd:documentation>Sangro</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="99";mmt.qualifiedName="LEnum.sg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SH">
            <xsd:annotation>
               <xsd:documentation>Serbo-Croatian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="100";mmt.qualifiedName="LEnum.sh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SI">
            <xsd:annotation>
               <xsd:documentation>Singhalese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="101";mmt.qualifiedName="LEnum.si"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SK">
            <xsd:annotation>
               <xsd:documentation>Slovak</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="102";mmt.qualifiedName="LEnum.sk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SL">
            <xsd:annotation>
               <xsd:documentation>Slovenian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="103";mmt.qualifiedName="LEnum.sl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SM">
            <xsd:annotation>
               <xsd:documentation>Samoan</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="104";mmt.qualifiedName="LEnum.sm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SN">
            <xsd:annotation>
               <xsd:documentation>Shona</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="105";mmt.qualifiedName="LEnum.sn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SO">
            <xsd:annotation>
               <xsd:documentation>Somali</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="106";mmt.qualifiedName="LEnum.so"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SQ">
            <xsd:annotation>
               <xsd:documentation>Albanian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="107";mmt.qualifiedName="LEnum.sq"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SR">
            <xsd:annotation>
               <xsd:documentation>Serbian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="108";mmt.qualifiedName="LEnum.sr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SS">
            <xsd:annotation>
               <xsd:documentation>Siswati</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="109";mmt.qualifiedName="LEnum.ss"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ST">
            <xsd:annotation>
               <xsd:documentation>Sesotho</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="110";mmt.qualifiedName="LEnum.st"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SU">
            <xsd:annotation>
               <xsd:documentation>Sundanese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="111";mmt.qualifiedName="LEnum.su"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SV">
            <xsd:annotation>
               <xsd:documentation>Swedish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="112";mmt.qualifiedName="LEnum.sv"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SW">
            <xsd:annotation>
               <xsd:documentation>Swahili</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="113";mmt.qualifiedName="LEnum.sw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TA">
            <xsd:annotation>
               <xsd:documentation>Tamil</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="114";mmt.qualifiedName="LEnum.ta"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TE">
            <xsd:annotation>
               <xsd:documentation>Tegulu</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="115";mmt.qualifiedName="LEnum.te"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TG">
            <xsd:annotation>
               <xsd:documentation>Tajik</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="116";mmt.qualifiedName="LEnum.tg"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TH">
            <xsd:annotation>
               <xsd:documentation>Thai</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="117";mmt.qualifiedName="LEnum.th"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TI">
            <xsd:annotation>
               <xsd:documentation>Tigrinya</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="118";mmt.qualifiedName="LEnum.ti"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TK">
            <xsd:annotation>
               <xsd:documentation>Turkmen</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="119";mmt.qualifiedName="LEnum.tk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TL">
            <xsd:annotation>
               <xsd:documentation>Tagalog</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="120";mmt.qualifiedName="LEnum.tl"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TN">
            <xsd:annotation>
               <xsd:documentation>Setswana</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="121";mmt.qualifiedName="LEnum.tn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TO">
            <xsd:annotation>
               <xsd:documentation>Tonga</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="122";mmt.qualifiedName="LEnum.to"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TR">
            <xsd:annotation>
               <xsd:documentation>Turkish</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="123";mmt.qualifiedName="LEnum.tr"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TS">
            <xsd:annotation>
               <xsd:documentation>Tsonga</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="124";mmt.qualifiedName="LEnum.ts"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TT">
            <xsd:annotation>
               <xsd:documentation>Tatar</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="125";mmt.qualifiedName="LEnum.tt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TW">
            <xsd:annotation>
               <xsd:documentation>Twi</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="126";mmt.qualifiedName="LEnum.tw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UK">
            <xsd:annotation>
               <xsd:documentation>Ukrainian</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="127";mmt.qualifiedName="LEnum.uk"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UR">
            <xsd:annotation>
               <xsd:documentation>Urdu</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="128";mmt.qualifiedName="LEnum.ur"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UZ">
            <xsd:annotation>
               <xsd:documentation>Uzbek</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="129";mmt.qualifiedName="LEnum.uz"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VI">
            <xsd:annotation>
               <xsd:documentation>Vietnamese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="130";mmt.qualifiedName="LEnum.vi"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VO">
            <xsd:annotation>
               <xsd:documentation>Volapuk</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="131";mmt.qualifiedName="LEnum.vo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WO">
            <xsd:annotation>
               <xsd:documentation>Wolof</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="132";mmt.qualifiedName="LEnum.wo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XH">
            <xsd:annotation>
               <xsd:documentation>Xhosa</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="133";mmt.qualifiedName="LEnum.xh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="YO">
            <xsd:annotation>
               <xsd:documentation>Yoruba</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="134";mmt.qualifiedName="LEnum.yo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ZH">
            <xsd:annotation>
               <xsd:documentation>Chinese</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="135";mmt.qualifiedName="LEnum.zh"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ZU">
            <xsd:annotation>
               <xsd:documentation>Zulu</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="136";mmt.qualifiedName="LEnum.zu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LATENCY-CONSTRAINT-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AGE">
            <xsd:annotation>
               <xsd:documentation>In this case, the latency constraint is seen from the perspective of the response event of the associated event chain. Given a certain response event, the age interval of the latest stimulus is constrained.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="LatencyConstraintTypeEnum.age"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REACTION">
            <xsd:annotation>
               <xsd:documentation>In this case, the latency constraint is seen from the perspective of the stimulus event of the associated event chain. Given a certain stimulus event, the reaction interval of the first response is constrained.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="LatencyConstraintTypeEnum.reaction"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LIMIT-VALUE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(0[xX][0-9a-fA-F]+)|(0[0-7]+)|(0[bB][0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)([eE]([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LIN-CHECKSUM-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CLASSIC">
            <xsd:annotation>
               <xsd:documentation>Classic in communication with LIN 1.3 slave nodes</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="LinChecksumType.classic"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ENHANCED">
            <xsd:annotation>
               <xsd:documentation>Enhanced in communication with LIN 2.0 slave nodes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="LinChecksumType.enhanced"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LIST-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NUMBER">
            <xsd:annotation>
               <xsd:documentation>This indicates that the list is an numerated list.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ListEnum.number"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UNNUMBER">
            <xsd:annotation>
               <xsd:documentation>This indicates that it is an enumeration (bulleted list)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ListEnum.unnumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LOG-TRACE-DEFAULT-LOG-LEVEL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEBUG">
            <xsd:annotation>
               <xsd:documentation>Detailed information for programmers</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.debug"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ERROR">
            <xsd:annotation>
               <xsd:documentation>Error with impact to correct functionality</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.error"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FATAL">
            <xsd:annotation>
               <xsd:documentation>Fatal error</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.fatal"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INFO">
            <xsd:annotation>
               <xsd:documentation>High level information</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.info"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VERBOSE">
            <xsd:annotation>
               <xsd:documentation>Verbose debug message</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.verbose"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WARN">
            <xsd:annotation>
               <xsd:documentation>Warning if correct behavior cannot be ensured</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="LogTraceDefaultLogLevelEnum.warn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="LOG-TRACE-LOG-MODE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONSOLE">
            <xsd:annotation>
               <xsd:documentation>Destination of log message will be the console output.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="LogTraceLogModeEnum.console"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FILE">
            <xsd:annotation>
               <xsd:documentation>Destination of log message will be a file on the file system.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="LogTraceLogModeEnum.file"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NETWORK">
            <xsd:annotation>
               <xsd:documentation>Log message will be transmitted over the communication bus.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="LogTraceLogModeEnum.network"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MAC-ADDRESS-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MAPPING-DIRECTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BIDIRECTIONAL">
            <xsd:annotation>
               <xsd:documentation>The TextTableMapping is applicable in both directions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MappingDirectionEnum.bidirectional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIRST-TO-SECOND">
            <xsd:annotation>
               <xsd:documentation>The TextTableMapping is applicable in the direction from firstDataPrototype / firstOperationArgument referring into the PortInterface of the PPortPrototype to secondDataPrototype / secondOperationArgument referring into the PortInterface of the RPortPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MappingDirectionEnum.firstToSecond"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECOND-TO-FIRST">
            <xsd:annotation>
               <xsd:documentation>The TextTableMapping is applicable in the direction from secondDataPrototype / secondOperationArgument referring into the PortInterface of the PPortPrototype to firstDataPrototype / firstOperationArgument referring into the PortInterface of the RPortPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MappingDirectionEnum.secondToFirst"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MAPPING-SCOPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MAPPING-SCOPE-CORE">
            <xsd:annotation>
               <xsd:documentation>The mapping constraint applies to different Cores.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MappingScopeEnum.mappingScopeCore"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MAPPING-SCOPE-ECU">
            <xsd:annotation>
               <xsd:documentation>The mapping constraint applies to different Ecus.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MappingScopeEnum.mappingScopeEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MAPPING-SCOPE-PARTITION">
            <xsd:annotation>
               <xsd:documentation>The mapping constraint applies to different Partitions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MappingScopeEnum.mappingScopePartition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MAX-COMM-MODE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FULL">
            <xsd:annotation>
               <xsd:documentation>Full communication is requested.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MaxCommModeEnum.full"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No communication is requested.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MaxCommModeEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SILENT">
            <xsd:annotation>
               <xsd:documentation>Silent communication is requested: Only listening but not "talking".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MaxCommModeEnum.silent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MAXIMUM-MESSAGE-LENGTH-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="I-4-G">
            <xsd:annotation>
               <xsd:documentation>SF-E allowed (SF of arbitrary length depending on FrTpPduLength), up to (2**32)-1 byte message length (all FF-x allowed).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MaximumMessageLengthType.I4g"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ISO">
            <xsd:annotation>
               <xsd:documentation>Up to (2**12)-1 Byte message length (No FF-Ex or SF-E or AF shall be used and recognized).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MaximumMessageLengthType.iso"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ISO-6">
            <xsd:annotation>
               <xsd:documentation>As ISO, but the maximum payload length is limited to 6 byte (SF-I, FF-I, CF). This is necessary to route TP on CAN when using Extended Addressing or Mixed Addressing on CAN.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MaximumMessageLengthType.iso6"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MCD-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*(\.[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*)*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MEMORY-ALLOCATION-KEYWORD-POLICY-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ADDR-METHOD-SHORT-NAME">
            <xsd:annotation>
               <xsd:documentation>The MemorySection shortNames of referring MemorySections and therefore the belonging Memory Allocation Keywords in the code are build with the shortName of the SwAddrMethod. This is the default value if the attribute does not exist.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MemoryAllocationKeywordPolicyType.addrMethodShortName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ADDR-METHOD-SHORT-NAME-AND-ALIGNMENT">
            <xsd:annotation>
               <xsd:documentation>The MemorySection shortNames of referring MemorySections and therefore the belonging Memory Allocation Keywords in the code are build with the shortName of the SwAddrMethod and a variable alignment postfix.

Thereby the alignment postfix needs to be consistent with the alignment attribute of the related MemorySection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MemoryAllocationKeywordPolicyType.addrMethodShortNameAndAlignment"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MEMORY-SECTION-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CALIBRATION-OFFLINE">
            <xsd:annotation>
               <xsd:documentation>Program data which can only be used for offline calibration.

'''Note''': This value is deprecated and shall be substituted by calPrm.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";atp.Status="removed";mmt.qualifiedName="MemorySectionType.calibrationOffline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CALIBRATION-ONLINE">
            <xsd:annotation>
               <xsd:documentation>Program data which can be used for online calibration.

'''Note''': This value is deprecated and shall be substituted by calPrm.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";mmt.qualifiedName="MemorySectionType.calibrationOnline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CALIBRATION-VARIABLES">
            <xsd:annotation>
               <xsd:documentation>This memory section is reserved for "virtual variables" that are computed by an MCD system during a measurement session but do not exist in the ECU memory.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MemorySectionType.calibrationVariables"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CALPRM">
            <xsd:annotation>
               <xsd:documentation>To be used for calibratable constants of ECU-functions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="MemorySectionType.calprm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CODE">
            <xsd:annotation>
               <xsd:documentation>To be used for mapping code to application block, boot block, external flash etc.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="MemorySectionType.code"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONFIG-DATA">
            <xsd:annotation>
               <xsd:documentation>Constants with attributes that show that they reside in one segment for module configuration.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="MemorySectionType.configData"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CONST">
            <xsd:annotation>
               <xsd:documentation>To be used for global or static constants.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="MemorySectionType.const"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXCLUDE-FROM-FLASH">
            <xsd:annotation>
               <xsd:documentation>This memory section is reserved for "virtual parameters" that are taken for computing the values of so-called dependent parameter of an MCD system. Dependent Parameters that are not at the same time "virtual parameters" are allocated in the ECU memory.

Virtual parameters, on the other hand, are not allocated in the ECU memory. Virtual parameters exist in the ECU Hex file for the purpose of being considered (for computing the values of dependent parameters) during an offline-calibration session.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="MemorySectionType.excludeFromFlash"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="USER-DEFINED">
            <xsd:annotation>
               <xsd:documentation>No specific categorization of sectionType possible.

'''Note''': This value is deprecated and shall be substituted by var, code, const, calprm, configData, excludeFromFlash and the appropriate values of the orthogonal attributes sectionInitializationPolicy, memoryAllocationKeywordPolicy and option.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";atp.Status="removed";mmt.qualifiedName="MemorySectionType.userDefined"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VAR">
            <xsd:annotation>
               <xsd:documentation>To be used for global or static variables. The expected initialization is specified with the attribute sectionInitializationPolicy.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="MemorySectionType.var"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VAR-FAST">
            <xsd:annotation>
               <xsd:documentation>To be used for all global or static variables that have at least one of the following properties: - accessed bit-wise - frequently used - high number of accesses in source code Some platforms allow the use of bit instructions for variables located in this specific RAM area as well as shorter addressing instructions. This saves code and runtime.

'''Note''': This value is deprecated and shall be substituted by var and the appropriate values of the orthogonal attributes sectionInitializationPolicy, memoryAllocationKeywordPolicy and option.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="10";atp.Status="removed";mmt.qualifiedName="MemorySectionType.varFast"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VAR-NO-INIT">
            <xsd:annotation>
               <xsd:documentation>To be used for all global or static variables that are never initialized.

'''Note''': This value is deprecated and shall be substituted by var and the appropriate values of the orthogonal attributes sectionInitializationPolicy, memoryAllocationKeywordPolicy and option.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="11";atp.Status="removed";mmt.qualifiedName="MemorySectionType.varNoInit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VAR-POWER-ON-INIT">
            <xsd:annotation>
               <xsd:documentation>To be used for all global or static variables that are initialized only after power on reset.

'''Note''': This value is deprecated and shall be substituted by var and the appropriate values of the orthogonal attributes sectionInitializationPolicy, memoryAllocationKeywordPolicy and option.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="12";atp.Status="removed";mmt.qualifiedName="MemorySectionType.varPowerOnInit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="META-CLASS-NAME--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[A-Z][a-zA-Z0-9_]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MIME-TYPE-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MODE-ACTIVATION-KIND--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ON-ENTRY">
            <xsd:annotation>
               <xsd:documentation>On entering the referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ModeActivationKind.onEntry"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ON-EXIT">
            <xsd:annotation>
               <xsd:documentation>On exiting the referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ModeActivationKind.onExit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ON-TRANSITION">
            <xsd:annotation>
               <xsd:documentation>On transition of the 1st referred mode to the 2nd referred mode.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ModeActivationKind.onTransition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MODE-ERROR-REACTION-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEFAULT-MODE">
            <xsd:annotation>
               <xsd:documentation>This represents the ability to switch to the defaultMode in case of a mode error.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ModeErrorReactionPolicyEnum.defaultMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LAST-MODE">
            <xsd:annotation>
               <xsd:documentation>This represents the ability to keep the last mode in case of a mode error.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ModeErrorReactionPolicyEnum.lastMode"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MODIFICATION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONTENT-RELATED">
            <xsd:annotation>
               <xsd:documentation>The attribute contentRelated expresses, that a substantial change of the content was performed in the object. Usually this means e.g. that the derived artifacts need to be regenerated (e.g. code generation).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ModificationTypeEnum.contentRelated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DOC-RELATED">
            <xsd:annotation>
               <xsd:documentation>The attribute docRelated expresses, that a change was applied to the documentation or other informal aspects of the object. Usually this means e.g. that not all derived artifacts need to be regenerated (e.g. code generation).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ModificationTypeEnum.docRelated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="MONOTONY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DECREASING">
            <xsd:annotation>
               <xsd:documentation>This indicates that the related curve needs to be monotony decreasing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="MonotonyEnum.decreasing"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INCREASING">
            <xsd:annotation>
               <xsd:documentation>This indicates that the related curve needs to be monotony increasing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="MonotonyEnum.increasing"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MONOTONOUS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the values shall be monotonously decreasing or increasing, depending on the trend set by the first values of the series.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="MonotonyEnum.monotonous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-MONOTONY">
            <xsd:annotation>
               <xsd:documentation>This indicates that the related curve needs not to be monotony.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="MonotonyEnum.noMonotony"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STRICT-MONOTONOUS">
            <xsd:annotation>
               <xsd:documentation>This indicates that the values shall be strict monotonously decreasing or increasing, depending on the trend set by the first values of the series.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="MonotonyEnum.strictMonotonous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STRICTLY-DECREASING">
            <xsd:annotation>
               <xsd:documentation>This indicates that the related curve needs to be strictly monotony decreasing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="MonotonyEnum.strictlyDecreasing"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STRICTLY-INCREASING">
            <xsd:annotation>
               <xsd:documentation>This indicates that the related curve needs to be strictly monotony increasing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="MonotonyEnum.strictlyIncreasing"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NATIVE-DECLARATION-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"></xsd:whiteSpace>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NETWORK-TARGET-ADDRESS-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FUNCTIONAL">
            <xsd:annotation>
               <xsd:documentation>Functional request type</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="NetworkTargetAddressType.functional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FUNCTIONAL-CAN-FD">
            <xsd:annotation>
               <xsd:documentation>Functional request type via CAN FD</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="NetworkTargetAddressType.functionalCanFd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PHYSICAL">
            <xsd:annotation>
               <xsd:documentation>Physical request type</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="NetworkTargetAddressType.physical"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PHYSICAL-CAN-FD">
            <xsd:annotation>
               <xsd:documentation>Physical request type via CAN FD</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="NetworkTargetAddressType.physicalCanFd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NM-COORDINATOR-ROLE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACTIVE">
            <xsd:annotation>
               <xsd:documentation>Coordinator which "actively" performs NmCoordinator functionality at this channel</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="NmCoordinatorRoleEnum.Active"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PASSIVE">
            <xsd:annotation>
               <xsd:documentation>Coordinator which "passively" performs NmCoordinator functionality at this channel - used at NmCoordinatorSync use case.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="NmCoordinatorRoleEnum.Passive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NMTOKEN-STRING--SIMPLE">
      <xsd:restriction base="xsd:NMTOKEN"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NMTOKENS-STRING--SIMPLE">
      <xsd:restriction base="xsd:NMTOKENS"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NORMALIZED-INSTRUCTION--SIMPLE">
      <xsd:annotation>
         <xsd:appinfo source="tags">atp.Status="draft"</xsd:appinfo>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NOTE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CAUTION">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note is an alert which shall be considered carefully.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="NoteTypeEnum.caution"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXAMPLE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an example, e.g. a code example etc.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="NoteTypeEnum.example"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXERCISE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an exercise for the reader.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="NoteTypeEnum.exercise"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HINT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents a hint which helps the user for better understanding.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="NoteTypeEnum.hint"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INSTRUCTION">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents an instruction, e.g. a step by step procedure.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="NoteTypeEnum.instruction"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OTHER">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note is something else. The particular type of the note shall then be specified in the label of the note.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="NoteTypeEnum.other"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIP">
            <xsd:annotation>
               <xsd:documentation>This indicates that the note represents which is good to know. It is similar to a hint, but focuses more to good practice than to better understanding.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="NoteTypeEnum.tip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NUMERICAL-VALUE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(0[xX][0-9a-fA-F]+)|(0[0-7]+)|(0[bB][0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)([eE]([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NV-BLOCK-NEEDS-RELIABILITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ERROR-CORRECTION">
            <xsd:annotation>
               <xsd:documentation>Errors shall be corrected</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="NvBlockNeedsReliabilityEnum.errorCorrection"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ERROR-DETECTION">
            <xsd:annotation>
               <xsd:documentation>Errors shall be detected</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="NvBlockNeedsReliabilityEnum.errorDetection"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-PROTECTION">
            <xsd:annotation>
               <xsd:documentation>Data need not to be handled with protection</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="NvBlockNeedsReliabilityEnum.noProtection"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="NV-BLOCK-NEEDS-WRITING-PRIORITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="HIGH">
            <xsd:annotation>
               <xsd:documentation>Writing priority is high.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="NvBlockNeedsWritingPriorityEnum.high"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="LOW">
            <xsd:annotation>
               <xsd:documentation>Writing priority is low.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="NvBlockNeedsWritingPriorityEnum.low"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MEDIUM">
            <xsd:annotation>
               <xsd:documentation>Writing priority is medium.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="NvBlockNeedsWritingPriorityEnum.medium"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="OBD-RATIO-CONNECTION-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="API-USE">
            <xsd:annotation>
               <xsd:documentation>The IUMPR service (of the DEM) uses an explicit API to connect to the component or module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ObdRatioConnectionKindEnum.apiUse"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OBSERVER">
            <xsd:annotation>
               <xsd:documentation>The IUMPR service (of the Dem) uses no API but "observes"  the associated diagnostic event.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ObdRatioConnectionKindEnum.observer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="OPERATION-CYCLE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IGNITION">
            <xsd:annotation>
               <xsd:documentation>Ignition ON / OFF cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="OperationCycleTypeEnum.ignition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OBD-DCY">
            <xsd:annotation>
               <xsd:documentation>OBD Driving cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="OperationCycleTypeEnum.obdDcy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OTHER">
            <xsd:annotation>
               <xsd:documentation>Further operation cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="OperationCycleTypeEnum.other"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POWER">
            <xsd:annotation>
               <xsd:documentation>Power ON / OFF cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="OperationCycleTypeEnum.power"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TIME">
            <xsd:annotation>
               <xsd:documentation>Time based operation cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="OperationCycleTypeEnum.time"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WARMUP">
            <xsd:annotation>
               <xsd:documentation>OBD Warm up cycle.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="OperationCycleTypeEnum.warmup"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="ORIENT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LAND">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table is rendered in landscape which results in turning the table 90 degree clockwise.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="OrientEnum.land"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PORT">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table is rendered in portrait, which is the regular text flow.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="OrientEnum.port"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PDU-COLLECTION-SEMANTICS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LAST-IS-BEST">
            <xsd:annotation>
               <xsd:documentation>Only the latest PDU instances are transmitted.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PduCollectionSemanticsEnum.lastIsBest"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QUEUED">
            <xsd:annotation>
               <xsd:documentation>All instances of PDUs are transmitted.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PduCollectionSemanticsEnum.queued"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PDU-COLLECTION-TRIGGER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>Pdu will trigger the transmission of the data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PduCollectionTriggerEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEVER">
            <xsd:annotation>
               <xsd:documentation>Pdu will be buffered and will not trigger the transmission of the data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PduCollectionTriggerEnum.never"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PERSISTENCY-COLLECTION-LEVEL-UPDATE-STRATEGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DELETE">
            <xsd:annotation>
               <xsd:documentation>The update strategy is to delete all values on the level of the respective collection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PersistencyCollectionLevelUpdateStrategyEnum.delete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KEEP-EXISTING">
            <xsd:annotation>
               <xsd:documentation>The update strategy is to keep the existing values on the level of the respective collection.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PersistencyCollectionLevelUpdateStrategyEnum.keepExisting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PERSISTENCY-ELEMENT-LEVEL-UPDATE-STRATEGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DELETE">
            <xsd:annotation>
               <xsd:documentation>The update strategy is to delete the value of the respective data item.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="PersistencyElementLevelUpdateStrategyEnum.delete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="KEEP-EXISTING">
            <xsd:annotation>
               <xsd:documentation>The update strategy is to keep the existing value of the respective data item.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PersistencyElementLevelUpdateStrategyEnum.keepExisting"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OVERWRITE">
            <xsd:annotation>
               <xsd:documentation>The update strategy is to overwrite the respective data item.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PersistencyElementLevelUpdateStrategyEnum.overwrite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PERSISTENCY-REDUNDANCY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>This value represents the requirement that redundancy measures are not applied on persistency collection level.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PersistencyRedundancyEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REDUNDANT">
            <xsd:annotation>
               <xsd:documentation>This value represents the requirement that redundancy measures are applied on persistency collection level.

The nature of the redundant persistent storage is not further qualified and subject to integrator decisions.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PersistencyRedundancyEnum.redundant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PGWIDE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-PGWIDE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table shall be fit in the current text flow.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PgwideEnum.noPgwide"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PGWIDE">
            <xsd:annotation>
               <xsd:documentation>This indicates that the table may use the entire page width. This is in particular important in case of so called "side-head layouts" but also if the table is in a list or in a note.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PgwideEnum.pgwide"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PHM-ACTION-LIST-EXECUTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TRIGGERED-ON-CHANGE">
            <xsd:annotation>
               <xsd:documentation>Actions shall only be executed when the evaluation result of the corresponding rule changes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PhmActionListExecutionEnum.triggeredOnChange"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGERED-ON-EVALUATION">
            <xsd:annotation>
               <xsd:documentation>Actions shall be executed every time the evaluation of the corresponding rule is done.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PhmActionListExecutionEnum.triggeredOnEvaluation"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PHM-LOGICAL-OPERATOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AND">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PhmLogicalOperatorEnum.and"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NAND">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PhmLogicalOperatorEnum.nand"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOT">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="PhmLogicalOperatorEnum.not"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OR">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="PhmLogicalOperatorEnum.or"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XOR">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="PhmLogicalOperatorEnum.xor"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PHM-RULE-INIT-STATE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FALSE">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="PhmRuleInitStateEnum.false"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRUE">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PhmRuleInitStateEnum.true"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UNDEFINED">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PhmRuleInitStateEnum.undefined"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PLATFORM-PHM-ACTION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RESET-MACHINE">
            <xsd:annotation>
               <xsd:documentation>Initiate a reset of the platform instance.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PlatformPhmActionTypeEnum.resetMachine"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PNC-GATEWAY-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACTIVE">
            <xsd:annotation>
               <xsd:documentation>The active PncGateway functionality shall be performed</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PncGatewayTypeEnum.active"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No PncGateway functionality shall be performed</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PncGatewayTypeEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PASSIVE">
            <xsd:annotation>
               <xsd:documentation>The passive PncGateway functionality shall be performed</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="PncGatewayTypeEnum.passive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PORT-INSTANTIATION-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MULTIPLE">
            <xsd:annotation>
               <xsd:documentation>Multiple proxy instances may be created at this port.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PortInstantiationBehaviorEnum.multiple"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SINGLE">
            <xsd:annotation>
               <xsd:documentation>A single proxy instance is created at this port</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PortInstantiationBehaviorEnum.single"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="POSITIVE-INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="POSITIVE-UNLIMITED-INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PRIMITIVE-IDENTIFIER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="128"></xsd:maxLength>
         <xsd:pattern value="[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PROCESS-PHM-ACTION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RESTART">
            <xsd:annotation>
               <xsd:documentation>Perform a restart of the referenced Process.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ProcessPhmActionTypeEnum.restart"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PROCESSING-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FILTERED">
            <xsd:annotation>
               <xsd:documentation>Indicates that a raw signal has been manipulated by some application software components by using filters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ProcessingKindEnum.filtered"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>Indicates that none of the other option apply.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ProcessingKindEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RAW">
            <xsd:annotation>
               <xsd:documentation>Specifies that a signal is taken directly from the basic software modules, i.e. from the ECU abstraction layer. It indicates to a developer that the control algorithm in the software has to provide filters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ProcessingKindEnum.raw"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PROGRAMMINGLANGUAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="C">
            <xsd:annotation>
               <xsd:documentation>C language</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ProgramminglanguageEnum.c"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CPP">
            <xsd:annotation>
               <xsd:documentation>C++ language</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ProgramminglanguageEnum.cpp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="JAVA">
            <xsd:annotation>
               <xsd:documentation>Java language</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ProgramminglanguageEnum.java"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="PULSE-TEST-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DISABLE">
            <xsd:annotation>
               <xsd:documentation>Disables the pulse test</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="PulseTestEnum.disable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ENABLE">
            <xsd:annotation>
               <xsd:documentation>Enables the pulse test</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="PulseTestEnum.enable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RAM-BLOCK-STATUS-CONTROL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="API">
            <xsd:annotation>
               <xsd:documentation>The ramBlock status is controlled via service interface by usage of the SetRamBlockStatus operation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RamBlockStatusControlEnum.api"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NV-RAM-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The ramBlock status is controlled exclusively by the Nv Ram Manager.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RamBlockStatusControlEnum.nvRamManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RECEIVER-CAPABILITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="WILL-RECEIVE">
            <xsd:annotation>
               <xsd:documentation>The receiver will receive the event or field notifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ReceiverCapabilityEnum.willReceive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WONT-RECEIVE">
            <xsd:annotation>
               <xsd:documentation>The receiver won't receive the event or field notifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ReceiverCapabilityEnum.wontReceive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RECORD-LAYOUT-ITERATOR-POINT--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="-?([0-9]+|MAX-TEXT-SIZE|ARRAY-SIZE)"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REENTRANCY-LEVEL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MULTICORE-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Unlimited concurrent execution of this entity is possible, including preemption and parallel execution on multi core systems.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ReentrancyLevelEnum.multicoreReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NON-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Concurrent execution of this entity is not possible.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ReentrancyLevelEnum.nonReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SINGLE-CORE-REENTRANT">
            <xsd:annotation>
               <xsd:documentation>Pseudo-concurrent execution (i.e. preemption) of this entity is possible on single core systems.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ReentrancyLevelEnum.singleCoreReentrant"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REF--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="/?[a-zA-Z][a-zA-Z0-9_]{0,127}(/[a-zA-Z][a-zA-Z0-9_]{0,127})*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REGULAR-EXPRESSION--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REMOTING-TECHNOLOGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AR--CLIENT--SERVER">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RemotingTechnologyEnum.ar_client_server"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SOMEIP">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RemotingTechnologyEnum.some/ip"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REPORT-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="REPORT-AFTER-INIT">
            <xsd:annotation>
               <xsd:documentation>This allows reporting related events after initialization</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ReportBehaviorEnum.reportAfterInit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REPORT-BEFORE-INIT">
            <xsd:annotation>
               <xsd:documentation>This allows reporting related events before initialization</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ReportBehaviorEnum.reportBeforeInit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REQUEST-METHOD-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONNECT">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RequestMethodEnum.connect"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DELETE">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RequestMethodEnum.delete"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="GET">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="RequestMethodEnum.get"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="HEAD">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="RequestMethodEnum.head"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPTIONS">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="RequestMethodEnum.options"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="POST">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="RequestMethodEnum.post"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PUT">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="RequestMethodEnum.put"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRACE">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="RequestMethodEnum.trace"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REQUEST-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FUNCTIONAL">
            <xsd:annotation>
               <xsd:documentation>This enum literal defines a FUNCTIONAL DiagnosticMessage request.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RequestTypeEnum.functional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PHYSICAL">
            <xsd:annotation>
               <xsd:documentation>This enum literal defines a PHYSICAL DiagnosticMessage request.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RequestTypeEnum.physical"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RESOLUTION-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SLOPPY">
            <xsd:annotation>
               <xsd:documentation>The content of the xref element is '''not''' linked by a sloppy reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ResolutionPolicyEnum.noSloppy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SLOPPY">
            <xsd:annotation>
               <xsd:documentation>The content of the xref element is linked by a sloppy reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ResolutionPolicyEnum.sloppy"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RESUME-POSITION--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONTINUE-AT-IT-POSITION">
            <xsd:annotation>
               <xsd:documentation>Continue at IT Point.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ResumePosition.continueAtItPosition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="START-FROM-BEGINNING">
            <xsd:annotation>
               <xsd:documentation>Start from the beginning</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ResumePosition.startFromBeginning"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="REVISION-LABEL-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-9]+\.[0-9]+\.[0-9]+([\._;].*)?"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RPT-ACCESS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ENABLED">
            <xsd:annotation>
               <xsd:documentation>The related data element is accessible by RP tool.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RptAccessEnum.enabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>The related data element is not accessible by RP tool.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RptAccessEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PROTECTED">
            <xsd:annotation>
               <xsd:documentation>The data element is known to the RP tool however its usage for RP can be restricted.
Use case: limitation based on access rights</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="RptAccessEnum.protected"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RPT-ENABLER-IMPL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No "RP enabler" is implemented.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RptEnablerImplTypeEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-ENABLER-RAM">
            <xsd:annotation>
               <xsd:documentation>"RP enabler" is implemented as a RAM variable</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RptEnablerImplTypeEnum.rptEnablerRam"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-ENABLER-RAM-AND-ROM">
            <xsd:annotation>
               <xsd:documentation>The RTE generator implements both the RAM and ROM "RP enabler".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="RptEnablerImplTypeEnum.rptEnablerRamAndRom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-ENABLER-ROM">
            <xsd:annotation>
               <xsd:documentation>"RP enabler" is implemented as a calibrateable ROM variable.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="RptEnablerImplTypeEnum.rptEnablerRom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RPT-EXECUTION-CONTROL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONDITIONAL">
            <xsd:annotation>
               <xsd:documentation>The ExecutableEntity is only executed when the rapid prototyping disable flag is NOT set.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RptExecutionControlEnum.conditional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>The ExecutableEntity is executed without specific rapid prototyping condition.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RptExecutionControlEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RPT-PREPARATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No RP preparation for VariableDataPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RptPreparationEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-LEVEL-1">
            <xsd:annotation>
               <xsd:documentation>The RTE implementation uses an &#8222;RP global buffer" for measurement and post-build hooking purposes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RptPreparationEnum.rptLevel1"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-LEVEL-2">
            <xsd:annotation>
               <xsd:documentation>As rpLevel1 but the RTE implementation also uses both &#8222;RP enabler flag" to permit RP overwrite at run-time.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="RptPreparationEnum.rptLevel2"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RPT-LEVEL-3">
            <xsd:annotation>
               <xsd:documentation>As rpLevel2 but the RTE implementation also uses "RP global measurement buffer" to record the original ECU-generated value in addition to the RP value.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="RptPreparationEnum.rptLevel3"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RPT-SERVICE-POINT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ENABLED">
            <xsd:annotation>
               <xsd:documentation>Enables generation of service points by the RTE generator.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RptServicePointEnum.enabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>No Service Points are requested.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RptServicePointEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RUN-MODE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RUN-CONTINUOUS">
            <xsd:annotation>
               <xsd:documentation>RUN_CONTINUOUS run mode</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RunMode.RunContinuous"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RUN-ONCE">
            <xsd:annotation>
               <xsd:documentation>RUN_ONCE run mode</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RunMode.runOnce"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RUNTIME-ADDRESS-CONFIGURATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>Static configuration is used to obtain the address information.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RuntimeAddressConfigurationEnum.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SD">
            <xsd:annotation>
               <xsd:documentation>AUTOSAR Service Discovery is used to obtain the address information.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RuntimeAddressConfigurationEnum.sd"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="RX-ACCEPT-CONTAINED-I-PDU-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACCEPT-ALL">
            <xsd:annotation>
               <xsd:documentation>No fixed set of containedIPdus is defined for reception, any known containedIPdu (based on headerId) shall be expected within this ContainerIPdu.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="RxAcceptContainedIPduEnum.acceptAll"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ACCEPT-CONFIGURED">
            <xsd:annotation>
               <xsd:documentation>A fixed set of containedIPdus is defined for reception. Only these assigned containedIPdus (based on headerId) are expected in this ContainerIPdu. If a not assigned containedIPdu is received within this ContainerIPdu this containedIPdu is discarded.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="RxAcceptContainedIPduEnum.acceptConfigured"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SCALE-CONSTR-VALIDITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOT-AVAILABLE">
            <xsd:annotation>
               <xsd:documentation>Currently invalid area
The value usually is presented by the ECU but can currently not be performed
due to e.g. initialization or temporary problems. Please note, that this behavior
appears during runtime and cannot be handled while data is edited.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ScaleConstrValidityEnum.notAvailable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOT-DEFINED">
            <xsd:annotation>
               <xsd:documentation>Indicates an area which is marked in a specification (e.g. as reserved)
Shall usually not be set by the ECU but is used by a tester to verify correct ECU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ScaleConstrValidityEnum.notDefined"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOT-VALID">
            <xsd:annotation>
               <xsd:documentation>The ECU cannot process the requested data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ScaleConstrValidityEnum.notValid"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VALID">
            <xsd:annotation>
               <xsd:documentation>Current value is within a valid range and can be presented to user as is.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="ScaleConstrValidityEnum.valid"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SCHEDULING-POLICY-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SCHEDULING-POLICY-FIFO">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the setting for a FIFO scheduling policy.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SchedulingPolicyKindEnum.schedulingPolicyFifo"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULING-POLICY-OTHER">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the setting for a custom scheduling policy.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SchedulingPolicyKindEnum.schedulingPolicyOther"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SCHEDULING-POLICY-ROUND-ROBIN">
            <xsd:annotation>
               <xsd:documentation>This attribute represents the setting for a round robin scheduling policy</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SchedulingPolicyKindEnum.schedulingPolicyRoundRobin"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SEARCH-BEHAVIOR-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SEARCH-FOR-ANY">
            <xsd:annotation>
               <xsd:documentation>This value represents the intention to search for "any"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SearchBehaviorEnum.searchForAny"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SEARCH-FOR-ID">
            <xsd:annotation>
               <xsd:documentation>This value represents the intention to search for a dedicated Id.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SearchBehaviorEnum.searchForId"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SEC-OC-JOB-SEMANTIC-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AUTHENTICATE">
            <xsd:annotation>
               <xsd:documentation>Authentication algorithm for Authenticator generation/verification.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SecOcJobSemanticEnum.authenticate"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VERIFY">
            <xsd:annotation>
               <xsd:documentation>Asymmetric cryptographic algorithm to generate/verify a signature</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SecOcJobSemanticEnum.verify"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SECTION-INITIALIZATION-POLICY-TYPE--SIMPLE">
      <xsd:restriction base="xsd:NMTOKEN"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SECURED-PDU-HEADER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-HEADER">
            <xsd:annotation>
               <xsd:documentation>No header included in the SecuredPdu.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SecuredPduHeaderEnum.noHeader"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECURED-PDU-HEADER-08-BIT">
            <xsd:annotation>
               <xsd:documentation>8 Bit Secured I-PDU Header included in the Secured I-PDU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SecuredPduHeaderEnum.securedPduHeader08Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECURED-PDU-HEADER-16-BIT">
            <xsd:annotation>
               <xsd:documentation>16 Bit Secured I-PDU Header included in the Secured I-PDU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SecuredPduHeaderEnum.securedPduHeader16Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECURED-PDU-HEADER-32-BIT">
            <xsd:annotation>
               <xsd:documentation>32 Bit Secured I-PDU Header included in the Secured I-PDU.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="SecuredPduHeaderEnum.securedPduHeader32Bit"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SENDER-CAPABILITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="WILL-SEND">
            <xsd:annotation>
               <xsd:documentation>The sender will send the event or field notifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SenderCapabilityEnum.willSend"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WONT-SEND">
            <xsd:annotation>
               <xsd:documentation>The sender won't send the event or field notifier.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SenderCapabilityEnum.wontSend"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SERVER-ARGUMENT-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="USE-ARGUMENT-TYPE">
            <xsd:annotation>
               <xsd:documentation>The argument type of the RunnableEntity is derived from the AutosarDataType of the ArgumentPrototype.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ServerArgumentImplPolicyEnum.useArgumentType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="USE-ARRAY-BASE-TYPE">
            <xsd:annotation>
               <xsd:documentation>The argument type of the RunnableEntity is derived from the AutosarDataType of the elements of the array that corresponds to the ArgumentPrototype. This represents the base type of the array in C.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";atp.Status="removed";atp.StatusRevisionBegin="4.4.0";mmt.qualifiedName="ServerArgumentImplPolicyEnum.useArrayBaseType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="USE-VOID">
            <xsd:annotation>
               <xsd:documentation>The argument type of the RunnableEntity is void.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ServerArgumentImplPolicyEnum.useVoid"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SERVICE-PROVIDER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ANY-STANDARDIZED">
            <xsd:annotation>
               <xsd:documentation>This value means that the specific nature is either unknown or it is not important for the given purpose. This is also the default value for any attribute of type ServiceProviderEnum</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ServiceProviderEnum.anyStandardized"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BASIC-SOFTWARE-MODE-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Basic Software Mode Manager (BswM)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ServiceProviderEnum.basicSoftwareModeManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COM-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the COM Manager (ComM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ServiceProviderEnum.comManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CRYPTO-SERVICE-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Crypto Service Manager (CsM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="ServiceProviderEnum.cryptoServiceManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEFAULT-ERROR-TRACER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Default Error Tracer (DET)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="ServiceProviderEnum.defaultErrorTracer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DEVELOPMENT-ERROR-TRACER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Development Error Tracer (DET).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";atp.Status="removed";mmt.qualifiedName="ServiceProviderEnum.developmentErrorTracer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DIAGNOSTIC-COMMUNICATION-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Diagnostic Communication Manager (DCM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="ServiceProviderEnum.diagnosticCommunicationManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DIAGNOSTIC-EVENT-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Diagnostic Event Manager (DEM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="7";mmt.qualifiedName="ServiceProviderEnum.diagnosticEventManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="DIAGNOSTIC-LOG-AND-TRACE">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Diagnostic Log and Trace (DLT).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="8";mmt.qualifiedName="ServiceProviderEnum.diagnosticLogAndTrace"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="ECU-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the ECU Manager (EcuM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="9";mmt.qualifiedName="ServiceProviderEnum.ecuManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FUNCTION-INHIBITION-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Function Inhibition Manager (FIM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="10";mmt.qualifiedName="ServiceProviderEnum.functionInhibitionManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="J-1939-REQUEST-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the J1939Rm.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="11";mmt.qualifiedName="ServiceProviderEnum.j1939RequestManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NON-VOLATILE-RAM-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Non-Volatile RAM Manager (NvM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="12";mmt.qualifiedName="ServiceProviderEnum.nonVolatileRamManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPERATING-SYSTEM">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Operating System (OS).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="13";mmt.qualifiedName="ServiceProviderEnum.operatingSystem"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECURE-ON-BOARD-COMMUNICATION">
            <xsd:annotation>
               <xsd:documentation>The service relates to the SecOc module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="14";mmt.qualifiedName="ServiceProviderEnum.secureOnBoardCommunication"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYNC-BASE-TIME-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Sync Time Base Manager (StbM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="15";mmt.qualifiedName="ServiceProviderEnum.syncBaseTimeManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VENDOR-SPECIFIC">
            <xsd:annotation>
               <xsd:documentation>This value denotes a vendor-specific service.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="16";mmt.qualifiedName="ServiceProviderEnum.vendorSpecific"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WATCH-DOG-MANAGER">
            <xsd:annotation>
               <xsd:documentation>The service relates to the Watchdog Manager (WdgM).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="17";mmt.qualifiedName="ServiceProviderEnum.watchDogManager"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SEVERITY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ERROR">
            <xsd:annotation>
               <xsd:documentation>Something is not right. High risk of interoperability issues.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SeverityEnum.error"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INFO">
            <xsd:annotation>
               <xsd:documentation>Something was found that is worth mentioning. Low risk of interoperability issues.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SeverityEnum.info"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WARNING">
            <xsd:annotation>
               <xsd:documentation>Something might be wrong depending on the context. Medium risk of interoperability issues.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SeverityEnum.warning"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-CONTENT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-CONTENT">
            <xsd:annotation>
               <xsd:documentation>The content of the Xref.label is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowContentEnum.noShowContent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-CONTENT">
            <xsd:annotation>
               <xsd:documentation>The content of the element is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowContentEnum.showContent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-ALIAS-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-ALIAS-NAME">
            <xsd:annotation>
               <xsd:documentation>This indicates that alias names of the referenced object shall '''not''' be rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceAliasNameEnum.noShowAliasName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-ALIAS-NAME">
            <xsd:annotation>
               <xsd:documentation>This indicates that the alias names of the referenced object shall be rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceAliasNameEnum.showAliasName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-CATEGORY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-CATEGORY">
            <xsd:annotation>
               <xsd:documentation>The category of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceCategoryEnum.noShowCategory"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-CATEGORY">
            <xsd:annotation>
               <xsd:documentation>The category of the target is  rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceCategoryEnum.showCategory"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-LONG-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>The long name of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceLongNameEnum.noShowLongName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-LONG-NAME">
            <xsd:annotation>
               <xsd:documentation>The long name of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceLongNameEnum.showLongName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-NUMBER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-NUMBER">
            <xsd:annotation>
               <xsd:documentation>The number of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceNumberEnum.noShowNumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-NUMBER">
            <xsd:annotation>
               <xsd:documentation>The number of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceNumberEnum.showNumber"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-PAGE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-PAGE">
            <xsd:annotation>
               <xsd:documentation>The page number  of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourcePageEnum.noShowPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-PAGE">
            <xsd:annotation>
               <xsd:documentation>The page number  of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourcePageEnum.showPage"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-SHORT-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-SHORT-NAME">
            <xsd:annotation>
               <xsd:documentation>The short name of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceShortNameEnum.noShowShortName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-SHORT-NAME">
            <xsd:annotation>
               <xsd:documentation>The short name of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceShortNameEnum.showShortName"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-RESOURCE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-TYPE">
            <xsd:annotation>
               <xsd:documentation>The type of the target is '''not''' rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowResourceTypeEnum.noShowType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-TYPE">
            <xsd:annotation>
               <xsd:documentation>The type of the target is rendered at the place of the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowResourceTypeEnum.showType"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SHOW-SEE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NO-SHOW-SEE">
            <xsd:annotation>
               <xsd:documentation>The word "see" is '''not''' rendered before  the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ShowSeeEnum.noShowSee"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SHOW-SEE">
            <xsd:annotation>
               <xsd:documentation>The word "see"is rendered before the reference.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ShowSeeEnum.showSee"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SIGNAL-FAN-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NFOLD">
            <xsd:annotation>
               <xsd:documentation>The connections internally in the CompositionSwComponentType via DelegationSwConnectors and AssemblySwConnectors are defined in a way that at least one data element present in the S/R interface or one ClientServerOperation in the C/S interface of the outer PortPrototype is involved in a 1:n or n:1 communication pattern.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SignalFanEnum.nfold"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SINGLE">
            <xsd:annotation>
               <xsd:documentation>The connections internally in the CompositionSwComponentType via DelegationSwConnectors and AssemblySwConnectors are defined in a way that each VariableDataPrototype  present in the S/R interface or ClientServerOperation in the C/S interface of the outer PortPrototype is involved in a 1:1 communication pattern only.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SignalFanEnum.single"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SO-AD-CONNECTOR-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DO-IP">
            <xsd:annotation>
               <xsd:documentation>Diagnosis over IP</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SoAdConnectorType.DoIp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PDU-R">
            <xsd:annotation>
               <xsd:documentation>Pdu Router</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SoAdConnectorType.PduR"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UDP-NM">
            <xsd:annotation>
               <xsd:documentation>Udp Nm</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SoAdConnectorType.UdpNm"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="XCP">
            <xsd:annotation>
               <xsd:documentation>Universal Measurement and Calibration Protocol</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="SoAdConnectorType.Xcp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SO-AD-PROTOCOL-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TCP">
            <xsd:annotation>
               <xsd:documentation>Transmission Control Protocol (TCP) enables two hosts to establish a connection and exchange streams of data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SoAdProtocolType.tcp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UDP">
            <xsd:annotation>
               <xsd:documentation>User Datagram Protocol (UDP) offers a connectionless way to send and receive datagrams over an IP network. It's used primarily for broadcasting messages over a network.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SoAdProtocolType.udp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SOFTWARE-CLUSTER-DIAGNOSTIC-ADDRESS-SEMANTICS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FUNCTIONAL-ADDRESS">
            <xsd:annotation>
               <xsd:documentation>This address represents a functional address.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SoftwareClusterDiagnosticAddressSemanticsEnum.functionalAddress"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PHYSICAL-ADDRESS">
            <xsd:annotation>
               <xsd:documentation>This address represents a physical address.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SoftwareClusterDiagnosticAddressSemanticsEnum.physicalAddress"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SOMEIP-MESSAGE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ERROR">
            <xsd:annotation>
               <xsd:documentation>The response containing an error.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";atp.Status="removed";mmt.qualifiedName="SOMEIPMessageTypeEnum.error"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NOTIFICATION">
            <xsd:annotation>
               <xsd:documentation>A request of a notification expecting no response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SOMEIPMessageTypeEnum.notification"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REQUEST">
            <xsd:annotation>
               <xsd:documentation>A request expecting a response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SOMEIPMessageTypeEnum.request"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="REQUEST-NO-RETURN">
            <xsd:annotation>
               <xsd:documentation>A fire&amp;forget request.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="SOMEIPMessageTypeEnum.requestNoReturn"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RESPONSE">
            <xsd:annotation>
               <xsd:documentation>The response message.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="SOMEIPMessageTypeEnum.response"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SOMEIP-TRANSFORMER-SESSION-HANDLING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="SESSION-HANDLING-ACTIVE">
            <xsd:annotation>
               <xsd:documentation>The SOME/IP Transformer shall use session handling</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SOMEIPTransformerSessionHandlingEnum.sessionHandlingActive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SESSION-HANDLING-INACTIVE">
            <xsd:annotation>
               <xsd:documentation>The SOME/IP Transformer doesn't use session handling</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SOMEIPTransformerSessionHandlingEnum.sessionHandlingInactive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="STANDARD-NAME-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AP">
            <xsd:annotation>
               <xsd:documentation>This values represents the Adaptive Platform.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="standardNameEnum.AP"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="CP">
            <xsd:annotation>
               <xsd:documentation>This Value represents the Classic Platform.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="standardNameEnum.CP"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FO">
            <xsd:annotation>
               <xsd:documentation>This values represents the Foundation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="standardNameEnum.FO"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TA">
            <xsd:annotation>
               <xsd:documentation>This Values represents the Testing of the Adaptive Platform.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="standardNameEnum.TA"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TC">
            <xsd:annotation>
               <xsd:documentation>This values represents the Testing of the Classic Platform.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="standardNameEnum.TC"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="STORAGE-CONDITION-STATUS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="EVENT-STORAGE-DISABLED">
            <xsd:annotation>
               <xsd:documentation>Storage of a diagnostic event is disabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="StorageConditionStatusEnum.eventStorageDisabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EVENT-STORAGE-ENABLED">
            <xsd:annotation>
               <xsd:documentation>Storage of a diagnostic event is enabled.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="StorageConditionStatusEnum.eventStorageEnabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="STRING--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SUPPORT-BUFFER-LOCKING-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DOES-NOT-SUPPORT-BUFFER-LOCKING">
            <xsd:annotation>
               <xsd:documentation>Buffer locking is not supported.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SupportBufferLockingEnum.doesNotSupportBufferLocking"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SUPPORTS-BUFFER-LOCKING">
            <xsd:annotation>
               <xsd:documentation>Buffer locking is supported.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SupportBufferLockingEnum.supportsBufferLocking"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SUPSCRIPT--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SW-CALIBRATION-ACCESS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="NOT-ACCESSIBLE">
            <xsd:annotation>
               <xsd:documentation>The element will not be accessible via MCD tools, i.e. will not appear in the ASAP file.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwCalibrationAccessEnum.notAccessible"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="READ-ONLY">
            <xsd:annotation>
               <xsd:documentation>The element will only appear as read-only in an ASAP file.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwCalibrationAccessEnum.readOnly"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="READ-WRITE">
            <xsd:annotation>
               <xsd:documentation>The element will appear in the ASAP file with both read and write access.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SwCalibrationAccessEnum.readWrite"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SW-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CONST">
            <xsd:annotation>
               <xsd:documentation>forced implementation such that the  running software within the ECU  shall not modify it. For example implemented with the "const" modifier in C.  This can be applied for parameters (not for those in NVRAM) as well as argument  data prototypes.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwImplPolicyEnum.const"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FIXED">
            <xsd:annotation>
               <xsd:documentation>This data element is fixed. In particular this indicates, that it  might also be implemented  e.g. as in place data, (#DEFINE).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwImplPolicyEnum.fixed"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MEASUREMENT-POINT">
            <xsd:annotation>
               <xsd:documentation>The data element is created for measurement purposes only.  The data element is never read directly within the ECU software. In contrast to  a "standard" data element in an unconnected provide port is, this unconnection  is guaranteed for  measurementPoint data elements.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SwImplPolicyEnum.measurementPoint"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="QUEUED">
            <xsd:annotation>
               <xsd:documentation>The content of the data element is queued and the data element has 'event' semantics, i.e. data elements are stored in a queue and all data  elements are processed in 'first in first out' order. 
The queuing is intended to be implemented by RTE Generator.
This value is not applicable for parameters.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="SwImplPolicyEnum.queued"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>This is applicable for all kinds of data elements. For variable  data prototypes the 'last is best' semantics applies. For parameter there is no  specific implementation directive.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="SwImplPolicyEnum.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SW-SERVICE-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="INLINE">
            <xsd:annotation>
               <xsd:documentation>inline service definition.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwServiceImplPolicyEnum.inline"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INLINE-CONDITIONAL">
            <xsd:annotation>
               <xsd:documentation>The service (in AUTOSAR: BswModuleEntry) is implemented in a way that it either resolves to an inline function or to a standard function depending on conditions set at a later point in time.

This could be handled by using the AUTOSAR compiler abstraction macros (INLINE, LOCAL_INLINE) and/or by further compiler switches depending on ECU configuration values.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwServiceImplPolicyEnum.inlineConditional"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MACRO">
            <xsd:annotation>
               <xsd:documentation>macro service definition.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SwServiceImplPolicyEnum.macro"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STANDARD">
            <xsd:annotation>
               <xsd:documentation>Standard service and default value, if nothing is defined.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="SwServiceImplPolicyEnum.standard"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SW-SERVICE-REENTRANCE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="REENTRANCE">
            <xsd:annotation>
               <xsd:documentation>If this element is not defined the service cannot be invoked when it is executing.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwServiceReentranceEnum.reentrance"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SW-VARIABLE-ACCESS-IMPL-POLICY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DIRECT">
            <xsd:annotation>
               <xsd:documentation>Messages with DIRECT access are read but ignored by data consistency tool. Data consistency
is not guaranteed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwVariableAccessImplPolicyEnum.direct"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPTIMIZED">
            <xsd:annotation>
               <xsd:documentation>A Tool handles data consistency. 

In SwService, where a message is referenced, only OPTIMIZED access (also default
value inside SwServcie) is possible.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwVariableAccessImplPolicyEnum.optimized"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SELECTABLE">
            <xsd:annotation>
               <xsd:documentation>The user can decide inside each single service, where these message is referenced, if
access to that shall be OPTIMIZED or DIRECT.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="SwVariableAccessImplPolicyEnum.selectable"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DEDICATED">
            <xsd:annotation>
               <xsd:documentation>Dedicated mapping means that the SW-C can only be mapped to the ECUs it is dedicated to.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwcToEcuMappingConstraintType.dedicated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="EXCLUSIVE">
            <xsd:annotation>
               <xsd:documentation>Exclusive mapping means that the SW-C cannot be mapped to the ECUs it is excluded from.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwcToEcuMappingConstraintType.exclusive"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SWC-TO-SWC-OPERATION-ARGUMENTS-DIRECTION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="IN">
            <xsd:annotation>
               <xsd:documentation>IN (all IN and INOUT arguments)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SwcToSwcOperationArgumentsDirectionEnum.in"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OUT">
            <xsd:annotation>
               <xsd:documentation>OUT (all OUT and INOUT arguments) .</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SwcToSwcOperationArgumentsDirectionEnum.out"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SYMBOL-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="SYNCHRONIZATION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RESPONSE-SYNCHRONIZATION">
            <xsd:annotation>
               <xsd:documentation>In case that the Synchronization Timing Constraint is specified for event chains, the response events of the associated event chains must occur synchronously with respect to the specified tolerance. All associated event chains must have the same stimulus event.

In case that the Synchronization Timing Constraint is specified for events, the associated events must occur synchronously with respect to the specified tolerance. All associated events represent the response events of a common stimulus event, even such a stimulus event is not known yet or not available in the scope of the model.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="SynchronizationTypeEnum.responseSynchronization"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STIMULUS-SYNCHRONIZATION">
            <xsd:annotation>
               <xsd:documentation>In case that the Synchronization Timing Constraint is specified for event chains, the stimulus events of the associated event chains must occur synchronously with respect to the specified tolerance. All associated event chains must have the same response event.

In case that the Synchronization Timing Constraint is specified for events, the associated events must occur synchronously with respect to the specified tolerance. All associated events represent the stimulus events of a common response event, even such a response event is not known yet or not available in the scope of the model.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="SynchronizationTypeEnum.stimulusSynchronization"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TABLE-SEPARATOR-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[0-1]"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-MODULE-ENTITY-ACTIVATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated BswModuleEntity has been activated, which means that it has entered the state "to be started".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventBswInternalBehaviorTypeEnum.bswModuleEntityActivated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BSW-MODULE-ENTITY-STARTED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated BswModuleEntity has entered the state "started" after its activation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventBswInternalBehaviorTypeEnum.bswModuleEntityStarted"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BSW-MODULE-ENTITY-TERMINATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated BswModuleEntity has terminated and entered the state "suspended"</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventBswInternalBehaviorTypeEnum.bswModuleEntityTerminated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-BSW-MODE-DECLARATION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MODE-DECLARATION-REQUESTED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated ModeDeclarationGroupPrototype has been requested.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventBswModeDeclarationTypeEnum.modeDeclarationRequested"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MODE-DECLARATION-SWITCH-COMPLETED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the switch to the associated ModeDeclarationGroupPrototype has been completed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventBswModeDeclarationTypeEnum.modeDeclarationSwitchCompleted"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MODE-DECLARATION-SWITCH-INITIATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the switch to the associated ModeDeclarationGroupPrototype has been initiated by the BswM.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventBswModeDeclarationTypeEnum.modeDeclarationSwitchInitiated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-BSW-MODULE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BSW-M-ENTRY-CALL-RETURNED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the call of the associated BswModuleEntry has returned.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventBswModuleTypeEnum.bswMEntryCallReturned"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="BSW-M-ENTRY-CALLED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated BswModuleEntry has been called.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventBswModuleTypeEnum.bswMEntryCalled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-FRAME-ETHERNET-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FRAME-ETHERNET-QUEUED-FOR-TRANSMISSION">
            <xsd:annotation>
               <xsd:documentation>A point in time where the Ethernet frame containing the specified PDUs is queued for transmission within the corresponding Ethernet Communication Driver.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventFrameEthernetTypeEnum.frameEthernetQueuedForTransmission"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FRAME-ETHERNET-RECEIVED-BY-IF">
            <xsd:annotation>
               <xsd:documentation>A point in time where the frame is pushed from the corresponding Ethernet communication controller to the BSW Ethernet communication interface.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventFrameEthernetTypeEnum.frameEthernetReceivedByIf"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FRAME-ETHERNET-RECEIVED-ON-BUS">
            <xsd:annotation>
               <xsd:documentation>A point in time where the receipt of the Ethernet frame/packet completes successfully on the recipient's Ethernet communication controller. In other words, the Ethernet frame/packet has entered the recipient's Ethernet communication controller which means the last bit of the Ethernet frame/packet has been received.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventFrameEthernetTypeEnum.frameEthernetReceivedOnBus"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FRAME-ETHERNET-SENT-ON-BUS">
            <xsd:annotation>
               <xsd:documentation>A point in time where the transmission of the Ethernet frame/packet completes successfully on the physical Ethernet communication network. In other words, the Ethernet frame/packet has left the sender's Ethernet communication controller, which means that the last bit of the Ethernet frame/packet has been sent.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TDEventFrameEthernetTypeEnum.frameEthernetSentOnBus"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-FRAME-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="FRAME-QUEUED-FOR-TRANSMISSION">
            <xsd:annotation>
               <xsd:documentation>A point in time where the frame containing the named signal / I-PDU is queued for transmission within the related Communication Driver.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventFrameTypeEnum.frameQueuedForTransmission"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FRAME-RECEIVED-BY-IF">
            <xsd:annotation>
               <xsd:documentation>A point in time where the frame is pushed from the subscriber's communication controller to the corresponding (FlexRay / CAN / LIN) Interface BSW module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventFrameTypeEnum.frameReceivedByIf"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="FRAME-TRANSMITTED-ON-BUS">
            <xsd:annotation>
               <xsd:documentation>A point in time where the transmission of the frame completes successfully, and the subscriber's communication controller receives the frame from the bus.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventFrameTypeEnum.frameTransmittedOnBus"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-I-PDU-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="I-PDU-RECEIVED-BY-COM">
            <xsd:annotation>
               <xsd:documentation>A point in time where the received frame is processed by the corresponding (FlexRay / CAN / LIN) Interface BSW module, routed through the PDUR and the contained PDUs are pushed to the COM module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventIPduTypeEnum.iPduReceivedByCOM"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="I-PDU-SENT-TO-IF">
            <xsd:annotation>
               <xsd:documentation>A point in time where the carrier COM I-PDU is routed through the PDUR and is pushed to the bus specific (FlexRay / CAN / LIN) Interface BSW module.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventIPduTypeEnum.iPduSentToIf"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-I-SIGNAL-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="I-SIGNAL-AVAILABLE-FOR-RTE">
            <xsd:annotation>
               <xsd:documentation>A point in time, where the COM module makes the contained signal / signal group available for the RTE and the corresponding Rx Indication callout is generated (if configured).</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventISignalTypeEnum.iSignalAvailableForRTE"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="I-SIGNAL-SENT-TO-COM">
            <xsd:annotation>
               <xsd:documentation>A point in time, where a transmission request call is issued by the RTE on a named COM signal / signal group and the new value is stored to the carrier COM I-PDU buffer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventISignalTypeEnum.iSignalSentToCOM"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-MODE-DECLARATION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MODE-DECLARATION-SWITCH-COMPLETED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the switch to the associated ModeDeclarationGroupPrototype has been completed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventModeDeclarationTypeEnum.modeDeclarationSwitchCompleted"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MODE-DECLARATION-SWITCH-INITIATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the switch to the associated ModeDeclarationGroupPrototype has been initiated.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventModeDeclarationTypeEnum.modeDeclarationSwitchInitiated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-OPERATION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="OPERATION-CALL-RECEIVED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the call of the referenced operation is received by the server SWC.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventOperationTypeEnum.operationCallReceived"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPERATION-CALL-RESPONSE-RECEIVED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the client SWC has received the response of the referenced operation call.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventOperationTypeEnum.operationCallResponseReceived"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPERATION-CALL-RESPONSE-SENT">
            <xsd:annotation>
               <xsd:documentation>A point in time where the server SWC has terminated with the execution of the referenced operation, and has sent out a response.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TDEventOperationTypeEnum.operationCallResponseSent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="OPERATION-CALLED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the referenced operation is called by the client SWC.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventOperationTypeEnum.operationCalled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RUNNABLE-ENTITY-ACTIVATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated RunnableEntity has been activated, which means that it has entered the state "to be started".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventSwcInternalBehaviorTypeEnum.runnableEntityActivated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RUNNABLE-ENTITY-STARTED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated RunnableEntity has entered the state "started" after its activation.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventSwcInternalBehaviorTypeEnum.runnableEntityStarted"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RUNNABLE-ENTITY-TERMINATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated RunnableEntity has terminated and entered the state "suspended".</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TDEventSwcInternalBehaviorTypeEnum.runnableEntityTerminated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="RUNNABLE-ENTITY-VARIABLE-ACCESS">
            <xsd:annotation>
               <xsd:documentation>A point in time where the associated variable is accessed.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TDEventSwcInternalBehaviorTypeEnum.runnableEntityVariableAccess"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-TRIGGER-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TRIGGER-ACTIVATED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the referenced trigger has been successfully released and is activating runnable entities of the receiving SW-C.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventTriggerTypeEnum.triggerActivated"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGER-RELEASED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the referenced trigger has been successfully released by the emitting SW-C.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventTriggerTypeEnum.triggerReleased"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE-RECEIVED">
            <xsd:annotation>
               <xsd:documentation>A point in time where the referenced variable data prototype has been successfully transmitted and is available in the related communication buffer (of the RTE) for the receiving SWC.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TDEventVariableDataPrototypeTypeEnum.variableDataPrototypeReceived"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="VARIABLE-DATA-PROTOTYPE-SENT">
            <xsd:annotation>
               <xsd:documentation>A point in time where the referenced variable data prototype has been successfully sent out by the sending SWC, so that it is available in the related communication buffer (of the RTE) for transmission.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TDEventVariableDataPrototypeTypeEnum.variableDataPrototypeSent"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TIME-SYNC-TECHNOLOGY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="AVB--IEEE-802--1-AS">
            <xsd:annotation>
               <xsd:documentation>Ethernet AVB compliant IEEE802.1AS Precision Time Protocol</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TimeSyncTechnologyEnum.avb_ieee802_1AS"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NTP--RFC-958">
            <xsd:annotation>
               <xsd:documentation>Network Time Protocol (NTP)</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TimeSyncTechnologyEnum.ntp_rfc958"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PTP--IEEE-1588--2002">
            <xsd:annotation>
               <xsd:documentation>Precision Time Protocol (PTP) IEEE 1588-2002</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TimeSyncTechnologyEnum.ptp_ieee1588_2002"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="PTP--IEEE-1588--2008">
            <xsd:annotation>
               <xsd:documentation>Precision Time Protocol (PTP) IEEE 1588-2008</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TimeSyncTechnologyEnum.ptp_ieee1588_2008"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TIME-SYNCHRONIZATION-KIND-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="OFFSET">
            <xsd:annotation>
               <xsd:documentation>Defines that the requested time base shall be an offset time based.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TimeSynchronizationKindEnum.offset"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SYNCHRONIZED">
            <xsd:annotation>
               <xsd:documentation>Defines that the requested time base shall be a synchronized time based.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TimeSynchronizationKindEnum.synchronized"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TIME-VALUE--SIMPLE">
      <xsd:restriction base="xsd:double"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TLS-VERSION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="LTS-13">
            <xsd:annotation>
               <xsd:documentation>TLS version 1.3</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TlsVersionEnum.lts13"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TLS-12">
            <xsd:annotation>
               <xsd:documentation>TLS version 1.2</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TlsVersionEnum.tls12"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TP-ACK-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ACK-WITH-RT">
            <xsd:annotation>
               <xsd:documentation>Acknowledgement with retry.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TpAckType.ackWithRt"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NO-ACK">
            <xsd:annotation>
               <xsd:documentation>No acknowledgement.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TpAckType.noAck"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TRANSFER-PROPERTY-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="PENDING">
            <xsd:annotation>
               <xsd:documentation>If the signal has the TransferProperty pending, then the function Com_SendSignal shall not perform a transmission of the IPdu associated with the signal.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TransferPropertyEnum.pending"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGERED">
            <xsd:annotation>
               <xsd:documentation>The signal in the assigned IPdu is updated and a request for the IPdu's transmission is made.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TransferPropertyEnum.triggered"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGERED-ON-CHANGE">
            <xsd:annotation>
               <xsd:documentation>The signal in the assigned IPdu is updated and a request for the IPdus transmission is made only if the signal value is different from the already stored signal value.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TransferPropertyEnum.triggeredOnChange"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGERED-ON-CHANGE-WITHOUT-REPETITION">
            <xsd:annotation>
               <xsd:documentation>The signal in the assigned IPdu is updated and a request for the IPdus transmission is made only if the signal value is different from the already stored signal value.  In the DIRECT/N-TIMES or MIXED transmission mode (EventControlledTiming) the IPdu will be transmitted just once without a repetition, independent of the defined NumberOfRepeats.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TransferPropertyEnum.triggeredOnChangeWithoutRepetition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TRIGGERED-WITHOUT-REPETITION">
            <xsd:annotation>
               <xsd:documentation>The signal in the assigned IPdu is updated and a request for the IPdu's transmission is made. In the DIRECT/N-TIMES or MIXED transmission mode (EventControlledTiming) the IPdu will be transmitted just once without a repetition, independent of the defined NumberOfRepeats.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="TransferPropertyEnum.triggeredWithoutRepetition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TRANSFORMER-CLASS-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CUSTOM">
            <xsd:annotation>
               <xsd:documentation>The transformer is a custom transformer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TransformerClassEnum.custom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SAFETY">
            <xsd:annotation>
               <xsd:documentation>The transformer is a safety transformer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TransformerClassEnum.safety"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SECURITY">
            <xsd:annotation>
               <xsd:documentation>The transformer is a security transformer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TransformerClassEnum.security"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="SERIALIZER">
            <xsd:annotation>
               <xsd:documentation>The transformer is a serializing transformer.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TransformerClassEnum.serializer"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TRANSPORT-LAYER-PROTOCOL-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="TCP">
            <xsd:annotation>
               <xsd:documentation>Transmission control protocol</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TransportLayerProtocolEnum.tcp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UDP">
            <xsd:annotation>
               <xsd:documentation>User datagram protocol</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TransportLayerProtocolEnum.udp"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TRIGGER-MODE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="DYNAMIC-PART-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>IPduM sends a transmission request to the PduR if a dynamic part is received.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TriggerMode.dynamicPartTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NONE">
            <xsd:annotation>
               <xsd:documentation>IPduM does not trigger transmission because of receiving anything of this IPdu in case of TriggerTransmit.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TriggerMode.none"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STATIC-OR-DYNAMIC-PART-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>IPduM sends a transmission request to the PduR if a static or dynamic part is received.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TriggerMode.staticOrDynamicPartTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="STATIC-PART-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>IPduM sends a transmission request to the PduR if a static part is received.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TriggerMode.staticPartTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="TTCAN-TRIGGER-TYPE--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RX-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>Check for message reception</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="TtcanTriggerType.rxTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TX-REF-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>Send reference message in periodic case</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="TtcanTriggerType.txRefTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TX-REF-TRIGGER-GAP">
            <xsd:annotation>
               <xsd:documentation>Send reference message in event-synchronised case</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="TtcanTriggerType.txRefTriggerGap"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TX-TRIGGER-MERGED">
            <xsd:annotation>
               <xsd:documentation>Send message in a merged arbitration window</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="3";mmt.qualifiedName="TtcanTriggerType.txTriggerMerged"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TX-TRIGGER-SINGLE">
            <xsd:annotation>
               <xsd:documentation>Send message in an exclusive time window</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="4";mmt.qualifiedName="TtcanTriggerType.txTriggerSingle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WATCH-TRIGGER">
            <xsd:annotation>
               <xsd:documentation>Check for missing reference message in periodic case</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="5";mmt.qualifiedName="TtcanTriggerType.watchTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WATCH-TRIGGER-GAP">
            <xsd:annotation>
               <xsd:documentation>Check for missing reference message in event-synchronised case</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="6";mmt.qualifiedName="TtcanTriggerType.watchTriggerGap"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="UDP-CHECKSUM-CALCULATION-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="UDP-CHECKSUM-DISABLED">
            <xsd:annotation>
               <xsd:documentation>Udp checksum handling shall be disabled</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="UdpChecksumCalculationEnum.udpChecksumDisabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="UDP-CHECKSUM-ENABLED">
            <xsd:annotation>
               <xsd:documentation>Udp checksum handling shall be enabled</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="UdpChecksumCalculationEnum.udpChecksumEnabled"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="UDP-COLLECTION-TRIGGER-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="ALWAYS">
            <xsd:annotation>
               <xsd:documentation>ServiceInterface element will trigger the transmission of the data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="UdpCollectionTriggerEnum.always"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="NEVER">
            <xsd:annotation>
               <xsd:documentation>ServiceInterface element will be buffered and will not trigger the transmission of the data.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="UdpCollectionTriggerEnum.never"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="UNLIMITED-INTEGER--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="[+\-]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="URI-STRING--SIMPLE">
      <xsd:restriction base="xsd:string"></xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="V-2-X-SUPPORT-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="V-2-X-ACTIVE-SUPPORTED">
            <xsd:annotation>
               <xsd:documentation>This means that the EcuInstance supports V2X communication as both the sender and the receiver of communication.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="V2xSupportEnum.v2xActiveSupported"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="V-2-X-NOT-SUPPORTED">
            <xsd:annotation>
               <xsd:documentation>This EcuInstance does not support V2X communication</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="V2xSupportEnum.v2xNotSupported"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="VALIGN-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="BOTTOM">
            <xsd:annotation>
               <xsd:documentation>The contents of the table cell is bottom aligned.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="ValignEnum.bottom"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="MIDDLE">
            <xsd:annotation>
               <xsd:documentation>The contents of the table is vertically centered.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="ValignEnum.middle"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="TOP">
            <xsd:annotation>
               <xsd:documentation>The contents of the table cell is top aligned.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="ValignEnum.top"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="VARIABLE-ACCESS-SCOPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="COMMUNICATION-INTER-ECU">
            <xsd:annotation>
               <xsd:documentation>This case is foreseen to express that the corresponding communication shall be considered inter-ECU, i.e. it will cross the ECU boundary. This is considered the default case.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="VariableAccessScopeEnum.communicationInterEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="COMMUNICATION-INTRA-PARTITION">
            <xsd:annotation>
               <xsd:documentation>This case is foreseen to express that the corresponding communication shall '''not''' cross the boundary of a partition.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="VariableAccessScopeEnum.communicationIntraPartition"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="INTER-PARTITION-INTRA-ECU">
            <xsd:annotation>
               <xsd:documentation>In this case the communication shall cross the boundaries of partitions within one ECU but it shall not cross the boundaries of the ECU itself.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="2";mmt.qualifiedName="VariableAccessScopeEnum.interPartitionIntraEcu"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="VERBATIM-STRING--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"></xsd:whiteSpace>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="VERBATIM-STRING-PLAIN--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="preserve"></xsd:whiteSpace>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="VIEW-TOKENS--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:pattern value="(-?[a-zA-Z_]+)(( )+-?[a-zA-Z_]+)*"></xsd:pattern>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="WATCHDOG-PHM-ACTION-TYPE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="STOP-TRIGGER">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="WatchdogPhmActionTypeEnum.stopTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="WRONG-TRIGGER">
            <xsd:annotation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="WatchdogPhmActionTypeEnum.wrongTrigger"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:simpleType name="XML-SPACE-ENUM--SIMPLE">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="default">
            <xsd:annotation>
               <xsd:documentation>The value "default" signals that applications' default white-space processing modes are acceptable for this element.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="0";mmt.qualifiedName="XmlSpaceEnum.default";xml.name="default"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="preserve">
            <xsd:annotation>
               <xsd:documentation>the value "preserve" indicates the intent that applications preserve all the white space.</xsd:documentation>
               <xsd:appinfo source="tags">atp.EnumerationValue="1";mmt.qualifiedName="XmlSpaceEnum.preserve";xml.name="preserve"</xsd:appinfo>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType><xsd:complexType name="ACCESS-CONTROL-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration describes the options for the definition of access restriction to resources.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="AccessControlEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ACCESS-CONTROL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ACL-SCOPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator represents the scope of a definition in context of access control.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AclScopeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ACL-SCOPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ADDITIONAL-BINDING-TIME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration specifies the additional binding times applicable for vh.latestBindingTime of variation points.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AdditionalBindingTimeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ADDITIONAL-BINDING-TIME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ADDRESS">
      <xsd:annotation>
         <xsd:documentation>This is used to specify an address within the CPU.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Address";xml.xsd.customType="ADDRESS";xml.xsd.pattern="0x[0-9a-z]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ADDRESS--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ALIGN-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies horizontal alignment.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AlignEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ALIGN-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ALIGNMENT-TYPE">
      <xsd:annotation>
         <xsd:documentation>This primitive represents the alignment of objects within a memory section. The value is in number of bits or UNKNOWN (deprecated), 8 , 16, 32 UNSPECIFIED, BOOLEAN, or PTR. Typical values for numbers are 8, 16, 32.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AlignmentType";xml.xsd.customType="ALIGNMENT-TYPE";xml.xsd.pattern="[1-9][0-9]*|0[xX][0-9a-fA-F]*|0[bB][0-1]+|0[0-7]*|UNSPECIFIED|UNKNOWN|BOOLEAN|PTR";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ALIGNMENT-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ANY-SERVICE-INSTANCE-ID">
      <xsd:annotation>
         <xsd:documentation>This is a positive integer or the literal ANY which can be denoted in decimal, octal and hexadecimal.
The value is between 0 and 4294967295.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="AnyServiceInstanceId";xml.xsd.customType="ANY-SERVICE-INSTANCE-ID";xml.xsd.pattern="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[0-7]*|0[bB][0-1]+|ANY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ANY-SERVICE-INSTANCE-ID--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ANY-VERSION-STRING">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AnyVersionString";xml.xsd.customType="ANY-VERSION-STRING";xml.xsd.pattern="[0-9]+|ANY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ANY-VERSION-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="API-PRINCIPLE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration represents the ability to control the granularity of API generation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ApiPrincipleEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:API-PRINCIPLE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="AREA-ENUM-NOHREF">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the fact that the area has no reference.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumNohref"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AREA-ENUM-NOHREF--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="AREA-ENUM-SHAPE">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the shape of the area.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AreaEnumShape"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AREA-ENUM-SHAPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ARGUMENT-DIRECTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Use cases:

* Arguments in ClientServerOperation can have different directions that need to be formally indicated because they have an impact on how the function signature looks like eventually.

* Arguments in BswModuleEntry already determine a function signature, but the direction is used to specify the semantics, especially of pointer arguments.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArgumentDirectionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ARGUMENT-DIRECTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ARRAY-SIZE-HANDLING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines different ways to handle the sizes of variable size arrays.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeHandlingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ARRAY-SIZE-HANDLING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ARRAY-SIZE-SEMANTICS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This type controls how the information about the number of elements in an ApplicationArrayDataType is to be interpreted.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ArraySizeSemanticsEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ARRAY-SIZE-SEMANTICS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ASAM-RECORD-LAYOUT-SEMANTICS">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to denote the semantics in particular in terms of the corresponding A2L-Keyword. This is to support the mapping of the more general record layouts in AUTOSAR/MSR to the specific A2L keywords. 

It is possible to express the specific semantics of A2l RecordLayout keywords in SwRecordlayoutGroup but not always vice versa. Therefore the mapping is provided in this optional attribute.

It is specified as NMTOKEN to reduce the direct dependency of ASAM an AUTOSAR standards.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AsamRecordLayoutSemantics";xml.xsd.customType="ASAM-RECORD-LAYOUT-SEMANTICS";xml.xsd.type="NMTOKEN"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ASAM-RECORD-LAYOUT-SEMANTICS--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="AUTO-COLLECT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator defines the possible approaches to determine the final set of elements in a collection.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AutoCollectEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AUTO-COLLECT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="AXIS-INDEX-TYPE">
      <xsd:annotation>
         <xsd:documentation>This meta-class specifies an axis in a curve/map data object. The index satisfies  the following convention:

* 0 output "axis"
* 1 input axis 1 (X input axis e.g. of a CURVE)
* 2 input axis 2 (Y input axis e.g. of a MAP)
* 3 input axis 3 (Z input axis e.g. of a CUBOID)
* 4 input axis 3 (Z4 input axis e.g. of a CUBE_4)
* 5 input axis 3 (Z5 input axis e.g. of a CUBE_5)
* 6..9 etc.

The output "axis" provides access to the output value of the parameter. Note that this access is usually performed via an index according to the input axis.

In addition to this, the Values STRING and ARRAY support specific iterations.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="AxisIndexType";xml.xsd.customType="AXIS-INDEX-TYPE";xml.xsd.pattern="[0-9]+|STRING|ARRAY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:AXIS-INDEX-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BASE-TYPE-ENCODING-STRING">
      <xsd:annotation>
         <xsd:documentation>This is the string denotion of a BaseType encoding. It may be refined by specific use-cases.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BaseTypeEncodingString";xml.xsd.customType="BASE-TYPE-ENCODING-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BASE-TYPE-ENCODING-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BINDING-TIME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the applicable binding times for the pre build variation points.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BindingTimeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BINDING-TIME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BOOLEAN">
      <xsd:annotation>
         <xsd:documentation>A Boolean value denotes a logical condition that is either 'true' or 'false'.
It can be one of "0", "1", "true", "false"</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Boolean";xml.xsd.customType="BOOLEAN";xml.xsd.pattern="0|1|true|false";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BOOLEAN--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BSW-CALL-TYPE">
      <xsd:annotation>
         <xsd:documentation>Denotes the mechanism by which the entry into the Bsw module shall be called.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswCallType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-CALL-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BSW-ENTRY-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Denotes the mechanism by which the entry into the Bsw module shall be called.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswEntryKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-ENTRY-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BSW-ENTRY-RELATIONSHIP-ENUM">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswEntryRelationshipEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-ENTRY-RELATIONSHIP-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BSW-EXECUTION-CONTEXT">
      <xsd:annotation>
         <xsd:documentation>Specifies the execution context required or guaranteed for the call associated with this service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswExecutionContext"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-EXECUTION-CONTEXT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BSW-INTERRUPT-CATEGORY">
      <xsd:annotation>
         <xsd:documentation>Category of the interrupt service</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="BswInterruptCategory"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BSW-INTERRUPT-CATEGORY--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BUILD-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the possible buildTypes a software module may be implemented.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="BuildTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BUILD-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="BYTE-ORDER-ENUM">
      <xsd:annotation>
         <xsd:documentation>When more than one byte is stored in the memory the order of those bytes may differ depending on the architecture of the processing unit. If the least significant byte is stored at the lowest address, this architecture is called little endian and otherwise it is called big endian.

ByteOrder is very important in case of communication between different PUs or ECUs.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ByteOrderEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:BYTE-ORDER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="C-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This datatype represents a string, that follows the rules of C-identifiers.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CIdentifier";xml.xsd.customType="C-IDENTIFIER";xml.xsd.pattern="[a-zA-Z_][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:C-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:C-IDENTIFIER"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="C-IDENTIFIER-WITH-INDEX">
      <xsd:annotation>
         <xsd:documentation>This datatype represents a string, that follows the rules of C-identifiers with an index.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CIdentifierWithIndex";xml.xsd.customType="C-IDENTIFIER-WITH-INDEX";xml.xsd.pattern="[a-zA-Z_][a-zA-Z0-9_]*\[[0-9]+\]";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:C-IDENTIFIER-WITH-INDEX--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CALPRM-AXIS-CATEGORY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum specifies the possible values of the category property within  SwCalprmAxis.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CalprmAxisCategoryEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CALPRM-AXIS-CATEGORY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CAN-ADDRESSING-MODE-TYPE">
      <xsd:annotation>
         <xsd:documentation>Indicates whether standard or extended CAN identifiers are used</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CanAddressingModeType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CAN-ADDRESSING-MODE-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CAN-FRAME-RX-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines different CAN protocols for frame reception behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CanFrameRxBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CAN-FRAME-RX-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CAN-FRAME-TX-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines different CAN protocols for frame transmission behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CanFrameTxBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CAN-FRAME-TX-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CAN-TP-ADDRESSING-FORMAT-TYPE">
      <xsd:annotation>
         <xsd:documentation>Declares which communication addressing mode is supported.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CanTpAddressingFormatType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CAN-TP-ADDRESSING-FORMAT-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CAN-TP-CHANNEL-MODE-TYPE">
      <xsd:annotation>
         <xsd:documentation>The CAN Transport Layer supports half and full duplex channel modes.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";atp.StatusRevisionBegin="4.4.0";mmt.qualifiedName="CanTpChannelModeType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CAN-TP-CHANNEL-MODE-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CATEGORY-STRING">
      <xsd:annotation>
         <xsd:documentation>This represents the pattern applicable to categories.

It is basically the same as Identifier but has a different semantics. Therefore it is modeled as a primitive of its own.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CategoryString";xml.xsd.customType="CATEGORY-STRING";xml.xsd.pattern="[a-zA-Z][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CATEGORY-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CHAPTER-ENUM-BREAK">
      <xsd:annotation>
         <xsd:documentation>This allows to specify the page break policy of a paginatable element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ChapterEnumBreak"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CHAPTER-ENUM-BREAK--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CLIENT-CAPABILITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify how a given ServiceInterface is used from the perspective of a given client.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="ClientCapabilityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CLIENT-CAPABILITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="COMMAND-LINE-OPTION-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum defines the different styles how the command line option appears in the command line.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="CommandLineOptionKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:COMMAND-LINE-OPTION-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="COMMUNICATION-DIRECTION-TYPE">
      <xsd:annotation>
         <xsd:documentation>Describes the communication direction.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CommunicationDirectionType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:COMMUNICATION-DIRECTION-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CONTAINED-I-PDU-COLLECTION-SEMANTICS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the collection semantics for ContainedIPdus.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ContainedIPduCollectionSemanticsEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CONTAINED-I-PDU-COLLECTION-SEMANTICS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CONTAINER-I-PDU-HEADER-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Is used to define the header type and size of ContainerIPdus. The header size includes the header id and the length information.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ContainerIPduHeaderTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CONTAINER-I-PDU-HEADER-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CONTAINER-I-PDU-TRIGGER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines when the transmission of the ContainerIPdu shall be requested.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ContainerIPduTriggerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CONTAINER-I-PDU-TRIGGER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="COUPLING-ELEMENT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Identifies the Coupling type.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CouplingElementEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:COUPLING-ELEMENT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="COUPLING-PORT-RATE-POLICY-ACTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the action to be performed when a rate policy is violated.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CouplingPortRatePolicyActionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:COUPLING-PORT-RATE-POLICY-ACTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="COUPLING-PORT-ROLE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the role a CouplingPort takes in the context of a CouplingElement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CouplingPortRoleEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:COUPLING-PORT-ROLE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CRYPTO-CERTIFICATE-ALGORITHM-FAMILY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class defies possible cryptographic algorithm families used to create public keys and  signatures within the certificate.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="CryptoCertificateAlgorithmFamilyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CRYPTO-CERTIFICATE-ALGORITHM-FAMILY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CRYPTO-CERTIFICATE-FORMAT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class defines possible formats of cryptographic certificates.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="CryptoCertificateFormatEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CRYPTO-CERTIFICATE-FORMAT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CRYPTO-SERVICE-KEY-GENERATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration shall be taken to express the handling of a crypto key in terms of whether it is obtained from e.g. a diagnostic tester or whether it is created by derivation from a master key.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CryptoServiceKeyGenerationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CRYPTO-SERVICE-KEY-GENERATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CS-TRANSFORMER-ERROR-REACTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible kinds of error reaction in case of a hard transformer error.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CSTransformerErrorReactionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CS-TRANSFORMER-ERROR-REACTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CSE-CODE-TYPE-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents an ASAM CSE (Codes for Scaling Units) based on the definition in the ASAM-MCD-2MC-ASAP2  specification.

The particular semantics is specified in [TPS_GST_00354].</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CseCodeType";xml.xsd.customType="CSE-CODE-TYPE-STRING";xml.xsd.type="unsignedInt"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CSE-CODE-TYPE-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="CYCLE-REPETITION-TYPE">
      <xsd:annotation>
         <xsd:documentation>The number of communication cycles (after the first cycle) whenever the frame is sent again. The FlexRay communication controller allows only determined values.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="CycleRepetitionType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:CYCLE-REPETITION-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-EXCHANGE-POINT-KIND">
      <xsd:annotation>
         <xsd:documentation>Specifies the kind of a DataExchangePoint.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataExchangePointKind"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-EXCHANGE-POINT-KIND--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-FILTER-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum specifies the supported DataFilterTypes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataFilterTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-FILTER-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-ID-MODE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Supported inclusion modes to include the implicit two-byte Data ID in the one-byte CRC.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataIdModeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-ID-MODE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-LIMIT-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Indicates whether the data element carries a minimum or maximum value, thereby limiting the current range of another value.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataLimitKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-LIMIT-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-TRANSFORMATION-ERROR-HANDLING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines different ways how a RunnableEntity shall handle transformer errors.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataTransformationErrorHandlingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-TRANSFORMATION-ERROR-HANDLING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-TRANSFORMATION-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration contributes to the definition of the scope of the DataTransformation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataTransformationKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-TRANSFORMATION-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATA-TYPE-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This class lists the supported DataTypePolicies.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DataTypePolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATA-TYPE-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DATE">
      <xsd:annotation>
         <xsd:documentation>A datatype representing a timestamp. The smallest granularity is 1 second.

This datatype represents a timestamp in the format yyyy-mm-dd followed by an optional time. The lead-in character for the time is "T" and the format is hh:mm:ss. In addition, a time zone designator must be specified. The time zone designator can either be "Z" (for UTC) or the time offset to UTC, i.e. (+|-)hh:mm.

Examples:

2009-07-23

2009-07-23T14:38:00+01:00

2009-07-23T13:38:00Z</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DateTime";xml.xsd.customType="DATE";xml.xsd.pattern="([0-9]{4}-[0-9]{2}-[0-9]{2})(T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|([+\-][0-9]{2}:[0-9]{2})))?";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DATE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DDS-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This datatype represents a string, that follows the rules of DDS-identifiers.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="DDSIdentifier";xml.xsd.customType="DDS-IDENTIFIER";xml.xsd.pattern="[a-zA-Z][a-zA-Z0-9-]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DDS-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DEFAULT-VALUE-APPLICATION-STRATEGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Enumeration that describes how to handle AUTOSAR defined default values.
If the strategy requires application of the AUTOSAR defined default value, then the value shall be added before further validation or processing.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DefaultValueApplicationStrategyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DEFAULT-VALUE-APPLICATION-STRATEGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DEPENDENCY-USAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Enumeration describing the process steps a dependency is valid in.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DependencyUsageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DEPENDENCY-USAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAG-PDU-TYPE">
      <xsd:annotation>
         <xsd:documentation>Used to distinguish a diagnostic request from a response.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagPduType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAG-PDU-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAG-REQUIREMENT-ID-STRING">
      <xsd:annotation>
         <xsd:documentation>This string denotes an Identifier for a requirement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagRequirementIdString";xml.xsd.customType="DIAG-REQUIREMENT-ID-STRING";xml.xsd.pattern="[0-9a-zA-Z_\-]+";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAG-REQUIREMENT-ID-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-ACCESS-PERMISSION-VALIDITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class provides settings for how the accessPermission shall be resolved between DiagnosticServiceInstance and DiagnosticServiceClass.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticAccessPermissionValidityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-ACCESS-PERMISSION-VALIDITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-AUDIENCE-ENUM">
      <xsd:annotation>
         <xsd:documentation>The possible values of the intended audience for a diagnostic object.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticAudienceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-AUDIENCE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-CLEAR-DTC-LIMITATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Scope of the DEM_ClearDTC Api.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticClearDtcLimitationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-CLEAR-DTC-LIMITATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-CLEAR-EVENT-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible behavior for clearing events.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticClearEventBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-CLEAR-EVENT-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-COMPARE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Enumeration for the type of a comparison of values usually expressed by the following operators: ==, !=, &lt;, &lt;=, &gt;, &gt;=</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticCompareTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-COMPARE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-CONNECTED-INDICATOR-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Behavior of the indicator.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticConnectedIndicatorBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-CONNECTED-INDICATOR-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-DATA-CAPTURE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Data triggering types</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticDataCaptureEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-DATA-CAPTURE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Event debounce algorithm behavior options.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticDebounceBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-DEBOUNCE-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-DENOMINATOR-CONDITION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration contains valid denominator types.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticDenominatorConditionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-DENOMINATOR-CONDITION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-SUBFUNCTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class contains a list of possible subfunctions for the UDS service 0x2C.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticDynamicallyDefineDataIdentifierSubfunctionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-DYNAMICALLY-DEFINE-DATA-IDENTIFIER-SUBFUNCTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-EVENT-CLEAR-ALLOWED-ENUM">
      <xsd:annotation>
         <xsd:documentation>Denotes whether clearing of events is allowed.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticEventClearAllowedEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-EVENT-CLEAR-ALLOWED-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-EVENT-DISPLACEMENT-STRATEGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the displacement strategy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticEventDisplacementStrategyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-EVENT-DISPLACEMENT-STRATEGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-EVENT-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Applicability of the diagnostic event.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticEventKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-EVENT-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-EVENT-WINDOW-TIME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to define the semantics of the event window.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticEventWindowTimeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-EVENT-WINDOW-TIME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-HANDLE-DDDI-CONFIGURATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the options for controlling how the configuration of the DynamicallyDefineDataIdentifiers is done in the given context.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticHandleDDDIConfigurationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-HANDLE-DDDI-CONFIGURATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-INDICATOR-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Type of an indicator.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticIndicatorTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-INDICATOR-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-INHIBITION-MASK-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define different kinds of inhibition mask behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticInhibitionMaskEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-INHIBITION-MASK-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-INITIAL-EVENT-STATUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to define an initial status for the ROE service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticInitialEventStatusEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-INITIAL-EVENT-STATUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-JUMP-TO-BOOT-LOADER-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration contains the options for jumping to a boot loader.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticJumpToBootLoaderEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-JUMP-TO-BOOT-LOADER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-LOGICAL-OPERATOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Logical AND and OR operation (&amp;&amp;, ||)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticLogicalOperatorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-LOGICAL-OPERATOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-MEMORY-ENTRY-STORAGE-TRIGGER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Trigger types to allocate an event memory entry.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticMemoryEntryStorageTriggerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-MEMORY-ENTRY-STORAGE-TRIGGER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-MONITOR-UPDATE-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration indicates the acceptance criteria for a diagnostic monitor.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticMonitorUpdateKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-MONITOR-UPDATE-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-OBD-SUPPORT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to model the roles in which a participation in OBD is foreseen. At the moment, this applies exclusively to the Dem. However, future extension of the Dcm may require this setting as well.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticObdSupportEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-OBD-SUPPORT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-OCCURRENCE-COUNTER-PROCESSING-ENUM">
      <xsd:annotation>
         <xsd:documentation>The occurrence counter triggering types.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticOccurrenceCounterProcessingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-OCCURRENCE-COUNTER-PROCESSING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-OPERATION-CYCLE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Operation cycles types used to identify certain Operation cycles with a certain semantics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticOperationCycleTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-OPERATION-CYCLE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-PERIODIC-RATE-CATEGORY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class provides possible values for the setting of the periodic rate.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticPeriodicRateCategoryEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-PERIODIC-RATE-CATEGORY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-PROCESSING-STYLE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define the processing style of diagnostic requests.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticProcessingStyleEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-PROCESSING-STYLE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-RECORD-TRIGGER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Triggers to allocate an event memory entry.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticRecordTriggerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-RECORD-TRIGGER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-RESPONSE-ON-EVENT-ACTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to define sub-functions of the UDS service ResponseOnEvent.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticResponseOnEventActionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-RESPONSE-ON-EVENT-ACTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-RESPONSE-TO-ECU-RESET-ENUM">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticResponseToEcuResetEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-RESPONSE-TO-ECU-RESET-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-ROUTINE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the different types of diagnostic routines.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticRoutineTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-ROUTINE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-SERVICE-REQUEST-CALLBACK-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to define whether a Service Request Notification was used in the role of a manufacturer or a supplier.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticServiceRequestCallbackTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-SERVICE-REQUEST-CALLBACK-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-SIGNIFICANCE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Significance level of a diagnostic event.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticSignificanceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-SIGNIFICANCE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Aging and displacement has no impact on the "TestFailedSinceLastClear" status bits.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticStatusBitHandlingTestFailedSinceLastClearEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-STATUS-BIT-HANDLING-TEST-FAILED-SINCE-LAST-CLEAR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-STORE-EVENT-SUPPORT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to define how a specific event in the context of the UDS service ResponseOnEvent shall be handled.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticStoreEventSupportEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-STORE-EVENT-SUPPORT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define the update behavior of a DiagnosticTestResult.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticTestResultUpdateEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-TEST-RESULT-UPDATE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-TROUBLE-CODE-J-1939-DTC-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to further specify a J1939 DTC in terms of its semantics.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticTroubleCodeJ1939DtcKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-TROUBLE-CODE-J-1939-DTC-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-TYPE-OF-DTC-SUPPORTED-ENUM">
      <xsd:annotation>
         <xsd:documentation>Supported Dtc Types</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticTypeOfDtcSupportedEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-TYPE-OF-DTC-SUPPORTED-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>FreezeFrame record numeration type</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticTypeOfFreezeFrameRecordNumerationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-TYPE-OF-FREEZE-FRAME-RECORD-NUMERATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-UDS-SEVERITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Severity types for a DTC according to ISO 14229-1.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticUdsSeverityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-UDS-SEVERITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-VALUE-ACCESS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the access of the configured diagnostic current values which will be used by the Dem or Dcm module.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticValueAccessEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-VALUE-ACCESS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to model severity classes of an WWH-OBD DTC.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DiagnosticWwhObdDtcClassEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DIAGNOSTIC-WWH-OBD-DTC-CLASS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DISCOVERY-TECHNOLOGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Discovery technology information.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="DiscoveryTechnologyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DISCOVERY-TECHNOLOGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DISPLAY-FORMAT-STRING">
      <xsd:annotation>
         <xsd:documentation>This is a display format specifier for the display of values  e.g. in documents or in measurement and calibration systems. 

The display format specifier is a subset of the ANSI C printf specifiers with the following
form:

  % [flags] [width] [.prec] type character 

For more details refer to "ASAM-HarmonizedDataObjects-V1.1.pdf" chapter 13.3.2 DISPLAY OF DATA. 

Due to the numerical nature of value settings, only the following type characters are allowed:

* d:  Signed decimal integer 
* i:  Signed decimal integer 
* o:  Unsigned octal integer 
* u:  Unsigned decimal integer 
* x:  Unsigned hexadecimal integer, using "abcdef" 
* X:  Unsigned hexadecimal integer, using "ABCDEF" 
* e:  Signed value having the form [-]d.dddd e [sign]ddd where d is a single decimal digit, dddd is one or more decimal digits, ddd is exactly three decimal digits, and sign is + or - 
* E:  Identical to the e format except that E rather than e introduces the exponent 
* f:  Signed value having the form [-]dddd.dddd, where dddd is one or more decimal digits; the number of digits before the decimal point depends on the magnitude of the number, and the number of digits after the decimal point depends on the requested precision 
* g:  Signed value printed in f or e format, whichever is more compact for the given value and precision; trailing zeros are truncated, and the decimal point appears only if one or more digits follow it 
* G:  Identical to the g format, except that E, rather than e, introduces the exponent (where appropriate)</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DisplayFormatString";xml.xsd.customType="DISPLAY-FORMAT-STRING";xml.xsd.pattern="%[ \-+#]?[0-9]*(\.[0-9])?[diouxXfeEgGcs]";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DISPLAY-FORMAT-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DISPLAY-PRESENTATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to provide values for controlling the presentation of data within measurement and calibration tools.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DisplayPresentationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DISPLAY-PRESENTATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DO-IP-ENTITY-ROLE-ENUM">
      <xsd:annotation>
         <xsd:documentation>DoIP role a network-node has.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DoIpEntityRoleEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DO-IP-ENTITY-ROLE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DTC-FORMAT-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration specifies the DTC format.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DtcFormatTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DTC-FORMAT-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="DTC-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the possible kinds of diagnostic monitors regarding the OBD relevance.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="DtcKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:DTC-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="E-ENUM">
      <xsd:annotation>
         <xsd:documentation>This specifies the possible kinds of emphasis as proposal how to render it on paper or screen. Note that it would have been better to use plain, weak (italic), strong (bold), veryStrong (bolditalic) ... But users complained about this.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:E-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="E-ENUM-FONT">
      <xsd:annotation>
         <xsd:documentation>This specifies the possible kind of fonts to be used for emphasis.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EEnumFont"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:E-ENUM-FONT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ECUC-AFFECTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible affections used by the EcucConfigurationClassAffection.

This element is removed from the specifications and shall not be used.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="EcucAffectionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-AFFECTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ECUC-CONFIGURATION-CLASS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible configuration classes for the AUTOSAR configuration parameters.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationClassEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-CONFIGURATION-CLASS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ECUC-CONFIGURATION-VARIANT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the possible Configuration Variants used for AUTOSAR BSW Modules.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucConfigurationVariantEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-CONFIGURATION-VARIANT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ECUC-DESTINATION-URI-NESTING-CONTRACT-ENUM">
      <xsd:annotation>
         <xsd:documentation>EcucDestinationUriNestingContractEnum is used to determine what is qualified by the EcucDestinationUriPolicy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucDestinationUriNestingContractEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-DESTINATION-URI-NESTING-CONTRACT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ECUC-SCOPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Possible scope settings for a configuration element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EcucScopeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ECUC-SCOPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="END-TO-END-PROFILE-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Behavior of the check functionality</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EndToEndProfileBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:END-TO-END-PROFILE-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ENVIRONMENT-CAPTURE-TO-REPORTING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to define the behavior of the capturing behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EnvironmentCaptureToReportingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ENVIRONMENT-CAPTURE-TO-REPORTING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETH-GLOBAL-TIME-MESSAGE-FORMAT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies which message formats are available to for the Ethernet time sync protocol.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthGlobalTimeMessageFormatEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETH-GLOBAL-TIME-MESSAGE-FORMAT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-CONNECTION-NEGOTIATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies connection negotiation types of Ethernet transceiver links.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetConnectionNegotiationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-CONNECTION-NEGOTIATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-COUPLING-PORT-SCHEDULER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the schedule algorithm to be used.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetCouplingPortSchedulerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-COUPLING-PORT-SCHEDULER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-MAC-LAYER-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies MAC (Media Access Control) Layer types.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetMacLayerTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-MAC-LAYER-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-PHYSICAL-LAYER-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies physical layer types of Ethernet transceiver links.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetPhysicalLayerTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-PHYSICAL-LAYER-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-SWITCH-VLAN-EGRESS-TAGGING-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the VLAN tag sending behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetSwitchVlanEgressTaggingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-SWITCH-VLAN-EGRESS-TAGGING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ETHERNET-SWITCH-VLAN-INGRESS-TAG-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the possible tagging behavior at an ingress port.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EthernetSwitchVlanIngressTagEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ETHERNET-SWITCH-VLAN-INGRESS-TAG-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EVENT-ACCEPTANCE-STATUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the initial status for enable or disable of acceptance of event reports of a diagnostic event.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EventAcceptanceStatusEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EVENT-ACCEPTANCE-STATUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EVENT-GROUP-CONTROL-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Types of a RoutingGroups for the event communication.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EventGroupControlTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EVENT-GROUP-CONTROL-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EVENT-OCCURRENCE-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the type of the occurrence of an event within a given time interval.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="EventOccurrenceKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EVENT-OCCURRENCE-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EXECUTION-ORDER-CONSTRAINT-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific type of the ExecutionOrderConstraint.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionOrderConstraintTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EXECUTION-ORDER-CONSTRAINT-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EXECUTION-TIME-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the type of the execution time constrained by ExecutionTimeConstraint.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExecutionTimeTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EXECUTION-TIME-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="EXT-ID-CLASS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is in fact an enumerator. The possible values are all legal XML names of identifiable objects even those of other XML files. 

If the schemas of all questionable files are generated from a common meta-model, this is something like an IdentifiableSubtypesEnum. Maybe a future version of the Schema generator can generate such an enum.

As of now it is specified as string.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ExtIdClassEnum";xml.xsd.customType="EXT-ID-CLASS-ENUM";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:EXT-ID-CLASS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FILTER-DEBOUNCING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines possible values for the filter debouncing strategy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FilterDebouncingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FILTER-DEBOUNCING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FLEXRAY-CHANNEL-NAME">
      <xsd:annotation>
         <xsd:documentation>Name of the channel.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FlexrayChannelName"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FLEXRAY-CHANNEL-NAME--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FLEXRAY-NM-SCHEDULE-VARIANT">
      <xsd:annotation>
         <xsd:documentation>FrNm schedule variant according to FrNm SWS.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FlexrayNmScheduleVariant"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FLEXRAY-NM-SCHEDULE-VARIANT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FLOAT">
      <xsd:annotation>
         <xsd:documentation>An instance of Float is an element from the set of real numbers. The value must comply with IEEE 754 and is limited to what can be expressed by a 64 bit binary representation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Float";xml.xsd.customType="FLOAT";xml.xsd.type="double"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FLOAT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FLOAT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the policy how an objects floats on a page.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FloatEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FLOAT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FM-FEATURE-SELECTION-STATE">
      <xsd:annotation>
         <xsd:documentation>Defines how a particular FMFeature contributes to a FMFSelectionSet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FMFeatureSelectionState"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FM-FEATURE-SELECTION-STATE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FR-AR-TP-ACK-TYPE">
      <xsd:annotation>
         <xsd:documentation>Type of Acknowledgement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FrArTpAckType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FR-AR-TP-ACK-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FRAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the policy, where to place a frame border around the table.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FrameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FRAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="FULL-BINDING-TIME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration specifies the BindingTimes that can be used in AUTOSAR models.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="FullBindingTimeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:FULL-BINDING-TIME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="GLOBAL-TIME-CRC-SUPPORT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration is used to define whether and how CRC on the TX side shall be utilized.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GlobalTimeCrcSupportEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:GLOBAL-TIME-CRC-SUPPORT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="GLOBAL-TIME-CRC-VALIDATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration provides values for the evaluation of the CRC</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GlobalTimeCrcValidationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:GLOBAL-TIME-CRC-VALIDATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="GRAPHIC-FIT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the policy how to place and scale the figure on the page.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GraphicFitEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:GRAPHIC-FIT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="GRAPHIC-NOTATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the various notations (finally file types) used to represent the figure.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="GraphicNotationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:GRAPHIC-NOTATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HANDLE-INVALID-ENUM">
      <xsd:annotation>
         <xsd:documentation>Strategies of handling the reception of invalidValue.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HandleInvalidEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HANDLE-INVALID-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HANDLE-OUT-OF-RANGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>A value of this type is taken for controlling the range checking behavior of the AUTOSAR RTE.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HandleOutOfRangeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HANDLE-OUT-OF-RANGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HANDLE-OUT-OF-RANGE-STATUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines how the RTE handles values that are out of range.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HandleOutOfRangeStatusEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HANDLE-OUT-OF-RANGE-STATUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HANDLE-TERMINATION-AND-RESTART-ENUM">
      <xsd:annotation>
         <xsd:documentation>Controls the behavior of an AtomicSwComponentType with respect to stop and restart.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HandleTerminationAndRestartEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HANDLE-TERMINATION-AND-RESTART-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HANDLE-TIMEOUT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Strategies of handling a reception timeout violation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="HandleTimeoutEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HANDLE-TIMEOUT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HC-CONDITION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines whether the Health Channel status shall match or not.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="HCConditionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HC-CONDITION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HC-SUPERVISION-CONDITION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the possible conditions which can be evaluated in the scope of a GlobalSupervision.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="HCSupervisionConditionTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HC-SUPERVISION-CONDITION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="HTTP-ACCEPT-ENCODING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the value for the accept-encoding field of the HTTP header.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="HttpAcceptEncodingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:HTTP-ACCEPT-ENCODING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="I-PDU-SIGNAL-PROCESSING-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of signal processing modes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IPduSignalProcessingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:I-PDU-SIGNAL-PROCESSING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="I-SIGNAL-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines ISignal types that are used for derivation of the ComSignalType in the COM configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ISignalTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:I-SIGNAL-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>An Identifier is a string with a number of constraints on its appearance, satisfying the requirements typical programming languages define for their Identifiers.

This datatype represents a string, that can be used as a c-Identifier.

It shall start with a letter, may consist of letters, digits and underscores.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Identifier";xml.xsd.customType="IDENTIFIER";xml.xsd.maxLength="128";xml.xsd.pattern="[a-zA-Z][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:IDENTIFIER"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IKE-AUTHENTICATION-METHOD-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration describes the supported IKE authentication methods.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="IkeAuthenticationMethodEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IKE-AUTHENTICATION-METHOD-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="INSTALLATION-INSTRUCTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration class provides the vocabulary for the specification of an installation instruction.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="InstallationInstructionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:INSTALLATION-INSTRUCTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="INTEGER">
      <xsd:annotation>
         <xsd:documentation>An instance of Integer is an element in the set of integer numbers ( ..., -2, -1, 0, 1, 2, ...).  

The value can be expressed in decimal, octal, hexadecimal and binary representation. Negative numbers can only be expressed in decimal notation

Range is from -2147483648 and 2147483647.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Integer";xml.xsd.customType="INTEGER";xml.xsd.pattern="[+\-]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="INTERVAL-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the type of an interval.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IntervalTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:INTERVAL-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IP-ADDRESS-KEEP-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the behavior after a dynamic IP address has been assigned.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="IpAddressKeepEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IP-ADDRESS-KEEP-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IP-SEC-CONNECTION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration describes the supported IPSec connection types.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="IPSecConnectionTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IP-SEC-CONNECTION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IP4-ADDRESS-STRING">
      <xsd:annotation>
         <xsd:documentation>This is used to specify an IP4 address. Notation: 255.255.255.255</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ip4AddressString";xml.xsd.customType="IP4-ADDRESS-STRING";xml.xsd.pattern="(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|ANY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IP4-ADDRESS-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IP6-ADDRESS-STRING">
      <xsd:annotation>
         <xsd:documentation>This is used to specify an IP6 address. 
Notation:  FFFF:FFFF;FFFF;FFFF;FFFF;FFFF;FFFF;FFFF</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ip6AddressString";xml.xsd.customType="IP6-ADDRESS-STRING";xml.xsd.pattern="[0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7,7}|ANY";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IP6-ADDRESS-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IPV-4-ADDRESS-SOURCE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines how the node obtains its IPv4-Address.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ipv4AddressSourceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IPV-4-ADDRESS-SOURCE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="IPV-6-ADDRESS-SOURCE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines how the node obtains its IPv6-Address.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ipv6AddressSourceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:IPV-6-ADDRESS-SOURCE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ITEM-LABEL-POS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies, how the label of a labeled list shall be rendered.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ItemLabelPosEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ITEM-LABEL-POS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="KEEP-WITH-PREVIOUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies a page break policy by controlling blocks which shall be kept together.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="KeepWithPreviousEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:KEEP-WITH-PREVIOUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="KEY-USAGE-RESTRICTION-ENUM">
      <xsd:annotation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="KeyUsageRestrictionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:KEY-USAGE-RESTRICTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="L-ENUM">
      <xsd:annotation>
         <xsd:documentation>This denotes the possible language designators according to the two letter code of ISO 693.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:L-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LATENCY-CONSTRAINT-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the type of the latency timing constraint.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LatencyConstraintTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LATENCY-CONSTRAINT-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LIMIT-VALUE">
      <xsd:annotation>
         <xsd:documentation>This class represents the ability to express a numerical limit.  Note that this is in fact a NumericalVariationPoint but has the additional attribute intervalType.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Limit";xml.xsd.customType="LIMIT-VALUE";xml.xsd.pattern="(0[xX][0-9a-fA-F]+)|(0[0-7]+)|(0[bB][0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)([eE]([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LIMIT-VALUE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:LIMIT-VALUE"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LIN-CHECKSUM-TYPE">
      <xsd:annotation>
         <xsd:documentation>Use of classic or enhanced checksum is managed by the master node and it is determined per frame identifier;</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="LinChecksumType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LIN-CHECKSUM-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LIST-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the notation of the various types of lists.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ListEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LIST-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LOG-TRACE-DEFAULT-LOG-LEVEL-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum defines available log&amp;trace log levels that may be used to define the severity level of a log message.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="LogTraceDefaultLogLevelEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LOG-TRACE-DEFAULT-LOG-LEVEL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="LOG-TRACE-LOG-MODE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enum defines the possible destinations of a log&amp;trace message.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="LogTraceLogModeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:LOG-TRACE-LOG-MODE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MAC-ADDRESS-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive specifies a Mac Address.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MacAddressString";xml.xsd.customType="MAC-ADDRESS-STRING";xml.xsd.pattern="([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAC-ADDRESS-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MAPPING-DIRECTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the conversion direction for which the mapping is applicable.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MappingDirectionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAPPING-DIRECTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MAPPING-SCOPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the scope for the mapping constraints.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MappingScopeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAPPING-SCOPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MAX-COMM-MODE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Maximum bus communication mode required by a user of the Communication Manager Service.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MaxCommModeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAX-COMM-MODE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MAXIMUM-MESSAGE-LENGTH-TYPE">
      <xsd:annotation>
         <xsd:documentation>Type of Acknowledgement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MaximumMessageLengthType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MAXIMUM-MESSAGE-LENGTH-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MCD-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This primitive denotes a name used for measurement and calibration systems and shall follow the restrictions for an ASAM ASAP2 ident. For detailed syntax see the xsd.pattern. The size limitations are not captured. 

McdIdentifiers are random names which may contain characters A through Z, a through z, underscore (_), numerals 0 through 9, points ('.') and brackets ( '[',']' ).
However, the following limitations apply: the first character must be a letter or an underscore, brackets must occur in pairs at the end of a partial string and must
contain a number or an alpha-numerical string (description of the index of an array element).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="McdIdentifier";xml.xsd.customType="MCD-IDENTIFIER";xml.xsd.pattern="[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*(\.[a-zA-Z_][a-zA-Z0-9_]*(\[([a-zA-Z_][a-zA-Z0-9_]*|[0-9]+)\])*)*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MCD-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MEMORY-ALLOCATION-KEYWORD-POLICY-TYPE">
      <xsd:annotation>
         <xsd:documentation>Enumeration to specify the name pattern of the Memory Allocation Keyword.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemoryAllocationKeywordPolicyType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MEMORY-ALLOCATION-KEYWORD-POLICY-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MEMORY-SECTION-TYPE">
      <xsd:annotation>
         <xsd:documentation>Enumeration to specify the essential nature of the data which can be allocated in a common memory class by the means of the AUTOSAR Memory Mapping.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MemorySectionType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MEMORY-SECTION-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="META-CLASS-NAME">
      <xsd:annotation>
         <xsd:documentation>Name of an class in the AUTOSAR Meta-Model.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MetaClassName";xml.xsd.customType="META-CLASS-NAME";xml.xsd.pattern="[A-Z][a-zA-Z0-9_]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:META-CLASS-NAME--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MIME-TYPE-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive denotes the an Internet media type, originally called a MIME type after MIME and sometimes a Content-type after the name of a header in several protocols whose value is such a type, is a two-part identifier for file formats on the Internet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MimeTypeString";xml.xsd.customType="MIME-TYPE-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MIME-TYPE-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MODE-ACTIVATION-KIND">
      <xsd:annotation>
         <xsd:documentation>Kind of mode switch condition used for activation of an event, as further described for each enumeration field.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeActivationKind"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MODE-ACTIVATION-KIND--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MODE-ERROR-REACTION-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to specify the reaction on a mode error.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModeErrorReactionPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MODE-ERROR-REACTION-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MODIFICATION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator expresses if an object has been changed in its content or in its documentation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ModificationTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MODIFICATION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="MONOTONY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator denotes the values for specification of  monotony for e.g. curves.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="MonotonyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:MONOTONY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NATIVE-DECLARATION-STRING">
      <xsd:annotation>
         <xsd:documentation>This string contains a native data declaration of a data type in a programming language. It is basically a string, but white-space must be preserved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NativeDeclarationString";xml.xsd.customType="NATIVE-DECLARATION-STRING";xml.xsd.type="string";xml.xsd.whiteSpace="preserve"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NATIVE-DECLARATION-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NETWORK-TARGET-ADDRESS-TYPE">
      <xsd:annotation>
         <xsd:documentation>Network Target Address type (see ISO 15765-2).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NetworkTargetAddressType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NETWORK-TARGET-ADDRESS-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NM-COORDINATOR-ROLE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Supported NmCoordinator roles.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NmCoordinatorRoleEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NM-COORDINATOR-ROLE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NMTOKEN-STRING">
      <xsd:annotation>
         <xsd:documentation>This is an identifier as used in xml, e.g. xml-names. Basic difference to Identifier is the fact that it can contain "-".</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NameToken";xml.xsd.customType="NMTOKEN-STRING";xml.xsd.type="NMTOKEN"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NMTOKEN-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NMTOKENS-STRING">
      <xsd:annotation>
         <xsd:documentation>This is a white-space separated list of name tokens.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NameTokens";xml.xsd.customType="NMTOKENS-STRING";xml.xsd.type="NMTOKENS"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NMTOKENS-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NORMALIZED-INSTRUCTION">
      <xsd:annotation>
         <xsd:documentation>This meta-class is used to describe runtime budget needs on the target system within DeterministicClient::WaitForNextActivation cycles. NormalizedInstructions does not reflect the actual number of code instructions, but allows the description of comparative resource needs. NormalizedInstructions is used for configuration of computing resources at integration time.

NormalizedInstruction = runtime in sec * clock frequency in Hz</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="NormalizedInstruction";xml.xsd.customType="NORMALIZED-INSTRUCTION";xml.xsd.pattern="[1-9][0-9]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NORMALIZED-INSTRUCTION--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NOTE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the type of the note. It can be used to render a note label or even a note icon.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NoteTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NOTE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NUMERICAL-VALUE">
      <xsd:annotation>
         <xsd:documentation>This primitive specifies a numerical value. It can be denoted in different formats such as Decimal, Octal, Hexadecimal, Float. See the xsd pattern for details.

The value can be expressed in octal, hexadecimal, binary representation. Negative numbers can only be expressed in decimal or float notation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Numerical";xml.xsd.customType="NUMERICAL-VALUE";xml.xsd.pattern="(0[xX][0-9a-fA-F]+)|(0[0-7]+)|(0[bB][0-1]+)|(([+\-]?[1-9][0-9]+(\.[0-9]+)?|[+\-]?[0-9](\.[0-9]+)?)([eE]([+\-]?)[0-9]+)?)|\.0|INF|-INF|NaN";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NUMERICAL-VALUE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NV-BLOCK-NEEDS-RELIABILITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Reliability against data loss on the non-volatile medium.
These requirements give only a relative indication, for example on the required degree of redundancy for storage. 

They do, however, not specify by which means (e.g. software or hardware) the reliability is actually achieved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NvBlockNeedsReliabilityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NV-BLOCK-NEEDS-RELIABILITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="NV-BLOCK-NEEDS-WRITING-PRIORITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the priority of writing this block in case of concurrent requests to write other blocks.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="NvBlockNeedsWritingPriorityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:NV-BLOCK-NEEDS-WRITING-PRIORITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="OBD-RATIO-CONNECTION-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the way how the IUMPR service connection between the Dem and the client component or module is handled (for details see the DEM Specification).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ObdRatioConnectionKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:OBD-RATIO-CONNECTION-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="OPERATION-CYCLE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>The possible values of the operation cycles types for the Dem.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="OperationCycleTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:OPERATION-CYCLE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="ORIENT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies how the table shall be oriented.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="OrientEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:ORIENT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PDU-COLLECTION-SEMANTICS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the collection semantics for the PDU collection feature.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PduCollectionSemanticsEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PDU-COLLECTION-SEMANTICS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PDU-COLLECTION-TRIGGER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines whether a Pdu contributes to the triggering of the data transmission if Pdu collection is enabled.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PduCollectionTriggerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PDU-COLLECTION-TRIGGER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PERSISTENCY-COLLECTION-LEVEL-UPDATE-STRATEGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration provides possible values for the update strategy on interface/database level.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PersistencyCollectionLevelUpdateStrategyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PERSISTENCY-COLLECTION-LEVEL-UPDATE-STRATEGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PERSISTENCY-ELEMENT-LEVEL-UPDATE-STRATEGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration provides possible values for the update strategy on element level.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PersistencyElementLevelUpdateStrategyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PERSISTENCY-ELEMENT-LEVEL-UPDATE-STRATEGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PERSISTENCY-REDUNDANCY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class provides a way to specify in which way redundancy shall be applied on collection level.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PersistencyRedundancyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PERSISTENCY-REDUNDANCY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PGWIDE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies, if the table shall be rendered across the entire page, even if it is placed in side-head layouts.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PgwideEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PGWIDE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PHM-ACTION-LIST-EXECUTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of execution semantics for action lists.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PhmActionListExecutionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PHM-ACTION-LIST-EXECUTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PHM-LOGICAL-OPERATOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of logical expression operators.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PhmLogicalOperatorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PHM-LOGICAL-OPERATOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PHM-RULE-INIT-STATE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of initial states for rules.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PhmRuleInitStateEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PHM-RULE-INIT-STATE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PLATFORM-PHM-ACTION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of available actions to be applied to a platform instance.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PlatformPhmActionTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PLATFORM-PHM-ACTION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PNC-GATEWAY-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the PncGateway roles.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PncGatewayTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PNC-GATEWAY-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PORT-INSTANTIATION-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration describes different option for the instantiation behavior of a PortPrototype.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="PortInstantiationBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PORT-INSTANTIATION-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="POSITIVE-INTEGER">
      <xsd:annotation>
         <xsd:documentation>This is a positive integer which can be denoted in decimal, binary, octal and hexadecimal.
The value is between 0 and 4294967295.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveInteger";xml.xsd.customType="POSITIVE-INTEGER";xml.xsd.pattern="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:POSITIVE-INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="POSITIVE-UNLIMITED-INTEGER">
      <xsd:annotation>
         <xsd:documentation>This is a positive unlimited integer which can be denoted in decimal, binary, octal and hexadecimal.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PositiveUnlimitedInteger";xml.xsd.customType="POSITIVE-UNLIMITED-INTEGER";xml.xsd.pattern="[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:POSITIVE-UNLIMITED-INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PRIMITIVE-IDENTIFIER">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to contain a string. Please note that this meta-class has only been introduced to fix an issue with the generation of attributes on primitives in context with [TR_APRXML_00024].</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PrimitiveIdentifier";xml.xsd.customType="PRIMITIVE-IDENTIFIER";xml.xsd.maxLength="128";xml.xsd.pattern="[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PRIMITIVE-IDENTIFIER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PROCESS-PHM-ACTION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of available actions to be applied to a Process.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="ProcessPhmActionTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PROCESS-PHM-ACTION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PROCESSING-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Kind of processing which has been applied to a data element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ProcessingKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PROCESSING-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PROGRAMMINGLANGUAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Programming language the implementation was created in.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ProgramminglanguageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PROGRAMMINGLANGUAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="PULSE-TEST-ENUM">
      <xsd:annotation>
         <xsd:documentation>This element indicates to the connected Actuator Software component whether the data-element can be used to generate pulse test sequences using the IoHwAbstraction layer</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="PulseTestEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:PULSE-TEST-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RAM-BLOCK-STATUS-CONTROL-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration type defines options for how the management of the ramBlock status is controlled.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RamBlockStatusControlEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RAM-BLOCK-STATUS-CONTROL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RECEIVER-CAPABILITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify how a given ServiceInterface is used from the perspective of a given event receiver.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="ReceiverCapabilityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RECEIVER-CAPABILITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RECORD-LAYOUT-ITERATOR-POINT">
      <xsd:annotation>
         <xsd:documentation>This meta-class denotes a start / endpoint for the iteration of a SwRecordLayoutGroup. It can be an integer or one of the keywords MAX-TEXT-SIZE|ARRAY-SIZE. Note that negative numbers are counted backwards. Therefore e.g. -1 refers to the last value.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RecordLayoutIteratorPoint";xml.xsd.customType="RECORD-LAYOUT-ITERATOR-POINT";xml.xsd.pattern="-?([0-9]+|MAX-TEXT-SIZE|ARRAY-SIZE)";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RECORD-LAYOUT-ITERATOR-POINT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REENTRANCY-LEVEL-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies if and in which kinds of environments an entity is reentrant.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReentrancyLevelEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REENTRANCY-LEVEL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REF">
      <xsd:annotation>
         <xsd:documentation>This primitive denotes a name based reference. For detailed syntax see the xsd.pattern.

* first slash (relative or absolute reference) [optional]
* Identifier  [required]
* a sequence of slashes and Identifiers [optional]

This primitive is used by the meta-model tools to create the references.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Ref";xml.xsd.customType="REF";xml.xsd.pattern="/?[a-zA-Z][a-zA-Z0-9_]{0,127}(/[a-zA-Z][a-zA-Z0-9_]{0,127})*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
         <xsd:appinfo source="constraint_2552">Index attribute is only valid for arrays &#8968;The index attribute in references is valid only if the reference target is an ApplicationArrayElement or if the reference target is an ImplementationDataTypeElement owned by an ImplementationDataType/ImplementationDataTypeElement of category ARRAY and has an attribute maxNumberOfElements/arraySize.&#8971;</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REF--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:REF"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REGULAR-EXPRESSION">
      <xsd:annotation>
         <xsd:documentation>This is a regular expression as defined in 

http://www.w3.org/TR/xmlschema-2

As of now it is still produced as a string in XSD.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RegularExpression";xml.xsd.customType="REGULAR-EXPRESSION";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REGULAR-EXPRESSION--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REMOTING-TECHNOLOGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Remoting technology identifier.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="RemotingTechnologyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REMOTING-TECHNOLOGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REPORT-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration specifies the report status of related events before or after diagnostic event initialization.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ReportBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REPORT-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REQUEST-METHOD-ENUM">
      <xsd:annotation>
         <xsd:documentation>Available request methods for HTTPs.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RequestMethodEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REQUEST-METHOD-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REQUEST-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the DiagnosticMessage request types.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="RequestTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REQUEST-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RESOLUTION-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This specifies if the content of the xref element follow a dedicated resolution policy.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ResolutionPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RESOLUTION-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RESUME-POSITION">
      <xsd:annotation>
         <xsd:documentation>Defines, where a schedule table shall be proceeded in case if it has been interrupted by a run-once table or MRF/SRF.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ResumePosition"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RESUME-POSITION--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="REVISION-LABEL-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents a revision label which identifies an engineering object. It represents a pattern which 

* requires three integers representing from left to right MajorVersion, MinorVersion, PatchVersion.

* may add an application specific suffix separated by one of ".", "_", ";".

Legal patterns are for example:

4.0.0
4.0.0.1234565
4.0.0_vendor specific;13
4.0.0;12</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RevisionLabelString";xml.xsd.customType="REVISION-LABEL-STRING";xml.xsd.pattern="[0-9]+\.[0-9]+\.[0-9]+([\._;].*)?";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:REVISION-LABEL-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RPT-ACCESS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Determines the access rights to a data object with respect to rapid prototyping.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RptAccessEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RPT-ACCESS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RPT-ENABLER-IMPL-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Describes the required / implemented usage of enabler flags for data access in the code.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RptEnablerImplTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RPT-ENABLER-IMPL-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RPT-EXECUTION-CONTROL-ENUM">
      <xsd:annotation>
         <xsd:documentation>Determines rapid prototyping preparation of an ExecutableEntity.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RptExecutionControlEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RPT-EXECUTION-CONTROL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RPT-PREPARATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Determines the RP preparation level for access to VariableDataPrototypes within the generated RTE implementation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RptPreparationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RPT-PREPARATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RPT-SERVICE-POINT-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies whether the invocation of ExecutableEntitys due to activation of specific RteEvents/BswEvents requires the insertion of Service Points.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RptServicePointEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RPT-SERVICE-POINT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RUN-MODE">
      <xsd:annotation>
         <xsd:documentation>The schedule table can be executed in two different modes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RunMode"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RUN-MODE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RUNTIME-ADDRESS-CONFIGURATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the protocol to be used to obtain the address information.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RuntimeAddressConfigurationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RUNTIME-ADDRESS-CONFIGURATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="RX-ACCEPT-CONTAINED-I-PDU-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines whether this ContainerIPdu has a fixed set of containedIPdus assigned for reception.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="RxAcceptContainedIPduEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:RX-ACCEPT-CONTAINED-I-PDU-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SCALE-CONSTR-VALIDITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the possible values of a scale.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ScaleConstrValidityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SCALE-CONSTR-VALIDITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SCHEDULING-POLICY-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class provides a set of settings that allow for the specification of a scheduling policy.

For a detailed description of the scheduling policies defined in the context of this meta-class, please refer to The Open Group Base Specifications Issue 7, IEEE Std 1003.1, 2013 Edition.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="SchedulingPolicyKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SCHEDULING-POLICY-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SEARCH-BEHAVIOR-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class allows for the definition of a dedicated search behavior from the application's point of view.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="SearchBehaviorEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SEARCH-BEHAVIOR-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SEC-OC-JOB-SEMANTIC-ENUM">
      <xsd:annotation>
         <xsd:documentation>List of cryptographic routines supported by SecOC.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="SecOcJobSemanticEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SEC-OC-JOB-SEMANTIC-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SECTION-INITIALIZATION-POLICY-TYPE">
      <xsd:annotation>
         <xsd:documentation>SectionInitializationPolicyType describes the intended initialization of MemorySections. 
The following values are standardized in AUTOSAR Methodology:

* '''NO-INIT''': No initialization and no clearing is performed. Such data elements shall not be read before one has written a value into it.
* '''INIT''': To be used for data that are initialized by every reset to the specified value (initValue). 
* '''POWER-ON-INIT''': To be used for data that are initialized by "Power On" to the specified value (initValue). Note: there might be several resets between power on resets. 
* '''CLEARED''': To be used for data that are initialized by every reset to zero. 
* '''POWER-ON-CLEARED''': To be used for data that are initialized by "Power On" to zero. Note: there might be several resets between power on resets.

Please note that the values are defined similar to the representation of enumeration types in the XML schema to ensure backward compatibility.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SectionInitializationPolicyType";xml.xsd.customType="SECTION-INITIALIZATION-POLICY-TYPE";xml.xsd.type="NMTOKEN"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SECTION-INITIALIZATION-POLICY-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SECURED-PDU-HEADER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the header which will be inserted into the SecuredIPdu.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SecuredPduHeaderEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SECURED-PDU-HEADER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SENDER-CAPABILITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class represents the ability to specify how a given ServiceInterface is used from the perspective of a given event sender.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="SenderCapabilityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SENDER-CAPABILITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SERVER-ARGUMENT-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This defines how the argument type of the servers RunnableEntity is implemented.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ServerArgumentImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SERVER-ARGUMENT-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SERVICE-PROVIDER-ENUM">
      <xsd:annotation>
         <xsd:documentation>This represents a list of possible service providers</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ServiceProviderEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SERVICE-PROVIDER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SEVERITY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of severity levels.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SeverityEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SEVERITY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-CONTENT-ENUM">
      <xsd:annotation>
         <xsd:documentation>This specifies if the content of the xref element shall be rendered.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowContentEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-CONTENT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-ALIAS-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the alias names of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceAliasNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-ALIAS-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-CATEGORY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the category of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceCategoryEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-CATEGORY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-LONG-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the long name of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceLongNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-LONG-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-NUMBER-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the number (e.g. chapter number) of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceNumberEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-NUMBER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-PAGE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the page numer of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourcePageEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-PAGE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-SHORT-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the short name of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceShortNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-SHORT-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-RESOURCE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the type (e.g. derived from the class) of the reference target shall be rendered with the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowResourceTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-RESOURCE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SHOW-SEE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies if the word "see" shall be rendered before the xref.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ShowSeeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SHOW-SEE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SIGNAL-FAN-ENUM">
      <xsd:annotation>
         <xsd:documentation>Signal Fan inside the Composition Component Type.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SignalFanEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SIGNAL-FAN-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SO-AD-CONNECTOR-TYPE">
      <xsd:annotation>
         <xsd:documentation>Availability of protocol plug-ins. Entries in the Socket and PDU Routing Tables.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="SoAdConnectorType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SO-AD-CONNECTOR-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SO-AD-PROTOCOL-TYPE">
      <xsd:annotation>
         <xsd:documentation>Transport Protocols above IP.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";mmt.qualifiedName="SoAdProtocolType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SO-AD-PROTOCOL-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SOFTWARE-CLUSTER-DIAGNOSTIC-ADDRESS-SEMANTICS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class defines a list of semantics for the interpretation of diagnostic addresses in the context of a SoftwareCluster.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="SoftwareClusterDiagnosticAddressSemanticsEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SOFTWARE-CLUSTER-DIAGNOSTIC-ADDRESS-SEMANTICS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SOMEIP-MESSAGE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Depending on the style of the communication different message types shall be set in the header of a SOME/IP message.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SOMEIPMessageTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SOMEIP-MESSAGE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SOMEIP-TRANSFORMER-SESSION-HANDLING-ENUM">
      <xsd:annotation>
         <xsd:documentation>Enables or disable session handling for SOME/IP transformer</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SOMEIPTransformerSessionHandlingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SOMEIP-TRANSFORMER-SESSION-HANDLING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="STANDARD-NAME-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration lists all allowed standard abbreviations.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="standardNameEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STANDARD-NAME-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="STORAGE-CONDITION-STATUS-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration specifies the initial status for enable or disable of storage of a diagnostic event.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="StorageConditionStatusEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STORAGE-CONDITION-STATUS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="STRING">
      <xsd:annotation>
         <xsd:documentation>This represents a String in which white-space must be normalized before processing. For example: in order to compare two Strings:

* leading and trailing white-space needs to be removed
* consecutive white-space (blank, cr, lf, tab) needs to be replaced by one blank.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="String";xml.xsd.customType="STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SUPPORT-BUFFER-LOCKING-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration represents the ability to define the buffer locking behavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SupportBufferLockingEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SUPPORT-BUFFER-LOCKING-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SUPSCRIPT">
      <xsd:annotation>
         <xsd:documentation>This is text which is rendered superscript or subscript depending on the role.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="Superscript";xml.xsd.customType="SUPSCRIPT";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SUPSCRIPT--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SW-CALIBRATION-ACCESS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Determines the access rights to a data object w.r.t. measurement and calibration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwCalibrationAccessEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-CALIBRATION-ACCESS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SW-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the implementation strategy with respect to consistency mechanisms of variables.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SW-SERVICE-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>This specifies the legal values for the implementation policies for services (in AUTOSAR: BswModuleEntry-s).</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-SERVICE-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SW-SERVICE-REENTRANCE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the legal values for reentrancy of services.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwServiceReentranceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-SERVICE-REENTRANCE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SW-VARIABLE-ACCESS-IMPL-POLICY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Detailed access policy for variables, for which data consistency is implemented via messages.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwVariableAccessImplPolicyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SW-VARIABLE-ACCESS-IMPL-POLICY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE">
      <xsd:annotation>
         <xsd:documentation>There are two different SwcToEcuMapping constraints: dedicated mapping and exclusive mapping.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="removed";atp.StatusRevisionBegin="4.3.0";mmt.qualifiedName="SwcToEcuMappingConstraintType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SWC-TO-ECU-MAPPING-CONSTRAINT-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SWC-TO-SWC-OPERATION-ARGUMENTS-DIRECTION-ENUM">
      <xsd:annotation>
         <xsd:documentation>Direction addressed by this  element.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SwcToSwcOperationArgumentsDirectionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SWC-TO-SWC-OPERATION-ARGUMENTS-DIRECTION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SYMBOL-STRING">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to contain a string plus an additional namePattern. Please note that this meta-class has only been introduced to fix an issue with the backwards compatibility between R4.0.3 and R4.1.1 in the context of McDataInstance</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SymbolString";xml.xsd.customType="SYMBOL-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SYMBOL-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:SYMBOL-STRING"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="SYNCHRONIZATION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the type of the synchronization timing constraint.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="SynchronizationTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:SYNCHRONIZATION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TABLE-SEPARATOR-STRING">
      <xsd:annotation>
         <xsd:documentation>This represents the ability to denote a separator string within an OASIS exchange table.

* '''0''': no line is displayed

* '''1''': line is displayed</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TableSeparatorString";xml.xsd.customType="TABLE-SEPARATOR-STRING";xml.xsd.pattern="[0-1]";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TABLE-SEPARATOR-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventBswInternalBehavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventBswInternalBehaviorTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-BSW-INTERNAL-BEHAVIOR-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-BSW-MODE-DECLARATION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventBswModeDeclaration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventBswModeDeclarationTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-BSW-MODE-DECLARATION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-BSW-MODULE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventBswModule.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventBswModuleTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-BSW-MODULE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-FRAME-ETHERNET-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventFrameEthernet.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventFrameEthernetTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-FRAME-ETHERNET-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-FRAME-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventFrame.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventFrameTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-FRAME-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-I-PDU-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventIPdu.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventIPduTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-I-PDU-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-I-SIGNAL-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventISignal.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventISignalTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-I-SIGNAL-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-MODE-DECLARATION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventModeDeclaration</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventModeDeclarationTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-MODE-DECLARATION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-OPERATION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventOperation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventOperationTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-OPERATION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventSwcInternalBehavior.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventSwcInternalBehaviorTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-SWC-INTERNAL-BEHAVIOR-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-TRIGGER-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventTrigger.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventTriggerTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-TRIGGER-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This is used to describe the specific event type of a TDEventVariableDataPrototype</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TDEventVariableDataPrototypeTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TD-EVENT-VARIABLE-DATA-PROTOTYPE-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TIME-SYNC-TECHNOLOGY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Timesynchronization. Server/Client configuration.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TimeSyncTechnologyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TIME-SYNC-TECHNOLOGY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TIME-SYNCHRONIZATION-KIND-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines the possible kinds of TimeSynchronizationInterfaces.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="TimeSynchronizationKindEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TIME-SYNCHRONIZATION-KIND-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TIME-VALUE">
      <xsd:annotation>
         <xsd:documentation>This primitive type is taken for expressing time values. The numerical value is supposed to be interpreted in the physical unit second.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TimeValue";xml.xsd.customType="TIME-VALUE";xml.xsd.type="double"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TIME-VALUE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TLS-VERSION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This meta-class has the ability to identify a specific version of the transport-layer security (TLS) protocol.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="TlsVersionEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TLS-VERSION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TP-ACK-TYPE">
      <xsd:annotation>
         <xsd:documentation>Type of Acknowledgement.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TpAckType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TP-ACK-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TRANSFER-PROPERTY-ENUM">
      <xsd:annotation>
         <xsd:documentation>Transfer Properties of a Signal.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TransferPropertyEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TRANSFER-PROPERTY-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TRANSFORMER-CLASS-ENUM">
      <xsd:annotation>
         <xsd:documentation>Specifies the transformer class of a transformer.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TransformerClassEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TRANSFORMER-CLASS-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TRANSPORT-LAYER-PROTOCOL-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration allows to choose a TCP/IP transport layer protocol.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="TransportLayerProtocolEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TRANSPORT-LAYER-PROTOCOL-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TRIGGER-MODE">
      <xsd:annotation>
         <xsd:documentation>IPduM can be configured to send a transmission request for the new multiplexed I-PDU to the PDU-Router because of conditions/ modes.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TriggerMode"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TRIGGER-MODE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="TTCAN-TRIGGER-TYPE">
      <xsd:annotation>
         <xsd:documentation>This type lists all trigger types for a time window.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="TtcanTriggerType"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:TTCAN-TRIGGER-TYPE--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="UDP-CHECKSUM-CALCULATION-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines the UDP checksum calculation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UdpChecksumCalculationEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:UDP-CHECKSUM-CALCULATION-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="UDP-COLLECTION-TRIGGER-ENUM">
      <xsd:annotation>
         <xsd:documentation>Defines whether the ServiceInterface element (event or method) contributes to the triggering of the udp data transmission if data collection is enabled.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="UdpCollectionTriggerEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:UDP-COLLECTION-TRIGGER-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="UNLIMITED-INTEGER">
      <xsd:annotation>
         <xsd:documentation>An instance of UnlimitedInteger is an element in the set of integer numbers ( ..., -2, -1, 0, 1, 2, ...). 

The range is limited by constraint 2534.

The value can be expressed in decimal, octal, hexadecimal and binary representation. Negative numbers can only be expressed in decimal notation.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UnlimitedInteger";xml.xsd.customType="UNLIMITED-INTEGER";xml.xsd.pattern="[+\-]?[1-9][0-9]*|0[xX][0-9a-fA-F]+|0[bB][0-1]+|0[0-7]*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:UNLIMITED-INTEGER--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="URI-STRING">
      <xsd:annotation>
         <xsd:documentation>A Uniform Resource Identifier (URI), is a compact string of characters used to identify or name a resource.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="UriString";xml.xsd.customType="URI-STRING";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:URI-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="V-2-X-SUPPORT-ENUM">
      <xsd:annotation>
         <xsd:appinfo source="tags">mmt.qualifiedName="V2xSupportEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:V-2-X-SUPPORT-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="VALIGN-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies vertical alignment.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ValignEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VALIGN-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="VARIABLE-ACCESS-SCOPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumeration defines scopes for communication.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VariableAccessScopeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VARIABLE-ACCESS-SCOPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="VERBATIM-STRING">
      <xsd:annotation>
         <xsd:documentation>This primitive represents a string in which white-space needs to be preserved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VerbatimString";xml.xsd.customType="VERBATIM-STRING";xml.xsd.type="string";xml.xsd.whiteSpace="preserve"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject,primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VERBATIM-STRING--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
            <xsd:attributeGroup ref="AR:VERBATIM-STRING"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="VERBATIM-STRING-PLAIN">
      <xsd:annotation>
         <xsd:documentation>This primitive represents a string in which white-space needs to be preserved. 

This primitive is applied in cases where xml:space attribute cannot be provided by the primitive type but needs to be provided by the container class. 

This is in particular the case in applications of TR_APRXML_00024.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="VerbatimStringPlain";xml.xsd.customType="VERBATIM-STRING-PLAIN";xml.xsd.type="string";xml.xsd.whiteSpace="preserve"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VERBATIM-STRING-PLAIN--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="VIEW-TOKENS">
      <xsd:annotation>
         <xsd:documentation>This primitive specifies the tokens to specify a documentation view.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ViewTokens";xml.xsd.customType="VIEW-TOKENS";xml.xsd.pattern="(-?[a-zA-Z_]+)(( )+-?[a-zA-Z_]+)*";xml.xsd.type="string"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">primitive</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:VIEW-TOKENS--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="WATCHDOG-PHM-ACTION-TYPE-ENUM">
      <xsd:annotation>
         <xsd:documentation>Definition of available actions to be applied to a watchdog.</xsd:documentation>
         <xsd:appinfo source="tags">atp.Status="draft";mmt.RestrictToStandards="AP";mmt.qualifiedName="WatchdogPhmActionTypeEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:WATCHDOG-PHM-ACTION-TYPE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:complexType name="XML-SPACE-ENUM">
      <xsd:annotation>
         <xsd:documentation>This enumerator specifies the fact that white-space shall be preserved.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="XmlSpaceEnum"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">enumeration</xsd:appinfo>
      </xsd:annotation>
      <xsd:simpleContent>
         <xsd:extension base="AR:XML-SPACE-ENUM--SIMPLE">
            <xsd:attributeGroup ref="AR:AR-OBJECT"></xsd:attributeGroup>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType><xsd:attributeGroup name="AR-OBJECT">
      <xsd:annotation>
         <xsd:documentation>Implicit base class of all classes in meta-model.</xsd:documentation>
         <xsd:appinfo source="tags">mmt.qualifiedName="ARObject"</xsd:appinfo>
         <xsd:appinfo source="stereotypes">atpObject</xsd:appinfo>
      </xsd:annotation>
      <xsd:attribute name="S" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Checksum calculated by the user's tool environment for an ArObject. May be used in an own tool environment to determine if an ArObject has changed. The checksum has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the checksum.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="ARObject.checksum";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.name="S"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="T" type="AR:DATE--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>Timestamp calculated by the user's tool environment for an ArObject. May be used in an own tool environment to determine the last change of an ArObject. The timestamp has no semantic meaning for an AUTOSAR model and there is no requirement for AUTOSAR tools to manage the timestamp.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="ARObject.timestamp";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.name="T"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="C-IDENTIFIER">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="BLUEPRINT-VALUE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This represents a description that documents how the value shall be defined when deriving objects from the blueprint.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="CIdentifier.blueprintValue";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the CIdentifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="CIdentifier.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="IDENTIFIER">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="BLUEPRINT-VALUE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This represents a description that documents how the value shall be defined when deriving objects from the blueprint.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="Identifier.blueprintValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the identifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Identifier.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="LIMIT-VALUE">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="INTERVAL-TYPE" type="AR:INTERVAL-TYPE-ENUM--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This specifies the type of the interval. If the attribute is missing the interval shall be considered as "CLOSED".</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Limit.intervalType";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="REF">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="BASE" type="AR:IDENTIFIER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute reflects the base to be used for this reference.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Ref.base";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="BLUEPRINT-VALUE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This represents a description that documents how the value shall be defined when deriving objects from the blueprint.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="Ref.blueprintValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="INDEX" type="AR:POSITIVE-INTEGER--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute supports the use case to point on specific elements in an array. This is in particular required if arrays are used to implement particular data objects.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="Ref.index";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="SYMBOL-STRING">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="NAME-PATTERN" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This attribute represents a pattern which shall be used to define the value of the identifier if the CIdentifier in question is part of a blueprint. 

For more details refer to TPS_StandardizationTemplate.</xsd:documentation>
            <xsd:appinfo source="tags">mmt.qualifiedName="SymbolString.namePattern";pureMM.maxOccurs="1";pureMM.minOccurs="1";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup><xsd:attributeGroup name="VERBATIM-STRING">
      <xsd:annotation></xsd:annotation>
      <xsd:attribute name="BLUEPRINT-VALUE" type="AR:STRING--SIMPLE">
         <xsd:annotation>
            <xsd:documentation>This represents a description that documents how the value shall be defined when deriving objects from the blueprint.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="draft";mmt.qualifiedName="VerbatimString.blueprintValue";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute ref="xml:space">
         <xsd:annotation>
            <xsd:documentation>This attribute is used to signal an intention that in that element, white space should be preserved by applications. It is defined according to xml:space as declared by W3C.</xsd:documentation>
            <xsd:appinfo source="tags">atp.Status="shallBecomeMandatory";mmt.qualifiedName="VerbatimString.xmlSpace";pureMM.maxOccurs="1";pureMM.minOccurs="0";xml.attribute="true";xml.attributeRef="true";xml.name="space";xml.nsPrefix="xml"</xsd:appinfo>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:attributeGroup></xsd:schema>